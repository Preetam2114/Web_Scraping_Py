<?xml version="1.0" encoding="utf-8"?>
<items>
<item><url>https://en.wikipedia.org/wiki/Benevolent_dictator_for_life</url><title>Benevolent dictator for life</title><text><value>
</value><value>
</value><value>For the political term, see </value><value>Benevolent dictatorship</value><value>.</value><value>
</value><value>Benevolent dictator for life</value><value> (</value><value>BDFL</value><value>) is a title given to a small number of </value><value>open-source software development</value><value> leaders, typically project founders who retain the final say in disputes or arguments within the community. The phrase originated in 1995 with reference to </value><value>Guido van Rossum</value><value>, creator of the </value><value>Python programming language</value><value>,</value><value>[1]</value><value>[2]</value><value> while in 2018, Van Rossum stepped down as the leader in the language community after 30 years.
</value><value>Shortly after Van Rossum joined the </value><value>Corporation for National Research Initiatives</value><value>, the term appeared in a follow-up mail by </value><value>Ken Manheimer</value><value> to a meeting trying to create a semi-formal group that would oversee Python development and workshops; this initial use included the additional joke of naming Van Rossum the "First Interim BDFL".</value><value>[1]</value><value> Van Rossum announced on July 12, 2018, that he would be stepping down from BDFL of Python.</value><value>[3]</value><value>
</value><value>BDFL should not be confused with the more common term for open-source leaders, "</value><value>benevolent dictator</value><value>", which was popularized by </value><value>Eric S. Raymond</value><value>'s essay "</value><value>Homesteading the Noosphere</value><value>" (1999).</value><value>[4]</value><value> Among other topics related to </value><value>hacker culture</value><value>, Raymond elaborates on how the nature of open source forces the "dictatorship" to keep itself benevolent, since a strong disagreement can lead to the </value><value>forking</value><value> of the project under the rule of new leaders.
</value><value>
</value><value>Referrant candidates</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>

</value><value>
</value><value>Name
</value><value>
</value><value>Project
</value><value>
</value><value>Type
</value><value>
</value><value>Reference
</value><value>
</value><value>
</value><value>Juan Benet
</value><value>
</value><value>InterPlanetary File System</value><value>
</value><value>
</value><value>Decentralized internet</value><value>
</value><value>
</value><value>[5]</value><value>
</value><value>
</value><value>
</value><value>Sylvain Benner
</value><value>
</value><value>Spacemacs</value><value>
</value><value>
</value><value>Community-driven </value><value>Emacs</value><value> distribution
</value><value>
</value><value>[6]</value><value>
</value><value>
</value><value>
</value><value>Vitalik Buterin</value><value>
</value><value>
</value><value>Ethereum</value><value>
</value><value>
</value><value>Blockchain-based cryptocurrency
</value><value>
</value><value>[7]</value><value>
</value><value>
</value><value>
</value><value>Dries Buytaert</value><value>
</value><value>
</value><value>Drupal</value><value>
</value><value>
</value><value>Content management framework
</value><value>
</value><value>[8]</value><value>
</value><value>
</value><value>
</value><value>Evan Czaplicki
</value><value>
</value><value>Elm</value><value>
</value><value>
</value><value>Front-end web programming language
</value><value>
</value><value>[9]</value><value>[10]</value><value>
</value><value>
</value><value>
</value><value>Jim Deridder</value><value>
</value><value>
</value><value>ROAD</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[11]</value><value>
</value><value>
</value><value>
</value><value>David Heinemeier Hansson</value><value>
</value><value>
</value><value>Ruby on Rails</value><value>
</value><value>
</value><value>Web framework
</value><value>
</value><value>[12]</value><value>
</value><value>
</value><value>
</value><value>Rich Hickey</value><value>
</value><value>
</value><value>Clojure</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[13]</value><value>
</value><value>
</value><value>
</value><value>Adrian Holovaty</value><value> </value><value>and Jacob Kaplan-Moss
</value><value>
</value><value>Django</value><value>
</value><value>
</value><value>Web framework
</value><value>
</value><value>[14]</value><value>
</value><value>
</value><value>
</value><value>Chris Lattner</value><value>
</value><value>
</value><value>Swift</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[15]</value><value>
</value><value>
</value><value>
</value><value>Xavier Leroy</value><value>
</value><value>
</value><value>OCaml</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[16]</value><value>[17]</value><value>
</value><value>
</value><value>
</value><value>Yukihiro Matsumoto (Matz)</value><value>
</value><value>
</value><value>Ruby</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[18]</value><value>
</value><value>
</value><value>
</value><value>Wes McKinney</value><value>
</value><value>
</value><value>Pandas</value><value>
</value><value>
</value><value>Python data analysis library
</value><value>
</value><value>[19]</value><value>
</value><value>
</value><value>
</value><value>Anthony Minessale II
</value><value>
</value><value>FreeSWITCH</value><value>
</value><value>
</value><value>Realtime communications framework
</value><value>
</value><value>[20]</value><value>
</value><value>
</value><value>
</value><value>Bram Moolenaar</value><value>
</value><value>
</value><value>Vim</value><value>
</value><value>
</value><value>Text editor
</value><value>
</value><value>[21]</value><value>
</value><value>
</value><value>
</value><value>Matt Mullenweg</value><value>
</value><value>
</value><value>WordPress</value><value>
</value><value>
</value><value>Content management framework
</value><value>
</value><value>[22]</value><value>
</value><value>
</value><value>
</value><value>Martin Odersky</value><value>
</value><value>
</value><value>Scala</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[23]</value><value>
</value><value>
</value><value>
</value><value>Taylor Otwell
</value><value>
</value><value>Laravel</value><value>
</value><value>
</value><value>Web framework
</value><value>
</value><value>[24]</value><value>[25]</value><value>
</value><value>
</value><value>
</value><value>Theo de Raadt</value><value>
</value><value>
</value><value>OpenBSD</value><value>
</value><value>
</value><value>Unix</value><value>-like operating system
</value><value>
</value><value>[26]</value><value>
</value><value>
</value><value>
</value><value>Daniel Robbins</value><value>
</value><value>
</value><value>Funtoo Linux</value><value>
</value><value>
</value><value>Linux distribution
</value><value>
</value><value>[27]</value><value>
</value><value>
</value><value>
</value><value>Ton Roosendaal</value><value>
</value><value>
</value><value>Blender</value><value>
</value><value>
</value><value>3D computer graphics software
</value><value>
</value><value>[28]</value><value>
</value><value>
</value><value>
</value><value>Sébastien Ros
</value><value>
</value><value>Orchard Project</value><value>
</value><value>
</value><value>Content management system
</value><value>
</value><value>[29]</value><value>
</value><value>
</value><value>
</value><value>Mark Shuttleworth</value><value>
</value><value>
</value><value>Ubuntu</value><value>
</value><value>
</value><value>Linux distribution
</value><value>
</value><value>[30]</value><value>
</value><value>
</value><value>
</value><value>Don Syme</value><value>
</value><value>
</value><value>F#</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[31]</value><value>
</value><value>
</value><value>
</value><value>Linus Torvalds</value><value>
</value><value>
</value><value>Linux</value><value>
</value><value>
</value><value>Operating system kernel
</value><value>
</value><value>[12]</value><value>[32]</value><value>
</value><value>
</value><value>
</value><value>José Valim
</value><value>
</value><value>Elixir</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[33]</value><value>
</value><value>
</value><value>
</value><value>Pauli Virtanen
</value><value>
</value><value>SciPy</value><value>
</value><value>
</value><value>Python</value><value> library used for scientific and technical computing
</value><value>
</value><value>[34]</value><value>[35]</value><value>
</value><value>
</value><value>
</value><value>Patrick Volkerding</value><value>
</value><value>
</value><value>Slackware</value><value>
</value><value>
</value><value>Linux distribution
</value><value>
</value><value>[36]</value><value>
</value><value>
</value><value>
</value><value>Nathan Voxland
</value><value>
</value><value>Liquibase</value><value>
</value><value>
</value><value>Database schema management
</value><value>
</value><value>[37]</value><value>
</value><value>
</value><value>
</value><value>Shaun Walker
</value><value>
</value><value>DotNetNuke</value><value>
</value><value>
</value><value>Web application framework
</value><value>
</value><value>[38]</value><value>
</value><value>
</value><value>
</value><value>Larry Wall</value><value>
</value><value>
</value><value>Perl</value><value>
</value><value>
</value><value>Programming language
</value><value>
</value><value>[39]</value><value>
</value><value>
</value><value>
</value><value>Jeremy Soller</value><value>[40]</value><value>
</value><value>
</value><value>Redox</value><value>
</value><value>
</value><value>Operating system
</value><value>
</value><value>[41]</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Guido van Rossum (July 31, 2008). </value><value>"Origin of BDFL"</value><value>. Artima.com. </value><value>Archived</value><value> from the original on July 21, 2012</value><value>. Retrieved </value><value>August 1,</value><value> 2008</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python Creator Scripts Inside Google"</value><value>. </value><value>eWeek</value><value>. March 6, 2006. </value><value>Archived</value><value> from the original on August 9, 2018</value><value>. Retrieved </value><value>May 13,</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Van Rossum, Guido (July 12, 2018). </value><value>"Transfer of power"</value><value>. </value><value>mail.python.org</value><value>. </value><value>Archived</value><value> from the original on July 12, 2018</value><value>. Retrieved </value><value>August 9,</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Eric S. Raymond (2000). </value><value>"Homesteading the Noosphere § Project Structures and Ownership"</value><value>. </value><value>Eric S. Raymond's Home Page</value><value>. </value><value>Archived</value><value> from the original on July 1, 2012</value><value>. Retrieved </value><value>August 1,</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Understanding the IPFS White Paper part 2"</value><value>. Retrieved </value><value>2017-08-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Spacemacs COMMUNITY.org"</value><value>. Retrieved </value><value>2017-08-24</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"</value><value>Ethereum's Boy King Is Thinking About Giving Up the Mantle</value><value>"</value><value>
</value><value>
</value><value>^</value><value> </value><value>Randy Fay, "</value><value>How Do Open Source Communities Govern Themselves?</value><value>"</value><value>
</value><value>
</value><value>^</value><value> </value><value>"56: Ember vs. Elm: The Showdown with Philip Poots | The Frontside Podcast"</value><value>. </value><value>The Frontside Podcast</value><value>. Retrieved </value><value>2017-08-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>elm-conf (2016-09-19), </value><value>"Code is the Easy Part" by Evan Czaplicki</value><value>, retrieved </value><value>2017-08-14</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Art of Ballistic Programming"</value><value>. Archived from </value><value>the original</value><value> on June 17, 2013.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Constine, Josh (December 7, 2012). </value><value>"Dropbox Hires Away Google's Guido Van Rossum, The Father Of Python"</value><value>. TechCrunch</value><value>. Retrieved </value><value>June 1,</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Clojure JIRA Workflow"</value><value>. Retrieved </value><value>3 October</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Adrian and Jacob retiring as Django BDFLs"</value><value>. Adrian Holovaty. January 12, 2014</value><value>. Retrieved </value><value>June 14,</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Apple Launches Swift, A New Programming Language For Writing iOS And OS X Apps"</value><value>. Retrieved </value><value>2018-04-10</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A History of OCaml | OCaml.org"</value><value>. Retrieved </value><value>2015-09-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"OCaml Infrastructure mailing list"</value><value>. Retrieved </value><value>2015-09-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A Ruby Design Process"</value><value>. Retrieved </value><value>2016-04-17</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"pandas 0.20.3 documentation: Tutorials"</value><value>. Retrieved </value><value>2017-07-24</value><value>.</value><value> "Wes McKinney's (pandas BDFL) blog"</value><value>
</value><value>
</value><value>^</value><value> </value><value>"FreeSWITCH 1.6 Cookbook"</value><value>. Retrieved </value><value>2018-07-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Why Neovim is Better than Vim"</value><value>. Retrieved </value><value>30 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Thesis, Automattic, and WordPress | Post Status"</value><value>. Retrieved </value><value>2015-07-24</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Programming in Scala Leaps onto the World Stage!"</value><value>. Retrieved </value><value>2015-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Taylor Otwell, Twitter"</value><value>. Taylor Otwell. October 9, 2014</value><value>. Retrieved </value><value>October 9,</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Taylor Otwell, Creator of the Laravel PHP Framework"</value><value>. August 5, 2014</value><value>. Retrieved </value><value>August 5,</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Hildebrand, Matthew (July  5, 2005). </value><value>"Interview: Theo de Raadt on Industry and Free Software"</value><value>. </value><value>The Epoch Times</value><value>. The Epoch Times. Archived from </value><value>the original</value><value> on June 21, 2015</value><value>. Retrieved </value><value>June 20,</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Welcome to Funtoo Linux"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Developer Intro/Overview"</value><value>. Retrieved </value><value>20 July</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Orchard Project Steering Committee"</value><value>. Archived from </value><value>the original</value><value> on August 12, 2015.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ubuntu carves niche in Linux landscape"</value><value>. </value><value>CNET</value><value>. Archived from </value><value>the original</value><value> on 6 November 2015.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Contributing to the F# Language and Compiler"</value><value>. Retrieved </value><value>29 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Dee-Ann LeBlanc (31 July 2006). </value><value>Linux For Dummies</value><value> (7th ed.). John Wiley &amp; Sons. p. 15. </value><value>ISBN</value><value> </value><value>978-0-470-04793-4</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Elixir Companies"</value><value>. Retrieved </value><value>2017-11-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SciPy 1.0.0"</value><value>. Retrieved </value><value>2017-10-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SciPy project governance"</value><value>. Retrieved </value><value>2017-10-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Stories of Linux: A Look at Slackware Linux"</value><value>. </value><value>linux.com</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"User and Developer Community | Post Status"</value><value>. Retrieved </value><value>2015-08-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Book: Building Websites with DotNetNuke 5, Michael Washington and Ian Lackey, Packt Publishing. Page 14 "The core team comprises individuals invited to join the team by Shaun Walker, whom they affectionately call the "Benevolent Dictator"."</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Art of Ballistic Programming"</value><value>. Archived from </value><value>the original</value><value> on June 17, 2013.</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://gitlab.redox-os.org/jackpot51</value><value>
</value><value>
</value><value>^</value><value> </value><value>"CONTRIBUTING.md · master · redox-os / redox"</value><value>.</value><value>
</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 14 December 2018, at 08:45</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/InterPlanetary_File_System</url><title>InterPlanetary File System</title><text><value>content-addressable, peer-to-peer hypermedia distribution protocol</value><value>
</value><value>This article </value><value>may be too technical for most readers to understand</value><value>. Please </value><value>help improve it</value><value> to </value><value>make it understandable to non-experts</value><value>, without removing the technical details.  </value><value>(May 2016)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>InterPlanetary File System</value><value>Original author(s)</value><value>Juan Benet</value><value> and </value><value>Protocol Labs</value><value>Developer(s)</value><value>Protocol Labs</value><value>Stable release</value><value>0.4.17
   / 27 July 2018</value><value>; 4 months ago</value><value> (</value><value>2018-07-27</value><value>)</value><value>
</value><value>Repository</value><value>github</value><value>.com</value><value>/ipfs</value><value>/ipfs</value><value>Written in</value><value>Protocol implementations</value><value>: </value><value>Go</value><value> (reference implementation), </value><value>JavaScript</value><value>, </value><value>C</value><value>,</value><value>[1]</value><value> </value><value>Python</value><value>Client libraries</value><value>: Go, </value><value>Java</value><value>, JavaScript, Python, Scala, Haskell, Swift, Common Lisp, Rust, Ruby, PHP, C#, Erlang</value><value>Operating system</value><value>FreeBSD</value><value>, </value><value>Linux</value><value>, </value><value>macOS</value><value>, </value><value>Windows</value><value>Available in</value><value>Go</value><value>, </value><value>JavaScript</value><value>, </value><value>Python</value><value>Type</value><value>Protocol</value><value>, </value><value>distributed file system</value><value>, </value><value>content delivery network</value><value>License</value><value>MIT license</value><value>Website</value><value>ipfs.io</value><value>
</value><value>Part of </value><value>a series</value><value> on</value><value>File sharing</value><value>
Technologies</value><value>
</value><value>Peer to peer</value><value>
</value><value>File hosting services</value><value>
</value><value>Web hosting</value><value>
</value><value>WebRTC</value><value>
</value><value>
Networks and protocols</value><value>
</value><value>BitTorrent</value><value>
</value><value>Dat</value><value>
</value><value>Direct Connect</value><value>
</value><value>eDonkey</value><value>
</value><value>Filecoin</value><value>
</value><value>Freenet</value><value>
</value><value>GNUnet</value><value>
</value><value>Gnutella</value><value> / </value><value>(2)</value><value>
</value><value>I2P</value><value>
</value><value>IPFS</value><value>
</value><value>RetroShare</value><value>
</value><value>WASTE</value><value>
</value><value>WebTorrent</value><value>
</value><value>ZeroNet</value><value>
</value><value>
Development and societal aspects</value><value>
</value><value>Timeline</value><value>
</value><value>Legality</value><value>
</value><value>BitTorrent issues</value><value>
</value><value>
Non-public file sharing</value><value>
</value><value>Anonymous P2P</value><value>
</value><value>Darknet</value><value>
</value><value>Friend-to-friend</value><value>
</value><value>Private P2P</value><value>
</value><value>Sneakernet</value><value>
</value><value>VPN</value><value>
</value><value>
Websites and services</value><value>
</value><value>1337x</value><value>
</value><value>BitChute</value><value>
</value><value>ExtraTorrent</value><value>
</value><value>isoHunt</value><value>
</value><value>KickassTorrents</value><value>
</value><value>Nyaa Torrents</value><value>
</value><value>OpenBitTorrent</value><value>
</value><value>RARBG</value><value>
</value><value>The Pirate Bay</value><value>
</value><value>Torrent Project</value><value>
</value><value>
Clients</value><value>
</value><value>qBittorrent</value><value>
</value><value>Tixati</value><value>
</value><value>Transmission</value><value>
</value><value>μTorrent</value><value>
</value><value>WebTorrent Desktop</value><value>
</value><value>Streaming</value><value>
</value><value>Butter Project</value><value>
</value><value>Popcorn Time</value><value>
</value><value>Torrents-Time</value><value>
</value><value>
Academic/scholarly</value><value>
</value><value>ICanHazPDF</value><value>
</value><value>Internet Archive</value><value>
</value><value>Library Genesis</value><value>
</value><value>Sci-Hub</value><value>
</value><value>
By country or region</value><value>
</value><value>Canada</value><value>
</value><value>Japan</value><value>
</value><value>Singapore</value><value>
</value><value>UK</value><value>
</value><value>USA</value><value>
</value><value>
Related</value><value>
</value><value>Comparison of BitTorrent clients</value><value>
</value><value>Comparison of BitTorrent sites</value><value>
</value><value>Copyright infringement</value><value>
</value><value>DRM</value><value>
</value><value>Internet activism</value><value>
</value><value>Internet Party</value><value>
</value><value>Opposition to copyright</value><value>
</value><value>PeerBlock</value><value>
</value><value>Pirate Parties International</value><value>
</value><value>Pirate Party</value><value>
</value><value>Sharing economy</value><value>
</value><value>v</value><value>t</value><value>e</value><value>
</value><value>InterPlanetary File System</value><value> (</value><value>IPFS</value><value>) is a </value><value>protocol</value><value> and network designed to create a </value><value>content-addressable</value><value>, </value><value>peer-to-peer</value><value> method of storing and sharing </value><value>hypermedia</value><value> in a </value><value>distributed file system</value><value>.</value><value>[2]</value><value> IPFS was initially designed by </value><value>Juan Benet</value><value>, and is now an </value><value>open-source</value><value> project developed with help from the community.</value><value>[3]</value><value>[4]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Overview</value><value>
</value><value>3</value><value> </value><value>Merkle data format</value><value>
</value><value>4</value><value> </value><value>Notable users</value><value>
</value><value>5</value><value> </value><value>See also</value><value>
</value><value>6</value><value> </value><value>References</value><value>
</value><value>7</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In 2014, the IPFS protocol took advantage of the </value><value>Bitcoin</value><value> </value><value>blockchain</value><value> </value><value>protocol</value><value> and network infrastructure in order to store unalterable data, remove duplicated files across the network, and obtain address information for accessing storage nodes to search for files in the network.</value><value>[5]</value><value>[2]</value><value>
</value><value>Implementations in </value><value>Go</value><value>[6]</value><value> and </value><value>JavaScript</value><value>[7]</value><value> exist, and a </value><value>Python</value><value> implementation is in progress.</value><value>[8]</value><value> The Go implementation is considered to be the </value><value>reference implementation</value><value>[9]</value><value> while formal </value><value>specifications</value><value> are developed.</value><value>[10]</value><value>
</value><value>
</value><value>Overview</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>IPFS is a peer-to-peer distributed file system that seeks to connect all computing devices with the same system of files. In some ways, IPFS is similar to the </value><value>World Wide Web</value><value>, but IPFS could be seen as a single </value><value>BitTorrent</value><value> swarm, exchanging objects within one </value><value>Git</value><value> repository. In other words, IPFS provides a high-throughput, content-addressed </value><value>block storage</value><value> model, with content-addressed </value><value>hyperlinks</value><value>.</value><value>[11]</value><value> This forms a generalized </value><value>Merkle</value><value> </value><value>directed acyclic graph</value><value> (DAG). IPFS combines a </value><value>distributed hash table</value><value>, an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other not to tamper with data in transit.</value><value>[12]</value><value> Distributed Content Delivery saves bandwidth and prevents </value><value>DDoS attacks</value><value>, which HTTP struggles with.</value><value>[5]</value><value>
</value><value>The filesystem can be accessed in a variety of ways, including via </value><value>FUSE</value><value> and over </value><value>HTTP</value><value>.</value><value>[11]</value><value>  A local file can be added to the IPFS filesystem, making it available to the world. Files are identified by their hashes, so it's caching-friendly. They are distributed using a BitTorrent-based protocol.  Other users viewing the content aid in serving the content to others on the network.  IPFS has a name service called IPNS, a global namespace based on </value><value>PKI</value><value>, serves to build trust chains, is compatible with other NSes and can map </value><value>DNS</value><value>, .onion, .bit, etc. to IPNS.</value><value>[13]</value><value>
</value><value>
</value><value>  </value><value>The Wikipedia logo has an IPFS hash with the following code: QmRW3V9znzFW9M5FYbitSEvd5dQrPWGvPvgQD6LM22Tv8D. It can be accessed with that hash over HTTP by a </value><value>public gateway</value><value> or a </value><value>local IPFS instance</value><value>
</value><value>Merkle data format</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Merkle tree</value><value>
</value><value>Every </value><value>Merkle</value><value> is a </value><value>directed acyclic graph</value><value> (DAG) because each node is accessed via its name. Each branch of Merkle is the hash of its local contents, naming children by their hash instead of their full contents. So after creation there is no way to edit a node. This prevents cycles (assuming there are no </value><value>hash collisions</value><value>), since one cannot link the first created node to the last node to create the last reference.
</value><value>In general, for any Merkle to create a new branch or verify an existing branch, a hash algorithm is used on some combination of the local contents, such as a list of child hashes and other bytes. A few different hash algorithms are available in IPFS.
</value><value>The data input to any of those hash algorithms is documented.</value><value>[14]</value><value>
</value><value>
</value><value>Notable users</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The </value><value>Catalan independence referendum</value><value>, taking place in September–October 2017, was deemed illegal by the </value><value>Constitutional Court of Spain</value><value> and many related websites were blocked. Subsequently, the Catalan Pirate Party mirrored the website on IPFS to bypass the </value><value>High Court of Justice of Catalonia</value><value> order of blocking.</value><value>[15]</value><value>[16]</value><value>
</value><value>IPFS was used to create a mirror of Wikipedia, which allows people living in jurisdictions where Wikipedia is blocked to access the content of Wikipedia.</value><value>[17]</value><value>  That archived version of Wikipedia is a limited immutable copy that cannot be updated.  Efforts are being made to resolve mutable (updatable) and immutable (permanent archive) systems and interfaces.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>Filecoin</value><value>, also inter-related to IPFS and developed by </value><value>Juan Benet</value><value> and </value><value>Protocol Labs</value><value>, is an IPFS-based </value><value>cooperative storage cloud</value><value>.</value><value>[18]</value><value>
</value><value>"In short: IPFS addresses and moves content; Filecoin is the missing incentive layer."</value><value>[19]</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>Cooperative storage cloud</value><value>
</value><value>Coral Content Distribution Network</value><value>
</value><value>Dat</value><value>
</value><value>Decentralized computing</value><value>
</value><value>Distributed data store</value><value>
</value><value>Distributed hash table</value><value>
</value><value>Freenet</value><value>
</value><value>I2P</value><value>
</value><value>IndieWeb</value><value>
</value><value>List of P2P protocols</value><value>
</value><value>Kademlia</value><value>
</value><value>Namecoin</value><value>
</value><value>OpenBazaar</value><value>
</value><value>Peer-to-peer web hosting</value><value>
</value><value>Self-certifying File System</value><value>
</value><value>Solid (web decentralization)</value><value>
</value><value>ZeroNet</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>Agorise (23 October 2017). </value><value>"c-ipfs: IPFS implementation in C. Why C? Think Bitshares' Stealth backups, OpenWrt routers (decentralize the internet/meshnet!), Android TV, decentralized Media, decentralized websites, decent."</value><value> </value><value>Github.com</value><value>. Retrieved </value><value>25 October</value><value> 2017</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Finley, Kurt (June 20, 2016). </value><value>"The Inventors of the Internet Are Trying to Build a Truly Permanent Web"</value><value>. </value><value>Wired</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The IPFS Project"</value><value>. </value><value>Ipfs.io</value><value>. Retrieved </value><value>11 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"IPFS README - Who designed it?"</value><value>. </value><value>Github.io</value><value>. Retrieved </value><value>11 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"IPFS Protocol Selects Ethereum Over Bitcoin, Prefers Ethereum Dev Community"</value><value>. </value><value>Cointelegraph.com</value><value>. Retrieved </value><value>25 October</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ipfs/go-ipfs"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2017-02-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ipfs/js-ipfs"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2017-02-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ipfs/py-ipfs"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2017-02-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"IPFS Docs"</value><value>. </value><value>ipfs.io</value><value>. Retrieved </value><value>2017-02-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ipfs/specs"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2017-02-13</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Allison, Ian (13 October 2016). </value><value>"Juan Benet of IPFS talks about Filecoin"</value><value>. </value><value>Ibtimes.co.uk</value><value>. Retrieved </value><value>25 October</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"IPFS is the Distributed Web"</value><value>. </value><value>Ipfs.io</value><value>. Retrieved </value><value>27 March</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"IPFS README"</value><value>. </value><value>Github.com</value><value>. Retrieved </value><value>11 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"go-ipfs: IPFS implementation in go"</value><value>. </value><value>GitHub.com</value><value>. 25 October 2017</value><value>. Retrieved </value><value>25 October</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Balcell, Marta Poblet (5 October 2017). </value><value>"Inside Catalonia's cypherpunk referendum"</value><value>. </value><value>Eureka Street</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Hill, Paul (30 September 2017). </value><value>"Catalan referendum app removed from Google Play Store"</value><value>. </value><value>Neowin</value><value>. Retrieved </value><value>2017-10-06</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Dale, Brady (10 May 2017). </value><value>"Turkey Can't Block This Copy of Wikipedia"</value><value>. Observer Media. Archived from </value><value>the original</value><value> on 18 Oct 2017</value><value>. Retrieved </value><value>20 December</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Johnson, Steven (2018-01-16). </value><value>"Beyond the Bitcoin Bubble"</value><value>. </value><value>The New York Times</value><value>. Retrieved </value><value>2018-09-26</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"What is the connection between IPFS and Filecoin?"</value><value>. </value><value>Filecoin.io</value><value>. Retrieved </value><value>2018-11-04</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value>, IPFS.io</value><value>
</value><value>v</value><value>t</value><value>e</value><value>File systems</value><value>
</value><value>Comparison of file systems</value><value>
</value><value>distributed</value><value>
</value><value>Unix filesystem</value><value>
</value><value>Disk</value><value>
</value><value>ADFS</value><value>
</value><value>AdvFS</value><value>
</value><value>Amiga FFS</value><value>
</value><value>Amiga OFS</value><value>
</value><value>APFS</value><value>
</value><value>AthFS</value><value>
</value><value>bcachefs</value><value>
</value><value>BFS
</value><value>Be File System</value><value>
</value><value>Boot File System</value><value>
</value><value>Btrfs</value><value>
</value><value>CVFS</value><value>
</value><value>CXFS</value><value>
</value><value>DFS</value><value>
</value><value>EFS
</value><value>Encrypting File System</value><value>
</value><value>Extent File System</value><value>
</value><value>Episode</value><value>
</value><value>ext</value><value>
</value><value>ext2</value><value>
</value><value>ext3</value><value>
</value><value>ext3cow</value><value>
</value><value>ext4</value><value>
</value><value>FAT</value><value>
</value><value>exFAT</value><value>
</value><value>Files-11</value><value>
</value><value>Fossil</value><value>
</value><value>HAMMER</value><value>
</value><value>HFS</value><value>
</value><value>HFS+</value><value>
</value><value>HPFS</value><value>
</value><value>HTFS</value><value>
</value><value>IBM Spectrum Scale</value><value>
</value><value>JFS</value><value>
</value><value>LFS</value><value>
</value><value>MFS
</value><value>Macintosh File System</value><value>
</value><value>TiVo Media File System</value><value>
</value><value>MINIX</value><value>
</value><value>NetWare File System</value><value>
</value><value>Next3</value><value>
</value><value>NILFS</value><value>
</value><value>NILFS2</value><value>
</value><value>NSS</value><value>
</value><value>NTFS</value><value>
</value><value>OneFS</value><value>
</value><value>PFS</value><value>
</value><value>QFS</value><value>
</value><value>QNX4FS</value><value>
</value><value>ReFS</value><value>
</value><value>ReiserFS</value><value>
</value><value>Reiser4</value><value>
</value><value>Reliance</value><value>
</value><value>Reliance Nitro</value><value>
</value><value>RFS</value><value>
</value><value>SFS</value><value>
</value><value>SNFS</value><value>
</value><value>Soup (Apple)</value><value>
</value><value>Tux3</value><value>
</value><value>UBIFS</value><value>
</value><value>UFS</value><value>
</value><value>VxFS</value><value>
</value><value>WAFL</value><value>
</value><value>Xiafs</value><value>
</value><value>XFS</value><value>
</value><value>Xsan</value><value>
</value><value>zFS</value><value>
</value><value>ZFS</value><value>
</value><value>Optical disc</value><value>
</value><value>HSF</value><value>
</value><value>ISO 9660</value><value>
</value><value>ISO 13490</value><value>
</value><value>UDF</value><value>
</value><value>Flash memory</value><value> and </value><value>SSD</value><value>
</value><value>APFS</value><value>
</value><value>FAT</value><value>
</value><value>exFAT</value><value>
</value><value>CHFS</value><value>
</value><value>TFAT</value><value>
</value><value>FFS2</value><value>
</value><value>F2FS</value><value>
</value><value>HPFS</value><value>
</value><value>JFFS</value><value>
</value><value>JFFS2</value><value>
</value><value>JFS</value><value>
</value><value>LogFS</value><value>
</value><value>NILFS</value><value>
</value><value>NILFS2</value><value>
</value><value>NVFS</value><value>
</value><value>YAFFS</value><value>
</value><value>UBIFS</value><value>
</value><value>Distributed</value><value>
</value><value>CXFS</value><value>
</value><value>GFS2</value><value>
</value><value>Google File System</value><value>
</value><value>OCFS2</value><value>
</value><value>OrangeFS</value><value>
</value><value>PVFS</value><value>
</value><value>QFS</value><value>
</value><value>Xsan</value><value>
</value><value>more...</value><value>
</value><value>NAS</value><value>
</value><value>AFS</value><value> (</value><value>OpenAFS</value><value>)</value><value>
</value><value>AFP</value><value>
</value><value>Coda</value><value>
</value><value>DFS</value><value>
</value><value>Google File System</value><value>
</value><value>IBM Spectrum Scale</value><value>
</value><value>Lustre</value><value>
</value><value>NCP</value><value>
</value><value>NFS</value><value>
</value><value>POHMELFS</value><value>
</value><value>Hadoop</value><value>
</value><value>SMB (CIFS)</value><value>
</value><value>SSHFS</value><value>
</value><value>more...</value><value>
</value><value>Specialized</value><value>
</value><value>Aufs</value><value>
</value><value>AXFS</value><value>
</value><value>Boot File System</value><value>
</value><value>CDfs</value><value>
</value><value>Compact Disc File System</value><value>
</value><value>cramfs</value><value>
</value><value>Davfs2</value><value>
</value><value>FTPFS</value><value>
</value><value>FUSE</value><value>
</value><value>GmailFS</value><value>
</value><value>Lnfs</value><value>
</value><value>LTFS</value><value>
</value><value>NOVA</value><value>
</value><value>MVFS</value><value>
</value><value>SquashFS</value><value>
</value><value>UMSDOS</value><value>
</value><value>OverlayFS</value><value>
</value><value>UnionFS</value><value>
</value><value>WBFS</value><value>
</value><value>Pseudo and </value><value>virtual</value><value>
</value><value>configfs</value><value>
</value><value>devfs</value><value>
</value><value>debugfs</value><value>
</value><value>kernfs</value><value>
</value><value>procfs</value><value>
</value><value>specfs</value><value>
</value><value>sysfs</value><value>
</value><value>tmpfs</value><value>
</value><value>WinFS</value><value>
</value><value>Encrypted</value><value>
</value><value>eCryptfs</value><value>
</value><value>EncFS</value><value>
</value><value>EFS</value><value>
</value><value>Rubberhose</value><value>
</value><value>SSHFS</value><value>
</value><value>ZFS</value><value>
</value><value>Types</value><value>
</value><value>Clustered</value><value>
</value><value>Global</value><value>
</value><value>Grid</value><value>
</value><value>Self-certifying</value><value>
</value><value>Flash</value><value>
</value><value>Journaling</value><value>
</value><value>Log-structured</value><value>
</value><value>Object</value><value>
</value><value>Record-oriented</value><value>
</value><value>Semantic</value><value>
</value><value>Steganographic</value><value>
</value><value>Synthetic</value><value>
</value><value>Versioning</value><value>
</value><value>Features</value><value>
</value><value>Case preservation</value><value>
</value><value>Copy-on-write</value><value>
</value><value>Data deduplication</value><value>
</value><value>Data scrubbing</value><value>
</value><value>Execute in place</value><value>
</value><value>Extent</value><value>
</value><value>File attribute</value><value>
</value><value>Extended file attributes</value><value>
</value><value>File change log</value><value>
</value><value>Fork</value><value>
</value><value>Links
</value><value>Hard</value><value>
</value><value>Symbolic</value><value>
</value><value>Access control</value><value>
</value><value>Access control list</value><value>
</value><value>Filesystem-level encryption</value><value>
</value><value>Permissions</value><value>
</value><value>Modes</value><value>
</value><value>Sticky bit</value><value>
</value><value>Interfaces</value><value>
</value><value>File manager</value><value>
</value><value>File system API</value><value>
</value><value>Installable File System</value><value>
</value><value>Virtual file system</value><value>
</value><value>Lists</value><value>
</value><value>Cryptographic</value><value>
</value><value>Default</value><value>
</value><value>Log-structured</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Peer-to-peer file sharing</value><value>Networks</value><value>,</value><value>protocols</value><value>Centralized</value><value>
</value><value>CuteMX</value><value>
</value><value>OpenNap</value><value>
</value><value>Soribada</value><value>
</value><value>Soulseek</value><value>
</value><value>Decentralized</value><value>
</value><value>Ares</value><value>
</value><value>BitTorrent</value><value>
</value><value>DAT</value><value>
</value><value>eDonkey</value><value>
</value><value>FastTrack</value><value>
</value><value>Fopnu</value><value>
</value><value>Freenet</value><value>
</value><value>GNUnet</value><value>
</value><value>Gnutella</value><value>
</value><value>Gnutella2</value><value>
</value><value>I2P</value><value>
</value><value>IPFS</value><value>
</value><value>Kad</value><value>
</value><value>OpenFT</value><value>
</value><value>Perfect Dark</value><value>
</value><value>RetroShare</value><value>
</value><value>Share</value><value>
</value><value>Tribler</value><value>
</value><value>WebTorrent</value><value>
</value><value>Winny</value><value>
</value><value>ZeroNet</value><value>
</value><value>Historic</value><value>
</value><value>Audiogalaxy</value><value>
</value><value>Entropy</value><value>
</value><value>Kazaa</value><value>
</value><value>LimeWire</value><value>
</value><value>Morpheus</value><value>
</value><value>Overnet</value><value>
</value><value>Napster</value><value>
</value><value>Scour</value><value>
</value><value>WASTE</value><value>
</value><value>WinMX</value><value>
</value><value>Comparisons</value><value>of </value><value>clients</value><value>
</value><value>Advanced Direct Connect</value><value>
</value><value>BitTorrent</value><value>
</value><value>Direct Connect</value><value>
</value><value>eDonkey</value><value>
</value><value>Gnutella</value><value>
</value><value>Gnutella2</value><value>
</value><value>WebTorrent</value><value>
</value><value>Hyperlinks</value><value>
</value><value>eD2k</value><value>
</value><value>Magnet</value><value>
</value><value>Metalink</value><value>
</value><value>Uses</value><value>
</value><value>Backup</value><value>
</value><value>Broadcatching</value><value>
</value><value>Segmented file transfer</value><value>
</value><value>Disk sharing</value><value>
</value><value>game &amp; video sharing</value><value>
</value><value>Image sharing</value><value>
</value><value>Music sharing</value><value>
</value><value>Peercasting</value><value>
</value><value>Sharing software</value><value>
</value><value>Web hosting</value><value> (</value><value>Freesite</value><value>, </value><value>IPFS</value><value>, </value><value>ZeroNet</value><value>)</value><value>
</value><value>Legal aspects</value><value>
</value><value>Concepts</value><value>Privacy</value><value>
</value><value>Anonymous P2P</value><value>
</value><value>Darknet</value><value>
</value><value>Darkweb</value><value>
</value><value>Friend-to-friend</value><value>
</value><value>Open Music Model</value><value>
</value><value>Private P2P</value><value>
</value><value>Tor</value><value>
</value><value>Internal</value><value>technologies</value><value>
</value><value>DHT</value><value>
</value><value>Merkle tree</value><value>
</value><value>NAT traversal</value><value>
</value><value>PEX</value><value>
</value><value>Protocol Encryption</value><value>
</value><value>SHA-1</value><value>
</value><value>Super-seeding</value><value>
</value><value>Tracker</value><value>
</value><value>UDP hole punching</value><value>
</value><value>µTP</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Internet censorship circumvention</value><value> technologies</value><value>Background</value><value>
</value><value>Internet censorship</value><value>
</value><value>Internet censorship in China</value><value>
</value><value>National intranet</value><value>
</value><value>Censorship and blocking technologies
</value><value>IP address blocking</value><value>
</value><value>DNS cache poisoning</value><value>
</value><value>Wordfilter</value><value>
</value><value>Great Firewall of China</value><value>
</value><value>Blocks on specific websites
</value><value>Wikipedia</value><value>
</value><value>Facebook</value><value>
</value><value>Twitter</value><value>
</value><value>Principles</value><value>With a </value><value>proxy server</value><value>
</value><value>P2P</value><value>
</value><value>Web proxies</value><value>
</value><value>SSH</value><value>
</value><value>VPN</value><value>
</value><value>PAC</value><value>
</value><value>Without a proxy server</value><value>
</value><value>HTTPS</value><value>
</value><value>IPv6 transition mechanism</value><value>
</value><value>hosts</value><value>
</value><value>DNSCrypt</value><value>
</value><value>Domain fronting</value><value>
</value><value>Anti-censorship software</value><value>Free software</value><value>
</value><value>Lantern</value><value>
</value><value>Psiphon</value><value>
</value><value>Shadowsocks</value><value>
</value><value>Outline VPN</value><value>
</value><value>GoAgent</value><value>
</value><value>Proprietary software</value><value>
</value><value>Freegate</value><value>
</value><value>Ultrasurf</value><value>
</value><value>Hotspot Shield</value><value>
</value><value>fqrouter</value><value>
</value><value>Xiaoyaoyou</value><value>
</value><value>Huofenghuang</value><value>
</value><value>Garden Networks</value><value>
</value><value>Telex</value><value>
</value><value>FreeBrowser</value><value>
</value><value>CGIProxy</value><value>
</value><value>Proxify</value><value>
</value><value>Browser extensions</value><value>
</value><value>Hongxing</value><value>
</value><value>uProxy</value><value>
</value><value>Anonymity</value><value>Anonymous software</value><value>
</value><value>Tor</value><value>
</value><value>I2P</value><value>
</value><value>JAP</value><value>
</value><value>Flash proxy</value><value>
</value><value>Anonymous P2P</value><value> network</value><value>
</value><value>ZeroNet</value><value>
</value><value>Freenet</value><value>
</value><value>StealthNet</value><value>
</value><value>Relevant organizations</value><value>
</value><value>GreatFire</value><value>
</value><value>FreeWeibo</value><value>
</value><value>FreeBrowser</value><value>
</value><value>Turkey Blocks</value><value>
</value><value>Reference</value><value>
</value><value>Program Think Blog</value><value>
</value><value>Great Cannon</value><value>
</value><value>Strike through</value><value> = the custodians have stopped maintenance</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Cryptocurrencies</value><value>Technology</value><value>
</value><value>Blockchain</value><value>
</value><value>Cryptocurrency tumbler</value><value>
</value><value>Cryptocurrency exchange</value><value>
</value><value>Cryptocurrency wallet</value><value>
</value><value>Cryptographic hash function</value><value>
</value><value>Distributed ledger</value><value>
</value><value>Fork</value><value>
</value><value>Lightning Network</value><value>
</value><value>Smart contract</value><value>
</value><value>Consensus</value><value> mechanisms</value><value>
</value><value>Proof-of-authority</value><value>
</value><value>Proof-of-space</value><value>
</value><value>Proof-of-stake</value><value>
</value><value>Proof-of-work</value><value>
</value><value>Proof-of-work</value><value> currencies</value><value>SHA-256</value><value>-based</value><value>
</value><value>Bitcoin</value><value>
</value><value>Bitcoin Cash</value><value>
</value><value>Counterparty</value><value>
</value><value>MazaCoin</value><value>
</value><value>Namecoin</value><value>
</value><value>NeuCoin</value><value>
</value><value>Nxt</value><value>
</value><value>Peercoin</value><value>
</value><value>Steem</value><value>
</value><value>Titcoin</value><value>
</value><value>Ethash</value><value>-based</value><value>
</value><value>Ethereum</value><value>
</value><value>Ethereum Classic</value><value>
</value><value>Scrypt</value><value>-based</value><value>
</value><value>Auroracoin</value><value>
</value><value>Bitconnect</value><value>
</value><value>Bitcoin Gold</value><value>
</value><value>Coinye</value><value>
</value><value>Dogecoin</value><value>
</value><value>Gridcoin</value><value>
</value><value>Litecoin</value><value>
</value><value>PotCoin</value><value>
</value><value>Equihash</value><value>-based</value><value>
</value><value>Bitcoin Private</value><value>
</value><value>Zcash</value><value>
</value><value>Zcoin</value><value>
</value><value>CryptoNote</value><value>-based</value><value>
</value><value>Monero</value><value>
</value><value>X11</value><value>-based</value><value>
</value><value>Dash</value><value>
</value><value>Petro</value><value>
</value><value>Lyra2</value><value>-based</value><value>
</value><value>Taler</value><value>
</value><value>Other</value><value>
</value><value>Verge</value><value>
</value><value>Vertcoin</value><value>
</value><value>Proof-of-stake</value><value> currencies</value><value>
</value><value>EOS.IO</value><value>
</value><value>Decred</value><value>
</value><value>ERC-20</value><value> tokens</value><value>
</value><value>Aion</value><value>
</value><value>Augur</value><value>
</value><value>Basic Attention Token</value><value>
</value><value>Binance Coin</value><value>
</value><value>Kin</value><value>
</value><value>KodakCoin</value><value>
</value><value>Minds</value><value>
</value><value>OmiseGO</value><value>
</value><value>Power Ledger</value><value>
</value><value>Other currencies</value><value>
</value><value>BitShares</value><value>
</value><value>Filecoin</value><value>
</value><value>NEM</value><value>
</value><value>NEO</value><value>
</value><value>NuBits</value><value>
</value><value>Primecoin</value><value>
</value><value>Ripple</value><value>
</value><value>Stellar</value><value>
</value><value>Tether</value><value>
</value><value>Related topics</value><value>
</value><value>Airdrop</value><value>
</value><value>BitLicense</value><value>
</value><value>Blockchain game</value><value>
</value><value>Complementary currency</value><value>
</value><value>Crypto-anarchism</value><value>
</value><value>Cryptocurrency bubble</value><value> (</value><value>2018 cryptocurrency crash</value><value>)</value><value>
</value><value>Digital currency</value><value>
</value><value>Double-spending</value><value> (</value><value>Bitcoin Gold Double Spend Attack</value><value>)</value><value>
</value><value>Initial coin offering</value><value>
</value><value>Initiative Q</value><value>
</value><value>List of cryptocurrencies</value><value>
</value><value>Stablecoin</value><value>
</value><value>Token money</value><value>
</value><value>Virtual currency</value><value>
</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>List</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 3 December 2018, at 06:10</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Fork_(software_development)</url><title>Fork (software development)</title><text><value>  </value><value>A timeline chart of how </value><value>Linux distributions</value><value> have forked.</value><value>
</value><value>In </value><value>software engineering</value><value>, a </value><value>project fork</value><value> happens when developers take a copy of </value><value>source code</value><value> from one </value><value>software package</value><value> and start independent development on it, creating a distinct and separate piece of software. The term often implies not merely a </value><value>development branch</value><value>, but also a split in the developer community, a form of </value><value>schism</value><value>.</value><value>[1]</value><value>
</value><value>Free and open-source software</value><value> is that which, by definition, may be forked from the original development team without prior permission, without violating </value><value>copyright</value><value> law. However, licensed forks of proprietary software (</value><value>e.g.</value><value> </value><value>Unix</value><value>) also happen.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Etymology</value><value>
</value><value>2</value><value> </value><value>Forking of free and open-source software</value><value>
</value><value>3</value><value> </value><value>Forking proprietary software</value><value>
</value><value>4</value><value> </value><value>See also</value><value>
</value><value>5</value><value> </value><value>References</value><value>
</value><value>6</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Etymology</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The word "fork" has been used to mean "to divide in branches, go separate ways" as early as the 14th century.</value><value>[2]</value><value> In the software environment, the word evokes the </value><value>fork</value><value> system call, which causes a running process to split itself into two (almost) identical copies that (typically) diverge to perform different tasks.</value><value>[3]</value><value>
</value><value>In the context of software development, "fork" was used in the sense of creating a revision control "</value><value>branch</value><value>" by </value><value>Eric Allman</value><value> as early as 1980, in the context of </value><value>SCCS</value><value>:</value><value>[4]</value><value>
</value><value>
</value><value>.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}</value><value>Creating a branch "forks off" a version of the program.
</value><value>
</value><value>The term was in use on </value><value>Usenet</value><value> by 1983 for the process of creating a subgroup to move topics of discussion to.</value><value>[5]</value><value>
</value><value>"Fork" is not known to have been used in the sense of a community schism during the origins of Lucid Emacs (now </value><value>XEmacs</value><value>) (1991) or the </value><value>BSDs</value><value> (1993–1994); </value><value>Russ Nelson</value><value> used the term "shattering" for this sort of fork in 1993, attributing it to </value><value>John Gilmore</value><value>.</value><value>[6]</value><value> However, "fork" was in use in the present sense by 1995 to describe the XEmacs split,</value><value>[7]</value><value> and was an understood usage in the </value><value>GNU</value><value> Project by 1996.</value><value>[8]</value><value>
</value><value>
</value><value>Forking of free and open-source software</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Free and open-source software may be legally forked without prior approval of those currently developing, managing, or distributing the software per both </value><value>The Free Software Definition</value><value> and </value><value>The Open Source Definition</value><value>:</value><value>[9]</value><value>
</value><value>
</value><value>The freedom to distribute copies of your modified versions to others (freedom 3). By doing this, you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.</value><value>— </value><value>The Free Software Definition</value><value>[10]</value><value>
</value><value>
</value><value>3. Derived Works: The license must allow modifications and derived works, and must allow them to be distributed under the same terms as the license of the original software.</value><value>— </value><value>The Open Source Definition</value><value>[11]</value><value>
</value><value>
</value><value>In free software, forks often result from a schism over different goals or personality clashes. In a fork, both parties assume nearly identical code bases, but typically only the larger group, or whoever controls the Web site, will retain the full original name and the associated user community. Thus, there is a reputation penalty associated with forking.</value><value>[9]</value><value> The relationship between the different teams can be cordial or very bitter.
</value><value>Eric S. Raymond</value><value>, in his essay </value><value>Homesteading the Noosphere</value><value>,</value><value>[12]</value><value> stated that "The most important characteristic of a fork is that it spawns competing projects that cannot later exchange code, splitting the potential developer community". He notes in the </value><value>Jargon File</value><value>:</value><value>[13]</value><value>
</value><value>
</value><value>Forking is considered a Bad Thing—not merely because it implies a lot of wasted effort in the future, but because forks tend to be accompanied by a great deal of strife and acrimony between the successor groups over issues of legitimacy, succession, and design direction. There is serious social pressure against forking. As a result, major forks (such as the </value><value>Gnu-Emacs</value><value>/</value><value>XEmacs</value><value> split, the fissioning of the </value><value>386BSD</value><value> group into three daughter projects, and the short-lived GCC/EGCS split) are rare enough that they are remembered individually in hacker folklore.
</value><value>
</value><value>David A. Wheeler</value><value> notes</value><value>[9]</value><value> four possible outcomes of a fork, with examples:
</value><value>
</value><value>The death of the fork. This is by far the most common case. It is easy to declare a fork, but considerable effort to continue independent development and support.</value><value>
</value><value>A re-merging of the fork (</value><value>e.g.</value><value>, </value><value>egcs</value><value> becoming "blessed" as the new version of </value><value>gcc</value><value>.)</value><value>
</value><value>The death of the original (</value><value>e.g.</value><value> the </value><value>X.Org Server</value><value> succeeding and </value><value>XFree86</value><value> dying.)</value><value>
</value><value>Successful branching, typically with differentiation (</value><value>e.g.</value><value>, </value><value>OpenBSD</value><value> and </value><value>NetBSD</value><value>.)</value><value>
</value><value>Distributed revision control</value><value> (DVCS) tools have popularised a less emotive use of the term "fork", blurring the distinction with "branch".</value><value>[14]</value><value> With a DVCS such as </value><value>Mercurial</value><value> or </value><value>Git</value><value>, the normal way to contribute to a project, is to first create a personal branch of the repository, independent of the main repository, and later seek to have your changes integrated with it. Sites such as </value><value>GitHub</value><value>, </value><value>Bitbucket</value><value> and </value><value>Launchpad</value><value> provide free DVCS hosting expressly supporting independent branches, such that the technical, social and financial barriers to forking a source code repository are massively reduced, and GitHub uses "fork" as its term for this method of contribution to a project.
</value><value>Forks often restart version numbering from 0.1 or 1.0 even if the original software was at version 3.0, 4.0, or 5.0. An exception is when the forked software is designed to be a drop-in replacement for the original project, </value><value>e.g.</value><value> </value><value>MariaDB</value><value> for </value><value>MySQL</value><value>[15]</value><value> or </value><value>LibreOffice</value><value> for </value><value>OpenOffice.org</value><value>.
</value><value>
</value><value>Forking proprietary software</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In </value><value>proprietary software</value><value>, the copyright is usually held by the employing entity, not by the individual software developers. Proprietary code is thus more commonly forked when the owner needs to develop two or more versions, such as a </value><value>windowed</value><value> version and a </value><value>command line</value><value> version, or versions for differing operating systems, such as a </value><value>word processor</value><value> for </value><value>IBM PC</value><value> compatible machines and </value><value>Macintosh</value><value> computers. Generally, such internal forks will concentrate on having the same look, feel, data format, and behavior between platforms so that a user familiar with one can also be productive or share documents generated on the other. This is almost always an economic decision to generate a greater </value><value>market share</value><value> and thus pay back the associated extra development costs created by the fork.
</value><value>A notable proprietary fork not of this kind is the many varieties of proprietary </value><value>Unix</value><value>—almost all derived from AT&amp;T Unix under license and all called "Unix", but increasingly mutually incompatible.</value><value>[16]</value><value> </value><value>See</value><value> </value><value>UNIX wars</value><value>.
</value><value>The </value><value>BSD licenses</value><value> permit forks to become proprietary software, and some say</value><value>[</value><value>who?</value><value>]</value><value> that commercial incentives thus make proprietisation almost inevitable. Examples include </value><value>macOS</value><value> (based on the proprietary </value><value>NeXTSTEP</value><value> and the open source </value><value>FreeBSD</value><value>), </value><value>Cedega</value><value> and </value><value>CrossOver</value><value> (proprietary forks of </value><value>Wine</value><value>, though CrossOver tracks Wine and contributes considerably), EnterpriseDB (a fork of </value><value>PostgreSQL</value><value>, adding Oracle compatibility features</value><value>[17]</value><value>), Supported PostgreSQL with their proprietary ESM storage system,</value><value>[18]</value><value> and Netezza's</value><value>[19]</value><value> proprietary highly scalable derivative of PostgreSQL. Some of these vendors contribute back changes to the community project, while some keep their changes as their own competitive advantages.
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>List of software forks</value><value>
</value><value>Source port</value><value>
</value><value>Downstream (software development)</value><value>
</value><value>Group decision-making</value><value>
</value><value>Modular programming</value><value>
</value><value>Modding</value><value>
</value><value>Custom software</value><value>
</value><value>Personalization</value><value>
</value><value>Team effectiveness</value><value>
</value><value>Duplicate code</value><value>
</value><value>ROM Hacking</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Schism", with its connotations, is a common usage, </value><value>e.g.</value><value> </value><value>"the Lemacs/FSFmacs schism"</value><value> </value><value>Archived</value><value> 12 December 2009 at </value><value>WebCite</value><value> (</value><value>Jamie Zawinski</value><value>, 2000), </value><value>"Behind the KOffice split"</value><value> </value><value>Archived</value><value> 6 July 2013 at the </value><value>Wayback Machine</value><value>. (Joe Brockmeier, </value><value>Linux Weekly News</value><value>, 2010-12-14), </value><value>"Copyright assignment - once bitten, twice shy"</value><value> </value><value>Archived</value><value> 30 March 2012 at the </value><value>Wayback Machine</value><value>. (Richard Hillesley, </value><value>H-Online</value><value>, 2010-08-06), </value><value>"Forking is a feature"</value><value> </value><value>Archived</value><value> 29 February 2012 at the </value><value>Wayback Machine</value><value>. (</value><value>Anil Dash</value><value>, 2010-09-10), </value><value>"The Great Software Schism"</value><value> </value><value>Archived</value><value> 6 January 2012 at the </value><value>Wayback Machine</value><value>. (</value><value>Glyn Moody</value><value>, </value><value>Linux Journal</value><value>, 2006-09-28), </value><value>"To Fork Or Not To Fork: Lessons From Ubuntu and Debian"</value><value> </value><value>Archived</value><value> 26 February 2012 at the </value><value>Wayback Machine</value><value>. (</value><value>Benjamin Mako Hill</value><value>, 2005).</value><value>
</value><value>
</value><value>^</value><value> </value><value>Entry 'fork' in Online Etymology Dictionary</value><value> </value><value>Archived</value><value> 25 May 2012 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The term fork is derived from the POSIX standard for operating systems: the system call used so that a process generates a copy of itself is called fork()." </value><value>Robles, Gregorio; González-Barahona, Jesús M. (2012). </value><value>A Comprehensive Study of Software Forks: Dates, Reasons and Outcomes</value><value> </value><value>(PDF)</value><value>. OSS 2012 The Eighth International Conference on Open Source Systems. </value><value>Archived</value><value> </value><value>(PDF)</value><value> from the original on 2 December 2013</value><value>. Retrieved </value><value>20 October</value><value> 2012</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>Allman, Eric. </value><value>"An Introduction to the Source Code Control System."</value><value> </value><value>Archived</value><value> 6 November 2014 at the </value><value>Wayback Machine</value><value>. Project Ingres, University of California at Berkeley, 1980.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Can somebody fork off a "net.philosophy"?</value><value> (</value><value>John Gilmore</value><value>, net.misc, 18 January 1983)</value><value>
</value><value>
</value><value>^</value><value> </value><value>Shattering — good or bad?</value><value> (Russell Nelson, gnu.misc.discuss, 1 October 1993)</value><value>
</value><value>
</value><value>^</value><value> </value><value>Re: Hey Franz: 32K Windows SUCK!!!!!</value><value> (Bill Dubuque, cu.cs.macl.info, 21 September 1995)</value><value>
</value><value>
</value><value>^</value><value> </value><value>Lignux?</value><value> (Marcus G. Daniels, gnu.misc.discuss, 7 June 1996)</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Why Open Source Software / Free Software (OSS/FS, FLOSS, or FOSS)? Look at the Numbers!: Forking</value><value> </value><value>Archived</value><value> 5 April 2006 at the </value><value>Wayback Machine</value><value>. (</value><value>David A. Wheeler</value><value>)</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stallman, Richard. </value><value>"The Free Software Definition"</value><value>. Free Software Foundation. </value><value>Archived</value><value> from the original on 14 October 2013</value><value>. Retrieved </value><value>15 October</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Open Source Definition"</value><value>. The Open Source Initiative. </value><value>Archived</value><value> from the original on 15 October 2013</value><value>. Retrieved </value><value>15 October</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S.</value><value> (15 August 2002). </value><value>"Promiscuous Theory, Puritan Practice"</value><value>. </value><value>Archived</value><value> from the original on 6 October 2006.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Forked</value><value> </value><value>Archived</value><value> 8 November 2011 at the </value><value>Wayback Machine</value><value>. (</value><value>Jargon File</value><value>), first added to </value><value>v4.2.2</value><value> </value><value>Archived</value><value> 14 January 2012 at the </value><value>Wayback Machine</value><value>., 20 Aug 2000)</value><value>
</value><value>
</value><value>^</value><value> </value><value>e.g.</value><value> </value><value>Willis, Nathan (15 January 2015). </value><value>"An "open governance" fork of Node.js"</value><value>. </value><value>LWN.net</value><value>. </value><value>Archived</value><value> from the original on 21 April 2015</value><value>. Retrieved </value><value>15 January</value><value> 2015</value><value>. </value><value>Forks are a natural part of the open development model—so much so that GitHub famously plasters a "fork your own copy" button on almost every page.</value><value> See also </value><value>Nyman, Linus (2015). </value><value>"Understanding Code Forking in Open Source Software"</value><value> (Ph.D.). Hanken School of Economics. p. 57. </value><value>Where practitioners have previously had rather narrow definitions of a fork, [...] the term now appears to be used much more broadly. Actions that would traditionally have been called a branch,  a new distribution, code fragmentation, a pseudo-fork, etc. may all now be called forks by some developers. This appears to be in no insignificant part due to the broad definition and use of the term fork by GitHub.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Forked a project, where do my version numbers start?</value><value> </value><value>Archived</value><value> 26 August 2011 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Fear of forking</value><value> </value><value>Archived</value><value> 21 January 2013 at </value><value>WebCite</value><value> - An essay about forking in </value><value>free software</value><value> projects, by Rick Moen</value><value>
</value><value>
</value><value>^</value><value> </value><value>EnterpriseDB</value><value> </value><value>Archived</value><value> 13 November 2006 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Fujitsu Supported PostgreSQL</value><value> </value><value>Archived</value><value> 20 August 2006 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Netezza</value><value> </value><value>Archived</value><value> 13 November 2006 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Right to Fork</value><value> at </value><value>Meatball Wiki</value><value>
</value><value>A PhD examining forking: </value><value>(Nyman, 2015)</value><value> "Understanding Code Forking in Open Source Software - An examination of code forking, its effect on open source software, and how it is viewed and practiced by developers"</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Free and open-source software</value><value>General</value><value>
</value><value>Alternative terms for free software</value><value>
</value><value>Comparison of open-source and closed-source software</value><value>
</value><value>Comparison of source code hosting facilities</value><value>
</value><value>Free software</value><value>
</value><value>Free software project directories</value><value>
</value><value>Gratis versus libre</value><value>
</value><value>Long-term support</value><value>
</value><value>Open-source software</value><value>
</value><value>Open-source software development</value><value>
</value><value>Outline</value><value>
</value><value>Software</value><value>packages</value><value>
</value><value>Audio</value><value>
</value><value>Bioinformatics</value><value>
</value><value>Codecs</value><value>
</value><value>Collaboration</value><value>
</value><value>Configuration management</value><value>
</value><value>Device drivers</value><value>
</value><value>Graphics</value><value>
</value><value>Wireless</value><value>
</value><value>Geophysics</value><value>
</value><value>Health</value><value>
</value><value>Mathematics</value><value>
</value><value>Operating systems</value><value>
</value><value>Programming languages</value><value>
</value><value>Routing</value><value>
</value><value>Statistics</value><value>
</value><value>Television</value><value>
</value><value>Video games</value><value>
</value><value>Web applications</value><value>
</value><value>Content management systems</value><value>
</value><value>E-commerce</value><value>
</value><value>Word processors</value><value>
</value><value>Android apps</value><value>
</value><value>iOS apps</value><value>
</value><value>Commercial</value><value>
</value><value>Trademarked</value><value>
</value><value>Formerly proprietary</value><value>
</value><value>Community</value><value>
</value><value>Free software movement</value><value>
</value><value>History</value><value>
</value><value>Open-source software movement</value><value>
</value><value>Organizations</value><value>
</value><value>Events</value><value>
</value><value>Licenses</value><value>
</value><value>AFL</value><value>
</value><value>Apache</value><value>
</value><value>APSL</value><value>
</value><value>Artistic</value><value>
</value><value>Beerware</value><value>
</value><value>Boost</value><value>
</value><value>BSD</value><value>
</value><value>CC0</value><value>
</value><value>CDDL</value><value>
</value><value>EPL</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>GNU GPL</value><value>
</value><value>GNU LGPL</value><value>
</value><value>ISC</value><value>
</value><value>MIT</value><value>
</value><value>MPL</value><value>
</value><value>Ms-PL/RL</value><value>
</value><value>Python</value><value>
</value><value>Python Software Foundation License</value><value>
</value><value>Sleepycat</value><value>
</value><value>Unlicense</value><value>
</value><value>WTFPL</value><value>
</value><value>zlib</value><value>
</value><value>Types and</value><value> standards</value><value>
</value><value>Comparison of free and open-source software licenses</value><value>
</value><value>Contributor License Agreement</value><value>
</value><value>Copyleft</value><value>
</value><value>Debian Free Software Guidelines</value><value>
</value><value>Definition of Free Cultural Works</value><value>
</value><value>Free license</value><value>
</value><value>The Free Software Definition</value><value>
</value><value>The Open Source Definition</value><value>
</value><value>Open-source license</value><value>
</value><value>Permissive software licence</value><value>
</value><value>Public domain</value><value>
</value><value>Viral license</value><value>
</value><value>
</value><value>Challenges</value><value>
</value><value>Binary blob</value><value>
</value><value>Digital rights management</value><value>
</value><value>Hardware restrictions</value><value>
</value><value>License proliferation</value><value>
</value><value>Mozilla software rebranding</value><value>
</value><value>Proprietary software</value><value>
</value><value>SCO/Linux controversies</value><value>
</value><value>Secure boot</value><value>
</value><value>Software patents</value><value>
</value><value>Software security</value><value>
</value><value>Trusted Computing</value><value>
</value><value>Related topics</value><value>
</value><value>Forking</value><value>
</value><value>GNU Manifesto</value><value>
</value><value>Microsoft Open Specification Promise</value><value>
</value><value>Open-core model</value><value>
</value><value>Open-source hardware</value><value>
</value><value>Shared Source Initiative</value><value>
</value><value>Source-available software</value><value>
</value><value>The Cathedral and the Bazaar</value><value>
</value><value>Revolution OS</value><value>
</value><value>
</value><value> </value><value>Book</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>Portal</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 5 November 2018, at 20:21</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Elm_(programming_language)</url><title>Elm (programming language)</title><text><value>Elm</value><value>Paradigm</value><value>Functional</value><value>Designed by</value><value>Evan Czaplicki</value><value>First appeared</value><value>2012</value><value>Stable release</value><value>0.19
   / August 21, 2018</value><value>; 3 months ago</value><value> (</value><value>2018-08-21</value><value>)</value><value>
</value><value>Typing discipline</value><value>Static</value><value>, </value><value>Strong</value><value>, </value><value>Inferred</value><value>License</value><value>Permissive</value><value> (</value><value>Revised BSD</value><value>)</value><value>[1]</value><value>Filename extensions</value><value>.elm</value><value>Website</value><value>elm-lang</value><value>.org</value><value>Influenced by</value><value>Haskell</value><value>, </value><value>Standard ML</value><value>, </value><value>OCaml</value><value>, </value><value>F#</value><value>Influenced</value><value>Redux</value><value>,</value><value>[2]</value><value> </value><value>Vue.js</value><value>[3]</value><value>
</value><value>Elm</value><value> is a domain-specific </value><value>programming language</value><value> for </value><value>declaratively</value><value> creating </value><value>web browser</value><value>-based </value><value>graphical user interfaces</value><value>. Elm is </value><value>purely functional</value><value>, and is developed with emphasis on </value><value>usability</value><value>, performance, and </value><value>robustness</value><value>. It advertises "no </value><value>runtime</value><value> </value><value>exceptions</value><value> in practice",</value><value>[4]</value><value> made possible by the Elm compiler's </value><value>static type checking</value><value>.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Features</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Immutability</value><value>
</value><value>2.2</value><value> </value><value>Static types</value><value>
</value><value>2.3</value><value> </value><value>Module system</value><value>
</value><value>2.4</value><value> </value><value>Interoperability with HTML, CSS, and JavaScript</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Limitations</value><value>
</value><value>4</value><value> </value><value>Example code</value><value>
</value><value>5</value><value> </value><value>See also</value><value>
</value><value>6</value><value> </value><value>References</value><value>
</value><value>7</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Elm was initially designed by Evan Czaplicki as his thesis in 2012.</value><value>[5]</value><value> The first release of Elm came with many examples and an online editor that made it easy to try out in a </value><value>web browser</value><value>.</value><value>[6]</value><value> Evan Czaplicki joined </value><value>Prezi</value><value> in 2013 to work on Elm,</value><value>[7]</value><value> and in 2016 moved to </value><value>NoRedInk</value><value> as an Open Source Engineer, also starting the Elm Software Foundation.</value><value>[8]</value><value>
</value><value>The initial implementation of the Elm compiler targets </value><value>HTML</value><value>, </value><value>CSS</value><value>, and </value><value>JavaScript</value><value>.</value><value>[9]</value><value> The set of core tools has continued to expand, now including a </value><value>REPL</value><value>,</value><value>[10]</value><value> </value><value>package manager</value><value>,</value><value>[11]</value><value> time-traveling debugger,</value><value>[12]</value><value> and installers for Mac and Windows.</value><value>[13]</value><value> Elm also has an ecosystem of community created libraries</value><value>[14]</value><value> and an advanced online editor that allows saved work and inclusion of community libraries.</value><value>[15]</value><value>
</value><value>
</value><value>Features</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Elm has a small but expressive set of language constructs, including traditional if-expressions, let-expressions for local state, and case-expressions for </value><value>pattern matching</value><value>.</value><value>[16]</value><value> As a functional language, it supports anonymous functions, functions as arguments, and partial application (</value><value>currying</value><value>) by default. Its semantics include immutable values, </value><value>stateless functions</value><value>, and static typing with type inference. Elm programs render HTML through a virtual DOM, and may interoperate with other code by using "JavaScript as a service".
</value><value>
</value><value>Immutability</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>All values in Elm are </value><value>immutable</value><value>, meaning that a value cannot be modified after it is created. Elm uses </value><value>persistent data structures</value><value> to implement its </value><value>Array</value><value>, </value><value>Dict</value><value>, and </value><value>Set</value><value> libraries.</value><value>[17]</value><value>
</value><value>
</value><value>Static types</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Elm is statically typed. Type annotations are optional (due to type inference) but strongly encouraged. Annotations exist on the line above the definition (unlike C-family languages where types and names are interspersed). Elm uses a single colon to mean "has type".
</value><value>Types include primitives like integers and strings, and basic data structures such as lists, tuples, and records. Functions have types written with arrows, for example </value><value>round : Float -&gt; Int</value><value>. </value><value>Union types</value><value> allow the programmer to create custom types to represent data in a way that matches the problem domain.</value><value>[18]</value><value>
</value><value>Types can refer to other types, for example a </value><value>List Int</value><value>. Types are always capitalized; lowercase names are type variables. For example, a </value><value>List a</value><value> is a list of values of unknown type. It is the type of the empty list and of the argument to </value><value>List.length</value><value>, which is agnostic to the list's elements. There are a few special types that programmers create to interact with the Elm runtime. For example, </value><value>Html Msg</value><value> represents a (virtual) DOM tree whose event handlers all produce messages of type </value><value>Msg</value><value>.
</value><value>Rather than allow any value to be implicitly nullable (such a JavaScript's </value><value>undefined</value><value> or a </value><value>null pointer</value><value>), Elm's standard library defines a </value><value>Maybe a</value><value> type. Code that produces or handles an optional value does so explicitly using this type, and all other code is guaranteed a value of the claimed type is actually present.
</value><value>
</value><value>Module system</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Elm has a </value><value>module system</value><value> that allows users to break their code into smaller parts called modules. Modules can hide implementation details such as helper functions, and group related code together. Modules serve as a namespace for imported code, such as </value><value>Bitwise.and</value><value>. Third party libraries (or packages) consist of one or more modules, and are available from the </value><value>Elm Public Library</value><value>. All libraries are versioned according to </value><value>semver</value><value>, which is enforced by the compiler and other tools. That is, removing a function or changing its type can only be done in a major release.
</value><value>
</value><value>Interoperability with HTML, CSS, and JavaScript</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Elm uses an abstraction called ports to communicate with </value><value>JavaScript</value><value>.</value><value>[19]</value><value> It allows values to flow in and out of Elm programs, making it possible to communicate between Elm and JavaScript.
</value><value>Elm has a library called elm-html that a programmer can use to write HTML and CSS within Elm.</value><value>[20]</value><value> It uses a virtual </value><value>DOM</value><value> approach to make updates efficient.</value><value>[21]</value><value>
</value><value>
</value><value>Limitations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Unlike </value><value>Haskell</value><value> or PureScript, Elm has no support for </value><value>higher-kinded types</value><value>, and thus cannot provide generic abstractions for many common operations.</value><value>[22]</value><value> For example, there is no generic </value><value>map</value><value>, </value><value>apply</value><value>, </value><value>fold</value><value>, or </value><value>filter</value><value> function. Instead, such names are used prefixed by their module, such as </value><value>List.map</value><value> and </value><value>Dict.map</value><value>.
</value><value>
</value><value>Example code</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>This section </value><value>contains </value><value>instructions, advice, or how-to content</value><value>.</value><value> The purpose of Wikipedia is to present facts, not to train. Please help </value><value>improve this article</value><value> either by rewriting the how-to content or by </value><value>moving</value><value> it to </value><value>Wikiversity</value><value>, </value><value>Wikibooks</value><value> or </value><value>Wikivoyage</value><value>.</value><value>  </value><value>(April 2018)</value><value>
</value><value>-- This is a single line comment</value><value>

</value><value>{- This is a multi-line comment.</value><value>
</value><value>   It can span multiple lines.</value><value>
</value><value>-}</value><value>

</value><value>{- It is possible to {- nest -} multi-line comments -}</value><value>

</value><value>-- Here we define a value named ''greeting''. The type is inferred as a String.</value><value>
</value><value>greeting</value><value> </value><value>=</value><value>
    </value><value>"Hello World!"</value><value>

 </value><value>-- It is best to add type annotations to top-level declarations.</value><value>
</value><value>hello</value><value> </value><value>:</value><value> </value><value>String</value><value>
</value><value>hello</value><value> </value><value>=</value><value>
    </value><value>"Hi there."</value><value>

</value><value>-- Functions are declared the same way, with arguments following the function name.</value><value>
</value><value>add</value><value> </value><value>x</value><value> </value><value>y</value><value> </value><value>=</value><value>
    </value><value>x</value><value> </value><value>+</value><value> </value><value>y</value><value>

</value><value>-- Again, it is best to add type annotations.</value><value>
</value><value>hypotenuse</value><value> </value><value>:</value><value> </value><value>Float</value><value> </value><value>-&gt;</value><value> </value><value>Float</value><value> </value><value>-&gt;</value><value> </value><value>Float</value><value>
</value><value>hypotenuse</value><value> </value><value>a</value><value> </value><value>b</value><value> </value><value>=</value><value>
    </value><value>sqrt</value><value> </value><value>(</value><value>a</value><value>^</value><value>2</value><value> </value><value>+</value><value> </value><value>b</value><value>^</value><value>2</value><value>)</value><value>

</value><value>-- Functions are also curried; here we've curried the multiplication </value><value>
</value><value>-- infix operator with a `2`</value><value>
</value><value>multiplyBy</value><value>2</value><value> </value><value>:</value><value> </value><value>number</value><value> </value><value>-&gt;</value><value> </value><value>number</value><value>
</value><value>multiplyBy</value><value>2</value><value> </value><value>=</value><value>
    </value><value>(*)</value><value> </value><value>2</value><value>

</value><value>-- If-expressions are used to branch on values</value><value>
</value><value>absoluteValue</value><value> </value><value>:</value><value> </value><value>number</value><value> </value><value>-&gt;</value><value> </value><value>number</value><value>
</value><value>absoluteValue</value><value> </value><value>number</value><value> </value><value>=</value><value>
    </value><value>if</value><value> </value><value>number</value><value> </value><value>&lt;</value><value> </value><value>0</value><value> </value><value>then</value><value> </value><value>negate</value><value> </value><value>number</value><value> </value><value>else</value><value> </value><value>number</value><value>

 </value><value>-- Records are used to hold values with named fields</value><value>
</value><value>book</value><value> </value><value>:</value><value> </value><value>{</value><value> </value><value>title</value><value> </value><value>:</value><value> </value><value>String</value><value>,</value><value> </value><value>author</value><value> </value><value>:</value><value> </value><value>String</value><value>,</value><value> </value><value>pages</value><value> </value><value>:</value><value> </value><value>Int</value><value> </value><value>}</value><value>
</value><value>book</value><value> </value><value>=</value><value>
    </value><value>{</value><value> </value><value>title</value><value> </value><value>=</value><value> </value><value>"Steppenwolf"</value><value>
    </value><value>,</value><value> </value><value>author</value><value> </value><value>=</value><value> </value><value>"Hesse"</value><value>
    </value><value>,</value><value> </value><value>pages</value><value> </value><value>=</value><value> </value><value>237</value><value> 
    </value><value>}</value><value>

</value><value>-- Record access is done with `.`</value><value>
</value><value>title</value><value> </value><value>:</value><value> </value><value>String</value><value>
</value><value>title</value><value> </value><value>=</value><value>
    </value><value>book</value><value>.</value><value>title</value><value>

</value><value>-- Record access `.` can also be used as a function</value><value>
</value><value>author</value><value> </value><value>:</value><value> </value><value>String</value><value>
</value><value>author</value><value> </value><value>=</value><value>
    </value><value>.</value><value>author</value><value> </value><value>book</value><value>

</value><value>-- We can create entirely new types with the `type` keyword.</value><value>
</value><value>-- The following value represents a binary tree.</value><value>
</value><value>type</value><value> </value><value>Tree</value><value> </value><value>a</value><value>
    </value><value>=</value><value> </value><value>Empty</value><value>
    </value><value>|</value><value> </value><value>Node</value><value> </value><value>a</value><value> </value><value>(</value><value>Tree</value><value> </value><value>a</value><value>)</value><value> </value><value>(</value><value>Tree</value><value> </value><value>a</value><value>)</value><value>

</value><value>-- It is possible to inspect these types with case-expressions.</value><value>
</value><value>depth</value><value> </value><value>:</value><value> </value><value>Tree</value><value> </value><value>a</value><value> </value><value>-&gt;</value><value> </value><value>Int</value><value>
</value><value>depth</value><value> </value><value>tree</value><value> </value><value>=</value><value>
    </value><value>case</value><value> </value><value>tree</value><value> </value><value>of</value><value>
        </value><value>Empty</value><value> </value><value>-&gt;</value><value>
            </value><value>0</value><value>

        </value><value>Node</value><value> </value><value>value</value><value> </value><value>left</value><value> </value><value>right</value><value> </value><value>-&gt;</value><value>
            </value><value>1</value><value> </value><value>+</value><value> </value><value>max</value><value> </value><value>(</value><value>depth</value><value> </value><value>left</value><value>)</value><value> </value><value>(</value><value>depth</value><value> </value><value>right</value><value>)</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>TypeScript</value><value>: a strongly-typed programming language that transpiles to JavaScript</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"elm-lang/elm-compiler"</value><value>. </value><value>GitHub</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Prior Art - Redux"</value><value>. </value><value>redux.js.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Comparison with Other Frameworks — Vue.js"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Elm home page"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Elm: Concurrent FRP for Functional GUIs"</value><value> </value><value>(PDF)</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Try Elm"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"elm and prezi"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"new adventures for elm"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"elm-lang/elm-compiler"</value><value>. </value><value>GitHub</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"repl"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"package manager"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Home"</value><value>. </value><value>debug.elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"elm-lang/elm-platform"</value><value>. </value><value>GitHub</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Elm Packages"</value><value>. </value><value>package.elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ellie, the Elm Live Editor"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"syntax"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"core 5.1.1"</value><value>. </value><value>package.elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Model The Problem"</value><value>. </value><value>Elm</value><value>. Retrieved </value><value>4 May</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Czaplicki, Evan. </value><value>"JavaScript · An Introduction to Elm"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"html 2.0.0"</value><value>. </value><value>package.elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"blazing fast html"</value><value>. </value><value>elm-lang.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Higher-Kinded types Not Expressible? #396"</value><value>. </value><value>github.com/elm-lang/elm-compiler</value><value>. Retrieved </value><value>6 March</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value> </value><value>
</value><value>v</value><value>t</value><value>e</value><value>Programming languages</value><value>
</value><value>Comparison</value><value>
</value><value>Timeline</value><value>
</value><value>History</value><value>
</value><value>
</value><value>APL</value><value>
</value><value>Assembly</value><value>
</value><value>BASIC</value><value>
</value><value>C</value><value>
</value><value>C++</value><value>
</value><value>C#</value><value>
</value><value>COBOL</value><value>
</value><value>Fortran</value><value>
</value><value>Go</value><value>
</value><value>Groovy</value><value>
</value><value>Haskell</value><value>
</value><value>Java</value><value>
</value><value>JavaScript</value><value> (JS)</value><value>
</value><value>Kotlin</value><value>
</value><value>Lisp</value><value>
</value><value>Lua</value><value>
</value><value>Objective-C</value><value>
</value><value>OCaml</value><value>
</value><value>Pascal</value><value>
</value><value>Perl</value><value>
</value><value>PHP</value><value>
</value><value>Python</value><value>
</value><value>Ruby</value><value>
</value><value>Rust</value><value>
</value><value>Shell</value><value>
</value><value>Smalltalk</value><value>
</value><value>Swift</value><value>
</value><value>Visual Basic .NET</value><value> (VB.NET)</value><value>
</value><value>more...</value><value>
</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Lists</value><value>
</value><value>Alphabetical</value><value>
</value><value>Categorical</value><value>
</value><value>Generational</value><value>
</value><value>Non-English-based</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 14 October 2018, at 10:45</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Hacker_culture</url><title>Hacker culture</title><text><value> 
</value><value>
</value><value>Not to be confused with </value><value>Security hacker</value><value>.</value><value>
</value><value>This article has multiple issues.</value><value> Please help </value><value>improve it</value><value> or discuss these issues on the </value><value>talk page</value><value>. </value><value>(</value><value>Learn how and when to remove these template messages</value><value>)</value><value>
</value><value>
      </value><value>This article's </value><value>tone or style may not reflect the </value><value>encyclopedic tone</value><value> used on Wikipedia</value><value>.</value><value> See Wikipedia's </value><value>guide to writing better articles</value><value> for suggestions.</value><value>  </value><value>(June 2011)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>This article </value><value>needs additional citations for </value><value>verification</value><value>.</value><value> Please help </value><value>improve this article</value><value> by </value><value>adding citations to reliable sources</value><value>. Unsourced material may be challenged and removed.</value><value>  </value><value>(April 2011)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
    </value><value>
</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>The </value><value>hacker culture</value><value> is a </value><value>subculture</value><value> of individuals who enjoy the intellectual challenge of creatively overcoming limitations of </value><value>software systems</value><value> to achieve novel and clever outcomes.</value><value>[1]</value><value> The act of engaging in activities (such as programming or other media</value><value>[2]</value><value>) in a spirit of playfulness and exploration is termed "hacking". However, the defining characteristic of a </value><value>hacker</value><value> is not the activities performed themselves (e.g. </value><value>programming</value><value>), but the manner in which it is done</value><value>[3]</value><value> and whether it is something exciting and meaningful.</value><value>[2]</value><value> Activities of playful cleverness can be said to have "hack value" and therefore the term "hacks" came about,</value><value>[3]</value><value> with early examples including </value><value>pranks at MIT</value><value> done by students to demonstrate their technical aptitude and cleverness. Therefore, the hacker culture originally emerged in academia in the 1960s around the </value><value>Massachusetts Institute of Technology</value><value> (MIT)'s </value><value>Tech Model Railroad Club</value><value> (TMRC)</value><value>[4]</value><value> and </value><value>MIT Artificial Intelligence Laboratory</value><value>.</value><value>[5]</value><value> Hacking originally involved entering restricted areas in a clever way without causing any major damages. Some famous </value><value>hacks at the Massachusetts Institute of Technology</value><value> were placing of a campus police cruiser on the roof of the Great Dome and converting the Great Dome into </value><value>R2-D2</value><value>.</value><value>[6]</value><value>
</value><value>Richard Stallman</value><value> explains about hackers who program:
</value><value>
</value><value>.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}</value><value>What they had in common was mainly love of excellence and programming. They wanted to make their programs that they used be as good as they could. They also wanted to make them do neat things. They wanted to be able to do something in a more exciting way than anyone believed possible and show "Look how wonderful this is. I bet you didn't believe this could be done."</value><value>[7]</value><value>
</value><value>
</value><value>Hackers from this subculture tend to emphatically differentiate themselves from what they pejoratively call "</value><value>crackers</value><value>"; those who are generally referred to by media and members of the general public using the term "hacker", and whose primary focus‍—‌be it to malign or for malevolent purposes‍—‌lies in </value><value>exploiting</value><value> weaknesses in computer security.</value><value>[8]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Definition</value><value>
</value><value>2</value><value> </value><value>History</value><value>
</value><value>3</value><value> </value><value>Ethics and principles</value><value>
</value><value>4</value><value> </value><value>Uses</value><value>
</value><value>
</value><value>4.1</value><value> </value><value>Programming</value><value>
</value><value>4.2</value><value> </value><value>Home computing enthusiasts</value><value>
</value><value>4.3</value><value> </value><value>Hacker artists</value><value>
</value><value>
</value><value>4.3.1</value><value> </value><value>Art</value><value>
</value><value>4.3.2</value><value> </value><value>Hacker art mentions</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>5</value><value> </value><value>See also</value><value>
</value><value>6</value><value> </value><value>References</value><value>
</value><value>7</value><value> </value><value>Further reading</value><value>
</value><value>8</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Definition</value><value>
</value><value>The </value><value>Jargon File</value><value>, an influential but not universally accepted compendium of hacker slang, defines hacker as "A person who enjoys exploring the details of programmable systems and stretching their capabilities, as opposed to most users, who prefer to learn only the minimum necessary."</value><value>[9]</value><value> The </value><value>Request for Comments</value><value> (RFC) 1392, the Internet Users' Glossary, amplifies this meaning as "A person who delights in having an intimate understanding of the internal workings of a system, computers and computer networks in particular."</value><value>[10]</value><value>
</value><value>As documented in the Jargon File, these hackers are disappointed by the mass media and general public's usage of the word </value><value>hacker</value><value> to refer to </value><value>security breakers</value><value>, calling them "crackers" instead. This includes both "good" crackers ("</value><value>white hat hackers</value><value>") who use their computer security related skills and knowledge to learn more about how systems and networks work and to help to discover and fix security holes, as well as those more "evil" crackers ("</value><value>black hat hackers</value><value>") who use the same skills to author harmful software (like viruses, trojans, etc.) and illegally infiltrate secure systems with the intention of doing harm to the system.</value><value>[11]</value><value> The programmer subculture of hackers, in contrast to the cracker community, generally sees computer security related activities as contrary to the ideals of the original and true meaning of the hacker term that instead related to playful cleverness.</value><value>[11]</value><value>
</value><value>
</value><value>History</value><value>
</value><value>The word "hacker" derives from the seventeenth-century word of a "lusty laborer" who harvested fields by dogged and rough swings of his hoe. Although the idea of "hacking" has existed long before the term "hacker"‍—‌with the most notable example of </value><value>Lightning Ellsworth</value><value>, it was not a word that the first programmers used to describe themselves. In fact, many of the first programmers were from engineering or physics backgrounds. 
</value><value>
</value><value>

</value><value>
</value><value>“
</value><value>
</value><value>"But from about 1945 onward (and especially during the creation of the first ENIAC computer) some programmers realized that their expertise in computer software and technology had evolved not just into a profession, but into a passion" (46).</value><value>[1]</value><value>
</value><value>
</value><value>”
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>There was a growing awareness of a style of programming different from the cut and dried methods employed at first,</value><value>[12]</value><value>[13]</value><value> but it was not until the 1960s that the term hackers began to be used to describe proficient computer programmers. Therefore, the fundamental characteristic that links all who identify themselves as hackers are ones who enjoy "…the intellectual challenge of creatively overcoming and circumventing limitations of programming systems and who tries to extend their capabilities" (47).</value><value>[1]</value><value> With this definition in mind, it can be clear where the negative implications of the word "hacker" and the subculture of "hackers" came from.
</value><value>Some common nicknames among this culture include "crackers" who are unskilled thieves who mainly rely on luck. Others include "phreak"‍—‌which refers to a type of skilled </value><value>crackers</value><value> and "warez d00dz"‍—‌which is a kind of cracker that acquires reproductions of copyrighted software. Within all hackers are tiers of hackers such as the "samurai" who are hackers that hire themselves out for legal electronic locksmith work. Furthermore, there are other hackers who are hired to test security, they are called "sneakers" or "tiger teams".
</value><value>Before communications between computers and computer users were as </value><value>networked</value><value> as they are now, there were multiple independent and parallel hacker subcultures, often unaware or only partially aware of each other's existence. All of these had certain important traits in common:
</value><value>
</value><value>Creating software and sharing it with each other</value><value>
</value><value>Placing a high value on freedom of inquiry</value><value>
</value><value>Hostility to secrecy</value><value>
</value><value>Information-sharing as both an ideal and a practical strategy</value><value>
</value><value>Upholding the right to </value><value>fork</value><value>
</value><value>Emphasis on rationality</value><value>
</value><value>Distaste for authority</value><value>
</value><value>Playful cleverness, taking the serious humorously and humor seriously</value><value>
</value><value>  </value><value>The </value><value>Glider</value><value>, proposed as an </value><value>emblem of the "hacker community"</value><value> by </value><value>Eric S. Raymond</value><value>.</value><value>[14]</value><value>
</value><value>These sorts of subcultures were commonly found at </value><value>academic</value><value> settings such as </value><value>college</value><value> </value><value>campuses</value><value>. The </value><value>MIT Artificial Intelligence Laboratory</value><value>, the </value><value>University of California, Berkeley</value><value> and </value><value>Carnegie Mellon University</value><value> were particularly well-known hotbeds of early hacker culture. They evolved in parallel, and largely unconsciously, until the </value><value>Internet</value><value>, where a legendary </value><value>PDP-10</value><value> machine at MIT, called AI, that was running </value><value>ITS</value><value>, provided an early meeting point of the hacker community. This and other developments such as the rise of the </value><value>free software movement</value><value> and </value><value>community</value><value> drew together a critically large population and encouraged the spread of a conscious, common, and systematic ethos. Symptomatic of this evolution were an increasing adoption of </value><value>common slang</value><value> and a shared view of history, similar to the way in which other occupational groups have professionalized themselves but without the formal credentialing process characteristic of most professional groups.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>Over time, the academic hacker subculture has tended to become more conscious, more cohesive, and better organized. The most important consciousness-raising moments have included the composition of the first </value><value>Jargon File</value><value> in 1973, the promulgation of the </value><value>GNU Manifesto</value><value> in 1985, and the publication of </value><value>Eric Raymond</value><value>'s </value><value>The Cathedral and the Bazaar</value><value> in 1997. Correlated with this has been the gradual recognition of a set of shared culture heroes, including: </value><value>Bill Joy</value><value>, </value><value>Donald Knuth</value><value>, </value><value>Dennis Ritchie</value><value>, </value><value>Alan Kay</value><value>, </value><value>Ken Thompson</value><value>, </value><value>Richard M. Stallman</value><value>, </value><value>Linus Torvalds</value><value>, </value><value>Larry Wall</value><value>, and </value><value>Guido Van Rossum</value><value>.
</value><value>The concentration of academic hacker subculture has paralleled and partly been driven by the commoditization of computer and networking technology, and has, in turn, accelerated that process. In 1975, hackerdom was scattered across several different families of </value><value>operating systems</value><value> and disparate networks; today it is largely a </value><value>Unix</value><value> and </value><value>TCP/IP</value><value> phenomenon, and is concentrated around various </value><value>operating systems</value><value> based on </value><value>free software</value><value> and </value><value>open-source software</value><value> development.
</value><value>
</value><value>Ethics and principles</value><value>
</value><value>Main article: </value><value>Hacker ethic</value><value>
</value><value>Many of the values and tenets of the free and open source software movement stem from the </value><value>hacker ethics</value><value> that originated at </value><value>MIT</value><value>[15]</value><value> and at the </value><value>Homebrew Computer Club</value><value>. The hacker ethics were chronicled by Steven Levy in </value><value>Hackers: Heroes of the Computer Revolution</value><value>[16]</value><value> and in other texts in which Levy formulates and summarizes general hacker attitudes:
</value><value>
</value><value>Access to computers-and anything that might teach you something about the way the world works-should be unlimited and total.</value><value>
</value><value>All information should be free.</value><value>
</value><value>Hackers should be judged by their hacking, not bogus criteria such as degrees, age, race, or position.</value><value>
</value><value>You can create art and beauty on a computer.</value><value>
</value><value>Computers can change your life for the better.</value><value>
</value><value>Hacker ethics are concerned primarily with sharing, openness, collaboration, and engaging in the hands-on imperative.</value><value>[16]</value><value>
</value><value>Linus Torvalds</value><value>, one of the leaders of the open source movement (known primarily for developing the </value><value>Linux kernel</value><value>), has noted in the book </value><value>The Hacker Ethic</value><value>[17]</value><value> that these principles have evolved from the known Protestant ethics and incorporates the spirits of capitalism, as introduced in the early 20th century by </value><value>Max Weber</value><value>.
</value><value>Hack value is the notion used by hackers to express that something is worth doing or is interesting.</value><value>[18]</value><value> This is something that hackers often feel intuitively about a problem or solution.
</value><value>An aspect of hack value is performing feats for the sake of showing that they can be done, even if others think it is difficult. Using things in a unique way outside their intended purpose is often perceived as having hack value. Examples are using a </value><value>dot matrix impact printer</value><value> to produce musical notes, using a </value><value>flatbed scanner</value><value> to take ultra-high-resolution photographs or using an </value><value>optical mouse</value><value> as </value><value>barcode reader</value><value>.
</value><value>A solution or feat has "hack value" if it is done in a way that has finesse, cleverness or brilliance, which makes </value><value>creativity</value><value> an essential part of the meaning. For example, </value><value>picking a difficult lock</value><value> has hack value; smashing it does not. As another example, proving </value><value>Fermat's last theorem</value><value> by linking together most of modern mathematics has hack value; solving a combinatorial problem by </value><value>exhaustively trying all possibilities</value><value> does not. Hacking is not using process of elimination to find a solution; it's the process of finding a clever solution to a problem.
</value><value>
</value><value>Uses</value><value>
</value><value>While using </value><value>hacker</value><value> to refer to someone who enjoys playful cleverness is most often applied to computer programmers, it is sometimes used for people who apply the same attitude to other fields.</value><value>[8]</value><value> For example, </value><value>Richard Stallman</value><value> describes the silent composition </value><value>4′33″</value><value> by John Cage and the 14th-century </value><value>palindromic</value><value> three-part piece "Ma Fin Est Mon Commencement" by </value><value>Guillaume de Machaut</value><value> as hacks.</value><value>[3]</value><value> According to the Jargon File,</value><value>[9]</value><value> the word </value><value>hacker</value><value> was used in a similar sense among radio amateurs in the 1950s, predating the software hacking community.
</value><value>
</value><value>Programming</value><value>
</value><value>The Boston Globe</value><value> in 1984 defined "hackers" as "computer nuts".</value><value>[19]</value><value> In their programmer subculture, a hacker is a person who follows a spirit of playful cleverness and loves programming. It is found in an originally academic movement unrelated to computer security and most visibly associated with </value><value>free software</value><value>, </value><value>open source</value><value> and </value><value>demoscene</value><value>. It also has a </value><value>hacker ethic</value><value>, based on the idea that writing software and sharing the result on a voluntary basis is a good idea, and that information should be free, but that it's not up to the hacker to make it free by breaking into private computer systems. This hacker ethic was publicized and perhaps originated in </value><value>Steven Levy</value><value>'s </value><value>Hackers: Heroes of the Computer Revolution</value><value> (1984). It contains a codification of its principles.
</value><value>The programmer subculture of hackers disassociates from the mass media's pejorative use of the word 'hacker' referring to computer security, and usually prefer the term 'cracker' for that meaning. Complaints about supposed mainstream misuse started as early as 1983, when media used "hacker" to refer to the computer criminals involved in </value><value>The 414s</value><value> case.</value><value>[20]</value><value>
</value><value>In the programmer subculture of hackers, a computer hacker is a person who enjoys designing software and building programs with a sense for aesthetics and playful cleverness. The term hack in this sense can be traced back to "describe the elaborate college pranks that...students would regularly devise" (Levy, 1984 p. 10). To be considered a 'hack' was an honor among like-minded peers as "to qualify as a hack, the feat must be imbued with innovation, style and technical virtuosity" (Levy, 1984 p. 10) The </value><value>MIT</value><value> </value><value>Tech Model Railroad Club</value><value> Dictionary defined hack in 1959 (not yet in a computer context) as "1) an article or project without constructive end; 2) a project undertaken on bad self-advice; 3) an entropy booster; 4) to produce, or attempt to produce, a hack(3)", and "hacker" was defined as "one who hacks, or makes them". Much of TMRC's jargon was later imported into early computing culture, because the club started using a </value><value>DEC</value><value> </value><value>PDP-1</value><value> and applied its local model railroad slang in this computing context. Initially incomprehensible to outsiders, the slang also became popular in MIT's computing environments beyond the club. Other examples of jargon imported from the club are 'losing' ("when a piece of equipment is not working")</value><value>[16]</value><value> and 'munged' ("when a piece of equipment is ruined").</value><value>[16]</value><value>
</value><value>Others did not always view hackers with approval. </value><value>MIT living groups</value><value> in 1989 avoided advertising their sophisticated </value><value>Project Athena</value><value> workstations to prospective members because they wanted residents who were interested in people, not computers, with one fraternity member stating that "We were worried about the hacker subculture".</value><value>[21]</value><value>
</value><value>According to </value><value>Eric S. Raymond</value><value>,</value><value>[22]</value><value> the Open Source and Free Software hacker subculture developed in the 1960s among 'academic hackers'</value><value>[23]</value><value> working on early </value><value>minicomputers</value><value> in </value><value>computer science</value><value> environments in the United States.
</value><value>Hackers were influenced by and absorbed many ideas of key technological developments and the people associated with them. Most notable is the technical culture of the pioneers of the </value><value>Arpanet</value><value>, starting in 1969. The </value><value>PDP-10</value><value> AI machine at MIT, running the </value><value>ITS</value><value> operating system and connected to the Arpanet, provided an early hacker meeting point. After 1980 the subculture coalesced with the culture of </value><value>Unix</value><value>. Since the mid-1990s, it has been largely coincident with what is now called the </value><value>free software</value><value> and </value><value>open source movement</value><value>.
</value><value>Many programmers have been labeled "great hackers",</value><value>[24]</value><value> but the specifics of who that label applies to is a matter of opinion. Certainly major contributors to </value><value>computer science</value><value> such as </value><value>Edsger Dijkstra</value><value> and </value><value>Donald Knuth</value><value>, as well as the inventors of popular software such as </value><value>Linus Torvalds</value><value> (</value><value>Linux</value><value>), and </value><value>Ken Thompson</value><value> and </value><value>Dennis Ritchie</value><value> (</value><value>Unix</value><value> and </value><value>C programming language</value><value>) are likely to be included in any such list; see also </value><value>List of programmers</value><value>. People primarily known for their contributions to the consciousness of the programmer subculture of hackers include </value><value>Richard Stallman</value><value>, the founder of the free software movement and the </value><value>GNU project</value><value>, president of the </value><value>Free Software Foundation</value><value> and author of the famous </value><value>Emacs</value><value> text editor as well as the </value><value>GNU Compiler Collection (GCC)</value><value>, and </value><value>Eric S. Raymond</value><value>, one of the founders of the </value><value>Open Source Initiative</value><value> and writer of the famous text </value><value>The Cathedral and the Bazaar</value><value> and many other essays, maintainer of the </value><value>Jargon File</value><value> (which was previously maintained by </value><value>Guy L. Steele, Jr.</value><value>).
</value><value>Within the computer programmer subculture of hackers, the term hacker is also used for a programmer who reaches a goal by employing a series of modifications to extend existing </value><value>code</value><value> or resources. In this sense, it can have a negative connotation of using inelegant </value><value>kludges</value><value> to accomplish programming tasks that are quick, but ugly, inelegant, difficult to extend, hard to maintain and inefficient. This derogatory form of the noun "</value><value>hack</value><value>" derives from the everyday English sense "to cut or shape by or as if by crude or ruthless strokes" [Merriam-Webster] and is even used among users of the positive sense of "hacker" who produces "cool" or "neat" hacks. In other words, to "hack" at an original creation, as if with an axe, is to force-fit it into being usable for a task not intended by the original creator, and a "hacker" would be someone who does this habitually. (The original creator and the hacker may be the same person.) This usage is common in both programming, engineering and building. In programming, hacking in this sense appears to be tolerated and seen as a necessary compromise in many situations. Some argue that it should not be, due to this negative meaning; others argue that some kludges can, for all their ugliness and imperfection, still have "hack value".
</value><value>In non-software engineering, the culture is less tolerant of unmaintainable solutions, even when intended to be temporary, and describing someone as a "hacker" might imply that they lack professionalism. In this sense, the term has no real positive connotations, except for the idea that the hacker is capable of doing modifications that allow a system to work in the short term, and so has some sort of marketable skills. However, there is always the understanding that a more skillful or technical logician could have produced successful modifications that would not be considered a "hack-job". The definition is similar to other, non-computer based uses of the term "hack-job". For instance, a professional modification of a production sports car into a racing machine would not be considered a hack-job, but a cobbled together backyard mechanic's result could be. Even though the outcome of a race of the two machines could not be assumed, a quick inspection would instantly reveal the difference in the level of professionalism of the designers. The adjective associated with hacker is "hackish" (see the </value><value>Jargon file</value><value>).
</value><value>In a very universal sense, hacker also means someone who makes things work beyond perceived limits in a clever way in general, without necessarily referring to computers, especially at MIT.</value><value>[25]</value><value> That is, people who apply the creative attitude of software hackers in fields other than computing. This includes even activities that predate computer hacking, for example </value><value>reality hackers</value><value> or </value><value>urban spelunkers</value><value> (exploring undocumented or unauthorized areas in buildings). One specific example is clever pranks</value><value>[26]</value><value> traditionally perpetrated by MIT students, with the perpetrator being called hacker. For example, when MIT students surreptitiously put a fake police car atop the dome on MIT's Building 10,</value><value>[27]</value><value> that was a hack in this sense, and the students involved were therefore hackers. Other types of hacking are </value><value>reality hackers</value><value>, </value><value>wetware</value><value> hackers ("hack your brain"), and </value><value>media hackers</value><value> ("hack your reputation"). In a similar vein, a "hack" may refer to a </value><value>math</value><value> hack, that is, a clever solution to a mathematical problem. All of these uses have spread beyond MIT.
</value><value>
</value><value>Home computing enthusiasts</value><value>
</value><value>Main article: </value><value>Hacking of consumer electronics</value><value>
</value><value>In yet another context, a hacker is a computer hobbyist who pushes the limits of software or hardware. The home computer hacking subculture relates to the hobbyist home computing of the late 1970s, beginning with the availability of </value><value>MITS Altair</value><value>. An influential organization was the </value><value>Homebrew Computer Club</value><value>. However, its roots go back further to </value><value>amateur radio</value><value> enthusiasts. The amateur radio slang referred to creatively tinkering to improve performance as "hacking" already in the 1950s.</value><value>[28]</value><value>
</value><value>A large overlaps between hobbyist hackers and the programmer subculture hackers existed during the Homebrew Club's days, but the interests and values of both communities somewhat diverged. Today, the hobbyists focus on commercial </value><value>computer and video games</value><value>, </value><value>software cracking</value><value> and exceptional computer programming (</value><value>demo scene</value><value>). Also of interest to some members of this group is the modification of computer hardware and other electronic devices, see </value><value>modding</value><value>.
</value><value>
</value><value>  </value><value>A </value><value>DIY</value><value> musician probes the circuit board of a synthesizer for </value><value>"bends"</value><value> using a jeweler's screwdriver and alligator clips</value><value>
</value><value>Electronics hobbyists working on machines other than computers also fall into this category. This includes people who do simple modifications to </value><value>graphing calculators</value><value>, </value><value>video game consoles</value><value>, electronic </value><value>musical keyboards</value><value> or other device (see </value><value>CueCat</value><value> for a notorious example) to expose or add functionality to a device that was unintended for use by end users by the company who created it. A number of </value><value>techno</value><value> musicians have modified 1980s-era </value><value>Casio SK-1</value><value> sampling keyboards to create unusual sounds by doing </value><value>circuit bending</value><value>: connecting wires to different leads of the integrated circuit chips. The results of these DIY experiments range from opening up previously inaccessible features that were part of the chip design to producing the strange, dis-harmonic digital tones that became part of the techno music style.
Companies take different attitudes towards such practices, ranging from open acceptance (such as </value><value>Texas Instruments</value><value> for its graphing calculators and </value><value>Lego</value><value> for its </value><value>Lego Mindstorms</value><value> robotics gear) to outright hostility (such as </value><value>Microsoft</value><value>'s attempts to lock out </value><value>Xbox</value><value> hackers or the </value><value>DRM</value><value> routines on </value><value>Blu-ray Disc</value><value> players designed to sabotage compromised players.</value><value>[</value><value>citation needed</value><value>]</value><value>)
</value><value>In this context, a "hack" refers to a </value><value>program</value><value> that (sometimes illegally) modifies another program, often a video game, giving the user access to features otherwise inaccessible to them. As an example of this use, for </value><value>Palm OS</value><value> users (until the 4th iteration of this </value><value>operating system</value><value>), a "hack" refers to an extension of the operating system which provides additional functionality. Term also refers to those people who cheat on video games using special software. This can also refer to the </value><value>jailbreaking</value><value> of </value><value>iPhones</value><value>.
</value><value>
</value><value>Hacker artists</value><value>
</value><value>See also: </value><value>Fractal art</value><value>, </value><value>algorithmic art</value><value>, and </value><value>interactive art</value><value>
</value><value>Hacker artists create </value><value>art</value><value> by hacking on </value><value>technology</value><value> as an </value><value>artistic medium</value><value>. This has extended the definition of the term and what it means to be a hacker. Such </value><value>artists</value><value> may work with </value><value>graphics</value><value>, </value><value>computer hardware</value><value>, </value><value>sculpture</value><value>, </value><value>music</value><value> and other </value><value>audio</value><value>, </value><value>animation</value><value>, </value><value>video</value><value>, </value><value>software</value><value>, </value><value>simulations</value><value>, </value><value>mathematics</value><value>, reactive </value><value>sensory</value><value> systems, text, </value><value>poetry</value><value>, </value><value>literature</value><value>, or any combination thereof.
</value><value>Dartmouth College</value><value> musician Larry Polansky states:
</value><value>
</value><value>Technology and art are inextricably related. Many musicians, video artists, graphic artists, and even poets who work with technology—whether designing it or using it—consider themselves to be part of the 'hacker community.' Computer artists, like non-art hackers, often find themselves on society’s fringes, developing strange, innovative uses of existing technology. There is an empathetic relationship between those, for example, who design experimental music software and hackers who write communications </value><value>freeware</value><value>.</value><value>[29]</value><value>
</value><value>
</value><value>Another description is offered by Jenny Marketou: 
</value><value>
</value><value>Hacker artists operate as </value><value>culture</value><value> hackers who manipulate existing techno-</value><value>semiotic</value><value> structures towards a different end, to get inside cultural systems on the net and make them do things they were never intended to do.</value><value>[30]</value><value>
</value><value>
</value><value>A successful software and hardware hacker artist is </value><value>Mark Lottor</value><value> (mkl), who has created the 3-D light art projects entitled the </value><value>Cubatron</value><value>, and the </value><value>Big Round Cubatron</value><value>. This art is made using custom computer technology, with specially designed </value><value>circuit boards</value><value> and programming for </value><value>microprocessor</value><value> chips to manipulate the </value><value>LED</value><value> lights.
</value><value>
</value><value>Don Hopkins</value><value> is a software hacker artist well known for his artistic cellular automata. This art, created by a </value><value>cellular automata</value><value> computer program, generates objects which randomly bump into each other and in turn create more objects and designs, similar to a lava lamp, except that the parts change color and form through interaction. Hopkins Says: </value><value>Cellular automata are simple rules that are applied to a grid of cells, or the pixel values of an image. The same rule is applied to every cell, to determine its next state, based on the previous state of that cell and its neighboring cells. There are many interesting cellular automata rules, and they all look very different, with amazing animated dynamic effects. '</value><value>Life</value><value>' is a widely known cellular automata rule, but many other lesser known rules are much more interesting.
</value><value>
</value><value>Some hacker artists create art by writing computer code, and others, by developing hardware. Some create with existing software tools such as </value><value>Adobe Photoshop</value><value> or </value><value>GIMP</value><value>.
</value><value>The creative process of hacker artists can be more abstract than artists using non-technological media. For example, </value><value>mathematicians</value><value> have produced visually stunning graphic presentations of </value><value>fractals</value><value>, which hackers have further enhanced, often producing detailed and intricate graphics and animations from simple mathematical formulas.
</value><value>
</value><value>
		</value><value>
			</value><value>
			</value><value>
</value><value>Bubbles</value><value> was created using watercolors, then scanned into a computer. Colors were then manipulated using a software imaging tool
</value><value>
			</value><value>
		</value><value>
		</value><value>
			</value><value>
			</value><value>
</value><value>Sunrise</value><value> was created using pen and ink, then scanned into a computer and colored with a software imaging tool
</value><value>
			</value><value>
		</value><value>
		</value><value>
			</value><value>
			</value><value>
</value><value>Rolling Golden Hills of California</value><value> was created using pencil, scanned, and then painted with a software imaging tool
</value><value>
			</value><value>
		</value><value>
		</value><value>
			</value><value>
			</value><value>
</value><value>Barnsley's fern</value><value>, a fractal fern computed using an </value><value>iterated function system</value><value>
</value><value>
			</value><value>
		</value><value>
		</value><value>
			</value><value>
			</value><value>
</value><value>A fractal that models the surface of a mountain
</value><value>
			</value><value>
		</value><value>
</value><value>
</value><value>Art</value><value>
</value><value>
</value><value>Art.Net</value><value>
</value><value>Burning Man Festival</value><value>
</value><value>Computer art</value><value>
</value><value>Computer music</value><value>
</value><value>Digital art</value><value>
</value><value>Demoscene</value><value>
</value><value>Electronic art</value><value>
</value><value>Electronic art music</value><value>
</value><value>Electronica</value><value>
</value><value>Experiments in Art and Technology</value><value>
</value><value>Generative art</value><value>
</value><value>Internet art</value><value>
</value><value>Robotic art</value><value>
</value><value>Software art</value><value>
</value><value>
</value><value>Hacker art mentions</value><value>
</value><value>[2]</value><value> "Vector in Open Space" by Gerfried Stocker 1996.</value><value>
</value><value>Switch|Journal</value><value> Jun 14 1998.</value><value>
</value><value>Eye Weekly</value><value> "Tag – who's it?" by Ingrid Hein, July 16, 1998.</value><value>
</value><value>Linux Today</value><value> "Playing the Open Source Game" by Shawn Hargreaves, Jul 5, 1999.</value><value>
</value><value>Canterbury Christ Church University Library</value><value> Resources by Subject – Art &amp; Design,  2001.</value><value>
</value><value>SuperCollider Workshop / Seminar</value><value> Joel Ryan describes collaboration with hacker artists of Silicon Valley. 21 March 2002</value><value>
</value><value>Anthony Barker's Weblog on Linux, Technology and the Economy</value><value> "Why Geeks Love Linux", Sept 2003.</value><value>
</value><value>Live Art Research</value><value> Gesture and Response in Field-Based Performance by </value><value>Sha Xin Wei</value><value> &amp; Satinder Gill, 2005.</value><value>
</value><value>Hackers, Who Are They</value><value> "The Hackers Identity, October 2014.</value><value>
</value><value>See also</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Cowboy coding</value><value>: software development without the use of strict </value><value>software development methodologies</value><value>
</value><value>Demoscene</value><value>
</value><value>History of free software</value><value>
</value><value>Maker culture</value><value>
</value><value>Unix philosophy</value><value>
</value><value>References</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Gehring, Verna (2004). </value><value>The Internet In Public Life</value><value>. Maryland: Rowman &amp; Littlefield Publishers. pp. 43–56. </value><value>ISBN</value><value> </value><value>0742542335</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>The Hacker Community and Ethics: An Interview with Richard M. Stallman, 2002</value><value> (gnu.org)</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Stallman, Richard</value><value> (2002). </value><value>"On Hacking"</value><value>. Retrieved </value><value>2008-03-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>TMRC - Hackers</value><value>
</value><value>
</value><value>^</value><value> </value><value>Words to Avoid (or Use with Care) Because They Are Loaded or Confusing</value><value> (gnu.org)</value><value>
</value><value>
</value><value>^</value><value> </value><value>"IHTFP Hack Gallery: Hacks on the Great Dome (Bldg. 10)"</value><value>. </value><value>hacks.mit.edu</value><value>. Retrieved </value><value>2018-05-07</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Richard Stallman: interview as shown in </value><value>Hackers — Wizards of the Electronic Age</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Raymond, Eric</value><value> (2008-01-08). </value><value>"How To Become A Hacker"</value><value>. Thyrsus Enterprises</value><value>. Retrieved </value><value>2008-03-16</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Raymond, Eric</value><value>, ed. (2003-12-29). </value><value>"hacker"</value><value>. </value><value>Jargon File</value><value> (version 4.4.7 ed.)</value><value>. Retrieved </value><value>2008-03-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Internet Users' Glossary</value><value> (Request for Comments 1392), January 1993</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>[1]</value><value> Definition of "Cracker" in the </value><value>Jargon File</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Introduction to Functional Programming Systems Using Haskell"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A History of Modern Computing"</value><value>. </value><value>During the time one of these machines read a card, it could execute a sequence of up to forty-eight steps. More complex sequences-within-sequences were also possible. One computer scientist later noted that this method of programming demanded </value><value> the kind of detailed design of parallel subsequencing that one sees nowadays at the microprogramming level of some computers.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Glider Emblem FAQ"</value><value>. 22 May 2014</value><value>. Retrieved </value><value>20 September</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Hacker's Ethics"</value><value>. Retrieved </value><value>31 August</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>Levy, S: "Hackers: Heroes of the Computer Revolution", Anchor Press/Doubleday, 1984. </value><value>ISBN</value><value> </value><value>0-385-19195-2</value><value>
</value><value>
</value><value>^</value><value> </value><value>Himanen, Pekka; Linus Torvalds, and Manuel Castells (2001). The Hacker Ethic. Secker &amp; Warburg. </value><value>ISBN</value><value> </value><value>0-436-20550-5</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Definition of 'hack value'</value><value> in the </value><value>Jargon File</value><value>
</value><value>
</value><value>^</value><value> </value><value>Dyer, Richard (1984-05-06). </value><value>"Masters of the Game"</value><value>. </value><value>The Boston Globe</value><value>. Archived from </value><value>the original</value><value> on 1997-06-07.</value><value>
</value><value>
</value><value>^</value><value> </value><value>jnw@uvacs.UUCP (19 September 1983). </value><value>"for hack ( er ) s who want to complain to CBS"</value><value>. </value><value>Newsgroup</value><value>: </value><value>net.followup net.misc, net.followup</value><value> Check </value><value>|newsgroup=</value><value> value (</value><value>help</value><value>)</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Garfinkel, Simson L.</value><value> (Feb–Mar 1989). </value><value>"Students Log On to ATHENA"</value><value> </value><value>(PDF)</value><value>. </value><value>Technology Review</value><value>. pp. 7–10</value><value>. Retrieved </value><value>25 January</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Eric S.Raymond: </value><value>A Brief History of Hackerdom</value><value> (2000)</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric Steven</value><value> (19 September 2003). </value><value>"Reasons to Believe"</value><value>. </value><value>The Art of Unix Programming</value><value>. Addison-Wesley.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Graham, Paul</value><value> (2004). </value><value>"Great Hackers"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Eric Steven Raymond (2001). </value><value>"What Is a Hacker?"</value><value>. </value><value>How To Become A Hacker</value><value>. Thyrsus Enterprises</value><value>. Retrieved </value><value>2008-10-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"MIT Gallery of Hacks"</value><value>. Hacks.mit.edu</value><value>. Retrieved </value><value>2013-11-30</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"IHTFP Hack Gallery: CP Car on the Great Dome"</value><value>. Hacks.mit.edu. 1994-05-09</value><value>. Retrieved </value><value>2013-11-30</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>hacker</value><value>. </value><value>The Jargon Lexicon</value><value>. Retrieved </value><value>2008-10-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Singing Together, Hacking Together, Plundering Together: Sonic Intellectual Property in Cybertimes</value><value> by Larry Polansky</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Cornelia Sollfrank"</value><value>. Thing.net. 2000-07-25</value><value>. Retrieved </value><value>2011-07-01</value><value>.</value><value>
</value><value>
</value><value>
</value><value>Further reading</value><value>
</value><value>The </value><value>Jargon File</value><value> has had a role in acculturating hackers since its origins in 1975.</value><value>[</value><value>citation needed</value><value>]</value><value> These academic and literary works helped shape the academic hacker subculture:</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>
</value><value>Abelson, Hal</value><value>; </value><value>Sussman, Gerald Jay</value><value>. </value><value>Structure and Interpretation of Computer Programs</value><value>. London: </value><value>MIT Press</value><value>. </value><value>ISBN</value><value> </value><value>9780070004849</value><value>.</value><value>
</value><value>Aho</value><value>; </value><value>Sethi</value><value>; </value><value>Ullman</value><value>. </value><value>Compilers: Principles, Techniques, and Tools</value><value>. Reading, MA: </value><value>Addison-Wesley</value><value>. </value><value>ISBN</value><value> </value><value>9780201100884</value><value>.</value><value>
</value><value>Bourne, Stephen R.</value><value> </value><value>The Unix System</value><value>. Reading, MA: Addison-Wesley. </value><value>ISBN</value><value> </value><value>9780201137910</value><value>.</value><value>
</value><value>Brooks, Fred</value><value>. </value><value>The Mythical Man-Month</value><value>. Reading, MA: Addison-Wesley. </value><value>ISBN</value><value> </value><value>9780201006506</value><value>.</value><value>
</value><value>Graham, Paul</value><value>. </value><value>Hackers &amp; Painters</value><value>. Sebastopol, CA: </value><value>O'Reilly Media</value><value>. </value><value>ISBN</value><value> </value><value>9780596006624</value><value>.</value><value>
</value><value>Hoftstadter, Douglas</value><value>. </value><value>Gödel, Escher, Bach</value><value>. New York, NY: </value><value>Basic Books</value><value>. </value><value>ISBN</value><value> </value><value>9780465026852</value><value>.</value><value>
</value><value>James, Geoffrey</value><value>. </value><value>The Tao of Programming</value><value>. Santa Monica, CA: InfoBooks. </value><value>ISBN</value><value> </value><value>9780931137075</value><value>.</value><value>
</value><value>Kernighan, Brian W.</value><value>; </value><value>Ritchie, Dennis</value><value>. </value><value>The C Programming Language</value><value>. Englewood Cliffs, NJ: </value><value>Prentice Hall</value><value>. </value><value>ISBN</value><value> </value><value>9780131103702</value><value>.</value><value>
</value><value>Kidder, Tracy</value><value>. </value><value>The Soul of a New Machine</value><value>. Boston, MA: </value><value>Little, Brown and Company</value><value>. </value><value>ISBN</value><value> </value><value>9780316491709</value><value>.</value><value>
</value><value>Knuth, Donald</value><value>. </value><value>The Art of Computer Programming</value><value>. Reading, MA: Addison-Wesley. </value><value>ISBN</value><value> </value><value>9780201038019</value><value>.</value><value>
</value><value>Levy, Steven</value><value>. </value><value>Hackers: Heroes of the Computer Revolution</value><value>. Garden City, NY: Anchor Press / </value><value>Doubleday</value><value>. </value><value>ISBN</value><value> </value><value>9780385191951</value><value>.</value><value>
</value><value>Raymond, Eric S.</value><value> </value><value>The Cathedral and the Bazaar</value><value>. Cambridge, MA: O'Reilly Media. </value><value>ISBN</value><value> </value><value>9781565927247</value><value>.</value><value>
</value><value>Stoll, Cliff</value><value>. </value><value>The Cuckoo's Egg</value><value>. New York, NY: Doubleday. </value><value>ISBN</value><value> </value><value>9780385249461</value><value>.</value><value>
</value><value>Olson, Parmy. (05-14-2013). </value><value>We Are Anonymous: Inside the Hacker World of LulzSec, Anonymous, and the Global Cyber Insurgency.</value><value> </value><value>ISBN</value><value> </value><value>0316213527</value><value>.</value><value>
</value><value>Coleman, Gabriella. (Nov 4, 2014). </value><value>Hacker, Hoaxer, Whistleblower, Spy: The Many Faces of Anonymous</value><value>. Verso Books. </value><value>ISBN</value><value> </value><value>1781685835</value><value>.</value><value>
</value><value>Shantz, Jeff; Tomblin, Jordon (2014-11-28). </value><value>Cyber Disobedience: Re://Presenting Online Anarchy</value><value>. John Hunt Publishing. </value><value>ISBN</value><value> </value><value>9781782795551</value><value>.</value><value>
</value><value>External links</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>Hackers</value><value>.</value><value>
</value><value>A Brief History of Hackerdom</value><value>
</value><value>Hack, Hackers, and Hacking</value><value> (see </value><value>Appendix A</value><value>)</value><value>
</value><value>Gabriella Coleman</value><value>: </value><value>The Anthropology of Hackers</value><value> The Atlantic, 2010.</value><value>
</value><value>Gabriella Coleman</value><value>: </value><value>Hacker, Hoaxer, Whistleblower, Spy: The Many Faces of Anonymous</value><value> at </value><value>Open Library</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 3 December 2018, at 14:51</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Dries_Buytaert</url><title>Dries Buytaert</title><text><value>  </value><value>Dries Buytaert at </value><value>FOSDEM</value><value> 2008.</value><value>
</value><value>Dries Buytaert</value><value> (born 19 November 1978 in </value><value>Wilrijk</value><value>, </value><value>Antwerp</value><value>, </value><value>Belgium</value><value>)</value><value>[1]</value><value> is an </value><value>open-source software</value><value> </value><value>programmer</value><value> notable as founder and lead developer of the </value><value>Drupal</value><value> content management system.</value><value>[2]</value><value>[3]</value><value>[4]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Career</value><value>
</value><value>
</value><value>1.1</value><value> </value><value>Dismissal of Larry Garfield</value><value>
</value><value>
</value><value>
</value><value>2</value><value> </value><value>References</value><value>
</value><value>3</value><value> </value><value>External links</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Interviews</value><value>
</value><value>3.2</value><value> </value><value>Talks</value><value>
</value><value>
</value><value>
</value><value>
</value><value>

</value><value>Career</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Buytaert defended his PhD dissertation in </value><value>Computer Science</value><value> on 27 January 2008</value><value>[5]</value><value> at </value><value>Ghent University</value><value> in Belgium.</value><value>[6]</value><value>
</value><value>From 1999-2000 he was the maintainer of the </value><value>Linux</value><value>-</value><value>WLAN</value><value> FAQ</value><value>.</value><value>[7]</value><value>
</value><value>On 1 December 2007, Dries</value><value>[8]</value><value> announced, together with co-founder </value><value>Jay Batson</value><value> the launch of a start-up called </value><value>Acquia</value><value>.</value><value>[9]</value><value> Acquia is a commercial open-source software company providing products, services, and technical support for Drupal. Acquia wants to be to Drupal what </value><value>Red Hat</value><value> has been to </value><value>Linux</value><value>.</value><value>[10]</value><value> In 2009, Acquia helped re-launch Whitehouse.gov on Drupal.</value><value>[11]</value><value>
</value><value>On 31 March 2008, Dries launched </value><value>Mollom</value><value>, a service dedicated to stopping website spam: "Mollom's purpose is to dramatically reduce the effort of keeping your site clean and the quality of your content high. Currently, Mollom is a spam-killing one-two punch combination of a state-of-the-art spam filter and CAPTCHA server." Over 59,000 websites are protected by the Mollom service,</value><value>[12]</value><value> including all of </value><value>Netlog</value><value>'s messages.</value><value>[13]</value><value>
</value><value>In 2008, Buytaert was elected "Young Entrepreneurs of Tech" by </value><value>BusinessWeek</value><value>.</value><value>[14]</value><value> He was also named to the </value><value>MIT</value><value> </value><value>Technology Review</value><value> </value><value>TR35</value><value> as one of the top 35 innovators in the world under the age of 35.</value><value>[15]</value><value>[16]</value><value>
</value><value>
</value><value>Dismissal of Larry Garfield</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In March of 2017, Buytaert fired veteran Drupal developer Larry Garfield and disinvited him from DrupalCon, shortly after forum posts came to light that outed Garfield as a participant in the </value><value>Gorean subculture</value><value>. In a March 22 blog post, Garfield accused Buytaert of tolerating </value><value>doxing</value><value> and wrote that Drupal's Community Working Group had not found any Code of Conduct violations in his history.</value><value>[17]</value><value> Buytaert made a post the next day which defended the firing as necessary for fostering an inclusive community. He also wrote that his precise reasoning was confidential and that he "did not make the decision based on the information or beliefs conveyed in Larry's blog post."</value><value>[17]</value><value> Several commentators disputed this characterization citing Buytaert's criticism of Gorean gender roles in the same post and the deleted sentence "further participation in a leadership role implies our community is complicit with and/or endorses these views, which we do not."</value><value>[18]</value><value> Garfield also stated that he was ignorant of other "things not mentioned" that could have led to his dismissal.</value><value>[19]</value><value> 85 Drupal developers posted an open letter criticizing Buytaert for his handling of the situation with </value><value>Jon Evans</value><value> describing it as a form of </value><value>victim blaming</value><value>.</value><value>[17]</value><value>[20]</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>Curriculum Vitae</value><value> </value><value>Archived</value><value> 21 August 2010 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"History"</value><value>. Drupal.org</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Drupal core"</value><value>. Drupal.org. Archived from </value><value>the original</value><value> on 3 May 2012</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Revamp of MAINTAINERS.txt"</value><value>. Groups.drupal.org</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Dr. Dre, Dries Buytaert"</value><value>. Buytaert.net</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"conferences.oreilly.com"</value><value>. Conferences.oreillynet.com</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Linux-Wlan Faq (Old)"</value><value>. Linux-wlan.org. 6 March 2000</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Acquia, my Drupal startup, Dries Buytaert"</value><value>. Buytaert.net</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Acquia"</value><value>. Acquia</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"With $30M in funding, Acquia edges closer to an IPO"</value><value>. Venturebeat.com. 29 November 2012</value><value>. Retrieved </value><value>20 January</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Whitehouse goes Drupal"</value><value>. Techpresident.com. 24 October 2009</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Mollom Scorecard"</value><value>. Retrieved </value><value>27 January</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Mollom filtering millions of messages for Netlog"</value><value>. Buytaert.net. 20 May 2009</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kharif, Olga (17 April 2008). </value><value>"Young Entrepreneurs of Tech 2008"</value><value>. Businessweek.com</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"2008 Young Innovators Under 35"</value><value>. </value><value>Technology Review</value><value>. 2008</value><value>. Retrieved </value><value>15 August</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Christopher Chang, 33 University of California, Berkeley. </value><value>"TR35 2008 Young Innovator"</value><value>. Technologyreview.com</value><value>. Retrieved </value><value>23 April</value><value> 2012</value><value>.</value><value>CS1 maint: Multiple names: authors list (</value><value>link</value><value>) </value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Evans, Jon (2017-03-26). </value><value>"Sex and Gor and open source"</value><value>. TechCrunch</value><value>. Retrieved </value><value>2018-09-23</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Nolan Brown, Elizabeth (2017-04-18). </value><value>"Drupal Developer Larry Garfield Ostracized Over Involvement in Sci-Fi Based Kink Community"</value><value>. Reason</value><value>. Retrieved </value><value>2018-09-24</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Mann, Sonya (2017). </value><value>"This Developer's Sex Life Is Testing the Limits of Silicon Valley Tolerance"</value><value>. Inc</value><value>. Retrieved </value><value>2018-09-24</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Nichols, Shaun (2017-04-13). </value><value>"Drupal sci-fi sex scandal deepens: Now devs spank Dries over Gor bloke's banishment"</value><value>. The Register</value><value>. Retrieved </value><value>2018-09-24</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>Dries Buytaert</value><value>.</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikinews</value><value> has :</value><value>
</value><value>
</value><value>an </value><value>interview with Dries Buytaert</value><value>.
</value><value>
</value><value>
</value><value>Personal website</value><value>
</value><value>Acquia</value><value>
</value><value>Mollom</value><value>
</value><value>Interviews</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>An In-Depth Interview With Dries</value><value> Drupal Watchdog interview (February 2011)</value><value>
</value><value>Drupal founder, Dries Buytaert Interview</value><value> CMS Critic interview (January 2009)</value><value>
</value><value>Video interview</value><value> with Dries Buytaert by Noel Hidalgo in Antwerp, Belgium (26 July 2007)</value><value>
</value><value>Talks</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>DrupalCon Los Angeles 2015: Driesnote Keynote</value><value> - Dries' talk at DrupalCon 2015 in Los Angeles, United States (May 2015)</value><value>
</value><value>The State of Drupal</value><value> - Dries' talk at </value><value>FOSDEM</value><value> 2007 in Brussels, Belgium (February 2007)</value><value>
</value><value>Video of talk</value><value> delivered by Dries Buytaert titled the </value><value>State of Drupal</value><value> from OSCMS conference on Yahoo campus in Sunnyvale, California (late March 2007)</value><value>
</value><value>The State of Drupal</value><value> - Dries' State of Drupal talk at Drupalcon 2007 in Barcelona, Spain (September 2007)</value><value>
</value><value>
</value><value>
</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 2 November 2018, at 00:40</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Vitalik_Buterin</url><title>Vitalik Buterin</title><text><value>Vitalik Buterin</value><value>Vitalik Buterin, 2016</value><value>Native name</value><value>Виталий Дмитриевич Бутерин</value><value>Born</value><value> (</value><value>1994-01-31</value><value>) </value><value>January 31, 1994</value><value> (age 24)</value><value>Kolomna</value><value>, </value><value>Russia</value><value>Nationality</value><value>Russian-Canadian</value><value>Alma mater</value><value>University of Waterloo</value><value>(dropped out)</value><value>Known for</value><value>Ethereum</value><value>, </value><value>Bitcoin Magazine</value><value>Awards</value><value>Thiel Fellowship</value><value>Scientific career</value><value>Fields</value><value>Digital contracts</value><value>, </value><value>digital currencies</value><value>, </value><value>game theory</value><value>
</value><value>Website</value><value>vitalik</value><value>.ca</value><value>
</value><value>Vitalik Buterin</value><value> (</value><value>Russian</value><value>: </value><value>Виталий Дмитриевич Бутерин</value><value>; born January 31, 1994) is a </value><value>Russian</value><value>-</value><value>Canadian</value><value> </value><value>programmer</value><value> and writer primarily known as a co-founder of </value><value>Ethereum</value><value> and as a co-founder of </value><value>Bitcoin Magazine</value><value>.</value><value>[1]</value><value>[2]</value><value>[3]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Personal life</value><value>
</value><value>2</value><value> </value><value>Career</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Beginnings at </value><value>Bitcoin Magazine</value><value>
</value><value>2.2</value><value> </value><value>Ethereum</value><value>
</value><value>2.3</value><value> </value><value>Open source software</value><value>
</value><value>2.4</value><value> </value><value>Ethereum Russia</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Awards and recognition</value><value>
</value><value>4</value><value> </value><value>Philanthropy</value><value>
</value><value>5</value><value> </value><value>See also</value><value>
</value><value>6</value><value> </value><value>References</value><value>
</value><value>7</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Personal life</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Buterin was born in </value><value>Kolomna</value><value>, </value><value>Moscow Oblast</value><value>, </value><value>Russia</value><value>, to Dmitry Buterin, a computer scientist,</value><value>[4]</value><value> and Natalia Ameline (née Chistyakova). He lived in the area until the age of six when his parents emigrated to </value><value>Canada</value><value> in search of better employment opportunities.</value><value>[5]</value><value> While in grade three of elementary school in Canada, Buterin was placed into a class for gifted children</value><value>[6]</value><value> and started to understand that he was drawn to math, programming, and economics. He also had the ability to add three-digit numbers in his head at twice the speed of his peers.</value><value>[5]</value><value>
</value><value>Buterin attended the </value><value>Abelard School</value><value>, a private high school in Toronto, for four years,</value><value>[7]</value><value> which he said, "proved to be among the most interesting and productive years of my life; the closer connection between students and teachers [&amp;] the level of depth at which the material was taught, made me want to learn, and to focus on learning as my primary goal".</value><value>[7]</value><value> Buterin has written that although he was "never particularly inspired by the traditional education system",</value><value>[7]</value><value> when subjects were presented with "dedication and focus on intellectual inquiry", he said:
</value><value>
</value><value>"I noticed my attitude and my results almost immediately and drastically change. Education is ultimately much more than simply memorizing individual facts, or even learning individual concepts. [What] matters most: learning how to think, learning how to reason and learning how to learn."</value><value>[7]</value><value>
</value><value>Buterin learned about Bitcoin, from his father, at age 17.</value><value>[5]</value><value> In 2012, he obtained a bronze medal in the International Olympiad in Informatics.</value><value>[8]</value><value> In 2013, he visited developers in other countries who shared his enthusiasm for code. He returned to Toronto later that year and published a </value><value>white paper</value><value> proposing Ethereum.</value><value>[9]</value><value> He attended the </value><value>University of Waterloo</value><value> but dropped out in 2014, when he received the </value><value>Thiel Fellowship</value><value> in the amount of $100,000,</value><value>[10]</value><value> and went to work on Ethereum full-time.</value><value>[10]</value><value>
</value><value>On June 25, 2017, Buterin was the subject of a </value><value>death hoax</value><value> originating from </value><value>4chan</value><value>.</value><value>[11]</value><value>
</value><value>On 30 November 2018, Vitalik Buterin receives Honorary Doctorate from the Faculty of Business and Economics of the University of Basel on the occasion of the Dies Academicus. </value><value>[12]</value><value>
</value><value>
</value><value>Career</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Beginnings at </value><value>Bitcoin Magazine</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Bitcoin Magazine</value><value>
</value><value>Buterin met a person on a bitcoin chat forum trying to start a bitcoin blog. The owner offered five bitcoin (about $3.50) to anyone who would write an article for him. Buterin wrote for the site until its website shut down soon thereafter due to Bitcoin's lack of mainstream attention.</value><value>[13]</value><value>
</value><value>In September 2011, another person reached out to Buterin about a new publication called </value><value>Bitcoin Magazine</value><value>, a position which Buterin would accept as the first co-founder, and contribute as a leading writer.</value><value>[14]</value><value>
</value><value>In addition Buterin wrote about bitcoin-related topics for other publications, including </value><value>Bitcoin Weekly</value><value>.</value><value>[1]</value><value>[15]</value><value> </value><value>Bitcoin Magazine</value><value> in 2012 later began publishing a print edition and has been referred to as the first serious publication dedicated to cryptocurrencies.</value><value>[16]</value><value> </value><value>Bitcoin Magazine</value><value> was then purchased by </value><value>BTC Media</value><value>, where Buterin continued to write until mid-2014.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>In addition, he held a position on the editorial board of </value><value>Ledger</value><value>, a peer-reviewed scholarly journal that publishes full-length original research articles on the subjects of cryptocurrency and blockchain technology.</value><value>[17]</value><value>
</value><value>
</value><value>Ethereum</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Ethereum</value><value>
</value><value>Buterin is a co-founder and inventor of Ethereum, described as a "decentralised mining network and software development platform rolled into one"</value><value>[18]</value><value> that facilitates the creation of new cryptocurrencies and programs that share a single </value><value>blockchain</value><value> (a cryptographic transaction ledger).</value><value>[19]</value><value>[20]</value><value>
</value><value>Buterin first described Ethereum in a white paper</value><value>[21]</value><value> in late 2013. Buterin argued that bitcoin needed a scripting language for application development. But when he failed to gain agreement, he proposed development of a new platform with a more general scripting language.</value><value>[22]</value><value>:</value><value>88</value><value> About the Ethereum Project, Buterin has said: "I am truly grateful to have the opportunity to work in such an interesting and interdisciplinary area of industry, where I have the chance to interact with cryptographers, mathematicians and economists prominent in their fields, to help build software and tools that already affect tens of thousands of people around the world, and to work on advanced problems in computer science, economics and philosophy every week."</value><value>[7]</value><value>
</value><value>
</value><value>Open source software</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Buterin has contributed as a developer to other open source software projects.</value><value>[1]</value><value> Some early examples are: Kryptokit, pybitcointools, multisig.info, and btckeysplit.</value><value>[23]</value><value> He also contributed to DarkWallet</value><value>[24]</value><value> by </value><value>Cody Wilson</value><value>, </value><value>Bitcoin</value><value> </value><value>Python</value><value> libraries,</value><value>[25]</value><value> and the </value><value>cryptocurrency</value><value> marketplace site Egora.</value><value>[2]</value><value>
</value><value>
</value><value>Ethereum Russia</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>As Buterin was recognizing the economic and political relevance of the Ethereum enterprise for his native Russia, he talked shortly with </value><value>Vladimir Putin</value><value> on June 2nd 2017, at the </value><value>St. Petersburg International Economic Forum</value><value> (SPIEF) event. The president of Russia stated that he "supported the idea of establishing ties with possible Russian partners".</value><value>[26]</value><value>
</value><value>
</value><value>Awards and recognition</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Thiel Fellowship</value><value> Award, 2014</value><value>[27]</value><value>
</value><value>World Technology Award in the IT Software category, 2014</value><value>[28]</value><value>
</value><value>Fortune</value><value> 40 under 40 list, 2016.</value><value>[29]</value><value>
</value><value>Forbes</value><value> 30 under 30 list, 2018.</value><value>[30]</value><value>[31]</value><value>
</value><value>Fortune</value><value> the ledger 40 under 40 list, 2018.</value><value>[32]</value><value>
</value><value>University of Basel</value><value> Honorary doctorate, 2018.</value><value>[33]</value><value>
</value><value>Philanthropy</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Donation of $763,970 worth of Ether to the </value><value>Machine Intelligence Research Institute</value><value> in 2017.</value><value>[34]</value><value>
</value><value>Donation of $2.4 million worth of Ether to the </value><value>SENS Research Foundation</value><value> in 2018, for the research on rejuvenation biotechnologies and human life extension.</value><value>[35]</value><value>
</value><value>Donation of $1 million worth of Ether in conjunction with the Ethereum-based </value><value>OmiseGO</value><value> open payment platform to the </value><value>GiveDirectly</value><value> organization aimed at helping the poorest of poor refugees in  Africa, in 2018.</value><value>[36]</value><value>
</value><value>Donation of $93,469 worth of Ether, matched by the </value><value>Pineapple Fund</value><value>, to the </value><value>Internet Archive</value><value> in 2018.</value><value>[37]</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Joseph Lubin</value><value> – Ethereum co-founder</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Finley, Klint (27 January 2014). </value><value>"Out in the open: Teenage hacker transforms web into one giant Bitcoin network"</value><value>. </value><value>Wired</value><value>. Retrieved </value><value>7 February</value><value> 2014</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Melendez, Steven (10 February 2014). </value><value>"Could this 20-Year-Old kid make Bitcoin obsolete?"</value><value>. </value><value>Fast Company</value><value>. Retrieved </value><value>22 February</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>del Castillo, Michael (24 September 2014). </value><value>"Dark wallet: A radical way to Bitcoin"</value><value>. </value><value>The New Yorker</value><value>. Retrieved </value><value>24 January</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Brownell, Claire (2017-06-27). </value><value>"Vitalik Buterin: The cryptocurrency prophet"</value><value>. </value><value>Financial Post</value><value>. Retrieved </value><value>2018-03-08</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Peck, Morgen (2016-06-13). </value><value>"The Uncanny Mind That Built Ethereum"</value><value>. </value><value>Backchannel</value><value>. WIRED</value><value>. Retrieved </value><value>2016-06-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Snyder, Benjamin (2017-06-23). </value><value>"Meet Vitalik Buterin, the 23-year-old founder of bitcoin rival ethereum"</value><value>. </value><value>CNBC</value><value>. Retrieved </value><value>2018-03-08</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>"Students"</value><value>. </value><value>Abelard School</value><value>. Retrieved </value><value>7 October</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Results | IOI 2012"</value><value>. </value><value>www.ioi2012.org</value><value>. Retrieved </value><value>2016-07-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Braga, Matthew (13 Oct 2016). </value><value>"Change Agents 2016: Vitalik Buterin, Ethereum"</value><value>. Canadian Business</value><value>. Retrieved </value><value>6 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Elliot, Josh (July 2, 2014). </value><value>"Why a 20-year-old Toronto drop-out accepted $100,000 to stay out of school"</value><value>. </value><value>CTV</value><value>. Retrieved </value><value>25 April</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"4chan's Vitalik Buterin Death Hoax Crashes Ethereum Price"</value><value>. </value><value>Bitsonline</value><value>. 2017-06-25</value><value>. Retrieved </value><value>2017-06-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ethereum Founder Vitalik Buterin Receives Honorary Doctorate"</value><value>. </value><value>Bitcoinmagazine</value><value>. 2018-11-30</value><value>. Retrieved </value><value>2018-12-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Interview with Vitalik Buterin"</value><value>. Bitcorati, Inc. January 10, 2014</value><value>. Retrieved </value><value>June 3,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stankovic, Stefan (29 January 2018). </value><value>"Who is Vitalik Buterin, The Mastermind Behind Ethereum?"</value><value>. </value><value>Unblock</value><value>. Retrieved </value><value>19 April</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"About us – Bitcoin Magazine"</value><value>. </value><value>Bitcoin Magazine</value><value>. Coin Publishing Ltd</value><value>. Retrieved </value><value>23 February</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Vigna, Paul; Casey, Michael J. (2015). "Community". </value><value>The Age of Cryptocurrency: How Bitcoin and the Blockchain Are Challenging ...</value><value> </value><value>Macmillan Publishers</value><value>. p. 88. </value><value>ISBN</value><value> </value><value>9781250065636</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ledger"</value><value>. Retrieved </value><value>4 February</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Hajdarbegovic, Nermin (23 February 2014). </value><value>"Ethereum launches 'Cryptocurrency 2.0' network"</value><value>. </value><value>CoinDesk</value><value>. Retrieved </value><value>22 February</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Aron, Jacob (6 February 2014). </value><value>"Bitcoin: How its core technology will change the world"</value><value>. </value><value>New Scientist</value><value> (2955)</value><value>. Retrieved </value><value>22 February</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Vitalik Buterin on Ethereum and The Decentralized Future"</value><value>. </value><value>Future Thinkers Podcast</value><value>. 2015-04-21</value><value>. Retrieved </value><value>2016-05-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"White Paper· ethereum/wiki Wiki · GitHub"</value><value>. </value><value>Archived</value><value> from the original on 28 March 2015.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Tapscott, Don; Tapscott, Alex (2016-05-07). </value><value>The Blockchain Revolution: How the Technology Behind Bitcoin is Changing Money, Business, and the World</value><value>. Portfolio. </value><value>ISBN</value><value> </value><value>978-0670069972</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Southurst, Jon (7 January 2014). </value><value>"Roger Ver and Erik Voorhees Back Bitcoin Wallet KryptoKit"</value><value>. </value><value>CoinDesk</value><value>. Retrieved </value><value>25 April</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kelly, Brian (2015). "Smart Money, set it and forget it". </value><value>The Bitcoin Big Bang: How Alternative Currencies Are About to Change the World</value><value>. </value><value>Wiley Publishing</value><value>. p. 156. </value><value>ISBN</value><value> </value><value>978-1118963661</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Antonopoulos, Andreas M. (December 20, 2014). "#4. Keys, Addresses, and Wallets". </value><value>Mastering Bitcoin: Unlocking Digital Cryptocurrencies</value><value>. </value><value>O'Reilly Media</value><value>. p. 82. </value><value>ISBN</value><value> </value><value>978-1449374044</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>
Sebastian, Clare (Nov 2017) </value><value>"Russia eyes cryptocurrency dominance"</value><value> </value><value>CNN Tech</value><value>. Retrieved 20 July 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Finley, Klint (5 June 2014). </value><value>"$100k Peter Thiel Fellowship Awarded to Ethereum's Vitalik Buterin"</value><value>. </value><value>CoinDesk</value><value>. Retrieved </value><value>11 August</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Self Published (2014). </value><value>"2014 World Technology Awards Winners"</value><value>. </value><value>www.wtn.net</value><value>. The World Technology Network</value><value>. Retrieved </value><value>11 April</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>40 under 40: Vitalik Buterin, 22</value><value>, </value><value>Fortune</value><value>, September 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Forbes 30 under 30</value><value>, </value><value>Forbes</value><value>, November 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stankovic, Stefan (29 January 2018). </value><value>"Who is Vitalik Buterin, The Mastermind Behind Ethereum? - Unblock"</value><value>. </value><value>Unblock</value><value>. Retrieved </value><value>11 April</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Fortune The Ledger 40 under 40: Vitalik Buterin"</value><value>. 29 July 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Dies Academicus of the University of Basel: Honorary doctorates for Hansjörg Schneider and Vitalik Buterin"</value><value>. 30 November 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Fundraising success! - Machine Intelligence Research Institute"</value><value>. </value><value>Machine Intelligence Research Institute</value><value>. 2018-01-10</value><value>. Retrieved </value><value>2018-07-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Elena, Milova (March 20, 2018). </value><value>"Vitalik Buterin: The Best Thing to Donate Money to is The Fight Against Aging"</value><value>. </value><value>LIFE EXTENSION ADVOCACY FOUNDATION</value><value>. Retrieved </value><value>March 21,</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"OmiseGO And Vitalik Buterin Donate $1 Million In Crypto To Charity For Ugandan Refugees"</value><value>. maija247news.com. 2 April 2018</value><value>. Retrieved </value><value>2018-04-30</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Sees Big Donations from Vitalik Buterin and the Pineapple Fund"</value><value>. </value><value>CCN</value><value>. 2018-02-18</value><value>. Retrieved </value><value>2018-07-28</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>DBLP</value><value>: </value><value>207/8171</value><value>
</value><value>ISNI</value><value>: </value><value>0000 0004 6468 4077</value><value>
</value><value>LNB</value><value>: </value><value>000241349</value><value>
</value><value>SUDOC</value><value>: </value><value>200735136</value><value>
</value><value>VIAF</value><value>: </value><value>8582148753711241320002</value><value>
</value><value> </value><value>WorldCat Identities</value><value>: </value><value>8582148753711241320002</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 4 December 2018, at 10:46</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Spacemacs</url><title>Spacemacs</title><text><value>Spacemacs</value><value>Spacemacs with recent files and editing windows open</value><value>Original author(s)</value><value>Sylvain Benner</value><value>[1]</value><value>Developer(s)</value><value>Sylvain Benner and many others</value><value>[2]</value><value>Initial release</value><value>30 October 2014</value><value>; 4 years ago</value><value> (</value><value>2014-10-30</value><value>)</value><value>Stable release</value><value>0.200.13</value><value>[3]</value><value>
   / 25 January 2018</value><value>; 9 months ago</value><value> (</value><value>2018-01-25</value><value>)</value><value>
</value><value>Written in</value><value>Emacs Lisp</value><value>Operating system</value><value>Unix</value><value>, </value><value>Linux</value><value>, </value><value>Windows NT</value><value>, </value><value>macOS</value><value>Available in</value><value>English (by default)</value><value>Type</value><value>Text editor</value><value>License</value><value>GPLv3</value><value>[4]</value><value>Website</value><value>spacemacs</value><value>.org</value><value>
</value><value>Spacemacs</value><value> is computer </value><value>software</value><value>, a </value><value>text editor</value><value> built on </value><value>GNU Emacs</value><value>.</value><value>[5]</value><value> Similar to Emacs, it features both </value><value>graphical</value><value> and </value><value>command-line</value><value> user interfaces, executable under </value><value>X Window System</value><value> and within a </value><value>Unix shell</value><value> terminal.</value><value>[6]</value><value> It is </value><value>free and open-source software</value><value> (FOSS) released under the </value><value>GNU General Public License</value><value> version 3.
</value><value>The editor has </value><value>syntax</value><value> highlighting feature enabled for major </value><value>programming languages</value><value>, and is configurable manually via </value><value>configuration files</value><value> and by internal </value><value>commands</value><value>.</value><value>[7]</value><value> Spacemacs has a novel mnemonic </value><value>key binding</value><value> design aimed at improving </value><value>ergonomics</value><value>, and includes verbose </value><value>software documentation</value><value>. It has three user-selectable input modes: </value><value>Emacs</value><value> mode, </value><value>Vim</value><value> mode, and Hybrid mode. It also supports user installed </value><value>plug-in</value><value> packages to allow extendability.</value><value>[8]</value><value>[9]</value><value>
</value><value>As of  2018</value><value>[update]</value><value>, its </value><value>repository</value><value> on </value><value>GitHub</value><value> has been starred over 16,000 times and has over 7,400 </value><value>commits</value><value>.</value><value>[10]</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Vim</value><value>
</value><value>Emacs</value><value>
</value><value>Comparison of text editors</value><value>
</value><value>Editor war</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Spacemacs: Emacs advanced kit focused on Evil"</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>Contributors to Spacemacs</value><value>, GitHub</value><value>
</value><value>
</value><value>^</value><value> </value><value>Releases – Spacemacs</value><value>, GitHub</value><value>
</value><value>
</value><value>^</value><value> </value><value>Benner, Sylvain. </value><value>"License"</value><value>. </value><value>Github.com</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Nedrich, Matt (2016-08-30). </value><value>"An Introduction to Spacemacs"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Erickson, Alejandro (2016-07-11). </value><value>"Emacs to Evil to Spacemacs, A Journey"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Benner, Sylvain (2016-10-03). </value><value>"Frequently Asked Questions"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>McCowan, Ian (2014-04-07). </value><value>"A Vimmer's Emacs Prerequisites"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>C.H., Swaroop (2015-05-22). </value><value>"Tech: Using Spacemacs"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>spacemacs</value><value> on </value><value>GitHub</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value>
</value><value>spacemacs</value><value> on </value><value>GitHub</value><value>
</value><value>v</value><value>t</value><value>e</value><value> </value><value>Emacs</value><value>Implementations</value><value>GNU and</value><value>derivative</value><value>
</value><value>GNU Emacs</value><value>
</value><value>XEmacs</value><value>
</value><value>SXEmacs</value><value>
</value><value>Aquamacs</value><value>
</value><value>Other</value><value>
</value><value>Climacs</value><value>
</value><value>Epsilon</value><value>
</value><value>Freemacs</value><value>
</value><value>EINE</value><value>
</value><value>Gosling Emacs</value><value>
</value><value>Mocklisp</value><value>
</value><value>Hemlock</value><value>
</value><value>JOVE</value><value>
</value><value>mg</value><value>
</value><value>MicroEMACS</value><value>
</value><value>MINCE</value><value>
</value><value>Multics Emacs</value><value>
</value><value>Perfect Writer</value><value>
</value><value>Spacemacs</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>vile</value><value>
</value><value>Zile</value><value>
</value><value>Zmacs</value><value>
</value><value>ZWEI</value><value>
</value><value>Modes</value><value>
</value><value>AUCTeX</value><value>
</value><value>Dired</value><value>
</value><value>Dunnet</value><value>
</value><value>Emacs Speaks Statistics</value><value>
</value><value>Emacspeak</value><value>
</value><value>EMMS</value><value>
</value><value>ERC</value><value>
</value><value>eww</value><value>
</value><value>Gnus</value><value>
</value><value>Org-mode</value><value>
</value><value>Planner</value><value>
</value><value>rcirc</value><value>
</value><value>RefTeX</value><value>
</value><value>SLIME</value><value>
</value><value>w3m</value><value>
</value><value>Internals</value><value>
</value><value>Emacs Lisp</value><value>
</value><value>Apel</value><value>
</value><value>MULE</value><value>
</value><value>Other</value><value>
</value><value>Conkeror</value><value>
</value><value>Dissociated press</value><value>
</value><value>Editor war</value><value>
</value><value>
</value><value> </value><value>Emacs on Wikimedia Commons</value><value>
</value><value> </value><value>Emacs on Wikiquotes</value><value>
</value><value>
</value><value>This </value><value>free-software</value><value>-related article is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>
</value><value>This </value><value>Linux</value><value>-related article is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 9 November 2018, at 06:32</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Emacs</url><title>Emacs</title><text><value>Not to be confused with </value><value>eMac</value><value>.</value><value>
</value><value>This article is about the class of text editors. For the most popular current example, see </value><value>GNU Emacs</value><value>.</value><value>
</value><value>Emacs</value><value>Editing multiple </value><value>Dired</value><value> buffers in </value><value>GNU Emacs</value><value>Developer(s)</value><value>David A. Moon</value><value>Guy L. Steele Jr.</value><value>Richard M. Stallman</value><value>Initial release</value><value>1976</value><value>; 42 years ago</value><value> (</value><value>1976</value><value>)</value><value>[1]</value><value>[2]</value><value>Stable release</value><value>26.1 </value><value>(May 28, 2018</value><value>; 6 months ago</value><value> (</value><value>2018-05-28</value><value>)</value><value>)</value><value> </value><value>[±]</value><value>
</value><value>Written in</value><value>Lisp</value><value>, </value><value>C</value><value>Operating system</value><value>Cross-platform</value><value>Type</value><value>Text editor</value><value>Website</value><value>www</value><value>.gnu</value><value>.org</value><value>/software</value><value>/emacs</value><value>/</value><value>
</value><value>Emacs</value><value> </value><value>/</value><value>ˈ</value><value>iː</value><value>m</value><value>æ</value><value>k</value><value>s</value><value>/</value><value> is a family of </value><value>text editors</value><value> that are characterized by their </value><value>extensibility</value><value>.</value><value>[3]</value><value> The manual for the most widely used variant,</value><value>[4]</value><value> </value><value>GNU Emacs</value><value>, describes it as "the extensible, customizable, self-documenting, real-time display editor".</value><value>[5]</value><value>  Development of the first Emacs began in the mid-1970s, and work on its direct descendant, GNU Emacs, continues actively as of  2018</value><value>[update]</value><value>.
</value><value>Emacs has over 10,000 built-in commands (many of which are macros themselves) and its </value><value>user interface</value><value> allows the user to combine these commands into </value><value>macros</value><value> to automate work. Implementations of Emacs typically feature a dialect of the </value><value>Lisp</value><value> programming language that provides a deep extension capability, allowing users and developers to write new commands and applications for the editor. Extensions have been written to </value><value>manage email</value><value>, </value><value>files</value><value>, </value><value>outlines</value><value>, and </value><value>RSS</value><value> feeds,</value><value>[6]</value><value> as well as clones of </value><value>ELIZA</value><value>, </value><value>Pong</value><value>, </value><value>Conway's Life</value><value>, </value><value>Snake</value><value> and </value><value>Tetris</value><value>.</value><value>[7]</value><value>
</value><value>The original EMACS was written in 1976 by </value><value>Carl Mikkelsen</value><value>, </value><value>David A. Moon</value><value> and </value><value>Guy L. Steele Jr.</value><value> as a set of </value><value>Editor MACroS</value><value> for the </value><value>TECO</value><value> editor.</value><value>[2]</value><value>[8]</value><value>[9]</value><value>[10]</value><value>[11]</value><value> It was inspired by the ideas of the TECO-macro editors TECMAC and TMACS.</value><value>[12]</value><value>
</value><value>The most popular, and most ported, version of Emacs is GNU Emacs, which was created by </value><value>Richard Stallman</value><value> for the </value><value>GNU Project</value><value>.</value><value>[13]</value><value> </value><value>XEmacs</value><value> is a variant that </value><value>branched</value><value> from GNU Emacs in 1991. GNU Emacs and XEmacs use similar Lisp dialects and are for the most part compatible with each other.
</value><value>Emacs is, along with </value><value>vi</value><value>, one of the two main contenders in the traditional </value><value>editor wars</value><value> of </value><value>Unix</value><value> culture. Emacs is among the oldest </value><value>free and open source</value><value> projects still under development.</value><value>[14]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>
</value><value>1.1</value><value> </value><value>Other early implementations</value><value>
</value><value>1.2</value><value> </value><value>GNU Emacs</value><value>
</value><value>1.3</value><value> </value><value>XEmacs</value><value>
</value><value>1.4</value><value> </value><value>Other forks of GNU Emacs</value><value>
</value><value>1.5</value><value> </value><value>Various Emacs editors</value><value>
</value><value>1.6</value><value> </value><value>Editors with Emacs emulation</value><value>
</value><value>
</value><value>
</value><value>2</value><value> </value><value>Features</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>General architecture</value><value>
</value><value>2.2</value><value> </value><value>Customizability</value><value>
</value><value>2.3</value><value> </value><value>Self-documenting</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Culture</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Church of Emacs</value><value>
</value><value>3.2</value><value> </value><value>Emacs pinky</value><value>
</value><value>3.3</value><value> </value><value>Terminology</value><value>
</value><value>3.4</value><value> </value><value>Emacs in popular culture</value><value>
</value><value>
</value><value>
</value><value>4</value><value> </value><value>See also</value><value>
</value><value>5</value><value> </value><value>Notes</value><value>
</value><value>6</value><value> </value><value>References</value><value>
</value><value>7</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>Editing </value><value>C</value><value> </value><value>source code</value><value> in </value><value>GNU Emacs</value><value>
</value><value>  </value><value>Editing, compiling and executing </value><value>C++</value><value> code from </value><value>GNU Emacs</value><value>
</value><value>  </value><value>The interface of Emacs was influenced by the design of the </value><value>Symbolics</value><value> </value><value>space-cadet keyboard</value><value>[15]</value><value>
</value><value>Emacs development began during the 1970s at the </value><value>MIT AI Lab</value><value>, whose </value><value>PDP-6</value><value> and </value><value>PDP-10</value><value> computers used the </value><value>Incompatible Timesharing System</value><value> (ITS) </value><value>operating system</value><value> that featured a default </value><value>line editor</value><value> known as </value><value>Tape Editor and Corrector</value><value> (TECO). Unlike most modern text editors, TECO used separate modes in which the user would either add text, edit existing text, or display the document. One could not place characters directly into a document by typing them into TECO, but would instead enter a character ('i') in the TECO command language telling it to switch to input mode, enter the required characters, during which time the edited text was not displayed on the screen, and finally enter a character (&lt;esc&gt;) to switch the editor back to command mode. (A similar technique was used to allow overtyping.) This behavior is similar to that of the program </value><value>ed</value><value>.
</value><value>Richard Stallman</value><value> visited the </value><value>Stanford AI Lab</value><value> in 1972 or 1974 and saw the lab's </value><value>E</value><value> editor, written by Fred Wright.</value><value>[16]</value><value> He was impressed by the editor's intuitive </value><value>WYSIWYG</value><value> (What You See Is What You Get) behavior, which has since become the default behavior of most modern text editors. He returned to MIT where Carl Mikkelsen, a </value><value>hacker</value><value> at the AI Lab, had added to TECO a combined display/editing mode called </value><value>Control-R</value><value> that allowed the screen display to be updated each time the user entered a keystroke. Stallman reimplemented this mode to run efficiently and then added a </value><value>macro</value><value> feature to the TECO display-editing mode that allowed the user to redefine any keystroke to run a TECO program.</value><value>[10]</value><value>
</value><value>E had another feature that TECO lacked: random-access editing. TECO was a page-sequential editor that was designed for editing </value><value>paper tape</value><value> on the </value><value>PDP-1</value><value> and typically allowed editing on only one page at a time, in the order of the pages in the file. Instead of adopting E's approach of structuring the file for page-random access on disk, Stallman modified TECO to handle large buffers more efficiently and changed its file-management method to read, edit, and write the entire file as a single buffer. Almost all modern editors use this approach.
</value><value>The new version of TECO quickly became popular at the AI Lab and soon accumulated a large collection of custom macros whose names often ended in </value><value>MAC</value><value> or </value><value>MACS</value><value>, which stood for </value><value>macro</value><value>. Two years later, </value><value>Guy Steele</value><value> took on the project of unifying the diverse macros into a single set.</value><value>[17]</value><value> Steele and Stallman's finished implementation included facilities for extending and documenting the new macro set.</value><value>[10]</value><value> The resulting system was called EMACS, which stood for </value><value>Editing MACroS</value><value> or, alternatively, </value><value>E with MACroS</value><value>. Stallman picked the name Emacs "because &lt;E&gt; was not in use as an abbreviation on ITS at the time."</value><value>[18]</value><value> An apocryphal </value><value>hacker koan</value><value> alleges that the program was named after </value><value>Emack &amp; Bolio's</value><value>, a popular </value><value>Cambridge</value><value> ice cream store.</value><value>[19]</value><value> The first operational EMACS system existed in late 1976.</value><value>[20]</value><value>
</value><value>Stallman saw a problem in too much customization and </value><value>de facto</value><value> forking and set certain conditions for usage.</value><value>[</value><value>citation needed</value><value>]</value><value> He later wrote:</value><value>[20]</value><value>
</value><value>
</value><value>"EMACS was distributed on a basis of communal sharing, which means all improvements must be given back to me to be incorporated and distributed."</value><value>
</value><value>The original Emacs, like TECO, ran only on the PDP-10 running ITS. Its behavior was sufficiently different from that of TECO that it could be considered a text editor in its own right, and it quickly became the standard editing program on ITS. </value><value>Mike McMahon</value><value> </value><value>ported</value><value> Emacs from ITS to the </value><value>TENEX</value><value> and </value><value>TOPS-20</value><value> operating systems. Other contributors to early versions of Emacs include </value><value>Kent Pitman</value><value>, </value><value>Earl Killian</value><value>, and </value><value>Eugene Ciccarelli</value><value>. By 1979, Emacs was the main editor used in MIT's AI lab and its Laboratory for Computer Science.</value><value>[21]</value><value>
</value><value>
</value><value>Other early implementations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In the following years, programmers wrote a variety of Emacs-like editors for other computer systems. These included </value><value>EINE</value><value> (</value><value>EINE Is Not EMACS</value><value>) and </value><value>ZWEI</value><value>[22]</value><value> (</value><value>ZWEI Was EINE Initially</value><value>), which were written for the </value><value>Lisp machine</value><value> by </value><value>Mike McMahon</value><value> and </value><value>Daniel Weinreb</value><value>, and Sine (</value><value>Sine Is Not Eine</value><value>),</value><value>[23]</value><value> which was written by Owen Theodore Anderson. Weinreb's </value><value>EINE</value><value> was the first Emacs written in Lisp. In 1978, </value><value>Bernard Greenberg</value><value> wrote </value><value>Multics Emacs</value><value> almost entirely in Multics Lisp at </value><value>Honeywell</value><value>'s Cambridge Information Systems Lab. Multics Emacs was later maintained by </value><value>Richard Soley</value><value>, who went on to develop the NILE Emacs-like editor for the NIL Project, and by Barry Margolin. Many versions of Emacs, including GNU Emacs, would later adopt Lisp as an extension language.
</value><value>James Gosling</value><value>, who would later invent </value><value>NeWS</value><value> and the </value><value>Java programming language</value><value>, wrote </value><value>Gosling Emacs</value><value> in 1981. The first Emacs-like editor to run on </value><value>Unix</value><value>, Gosling Emacs was written in </value><value>C</value><value> and used </value><value>Mocklisp</value><value>, a language with Lisp-like syntax, as an extension language.
</value><value>
</value><value>GNU Emacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>GNU Emacs</value><value>
</value><value>  </value><value>GNU Emacs</value><value> running in a </value><value>text console</value><value>
</value><value>  </value><value>GNU Emacs running on </value><value>Microsoft Windows</value><value>
</value><value>Richard Stallman began work on GNU Emacs in 1984 to produce a </value><value>free software</value><value> alternative to the proprietary Gosling Emacs. GNU Emacs was initially based on Gosling Emacs, but Stallman's replacement of its Mocklisp interpreter with a true Lisp interpreter required that nearly all of its code be rewritten. This became the first program released by the nascent GNU Project. GNU Emacs is written in C and provides </value><value>Emacs Lisp</value><value>, also implemented in C, as an extension language. Version 13, the first public release, was made on March 20, 1985. The first widely distributed version of GNU Emacs was version 15.34, released later in 1985. Early versions of GNU Emacs were numbered as </value><value>1.x.x</value><value>, with the initial digit denoting the version of the C core. The </value><value>1</value><value> was dropped after version 1.12, as it was thought that the major number would never change, and thus the numbering skipped from </value><value>1</value><value> to </value><value>13</value><value>.</value><value>[24]</value><value> In September 2014, it was announced on the GNU emacs-devel mailing list that GNU Emacs would adopt a </value><value>rapid release</value><value> strategy and version numbers would increment more quickly in the future.</value><value>[25]</value><value>
</value><value>GNU Emacs was later ported to Unix. It offered more features than Gosling Emacs, in particular a full-featured Lisp as its extension language, and soon replaced Gosling Emacs as the </value><value>de facto</value><value> Unix Emacs editor. </value><value>Markus Hess</value><value> exploited a security flaw in GNU Emacs' email subsystem in his 1986 cracking spree in which he gained </value><value>superuser</value><value> access to Unix computers.</value><value>[26]</value><value>
</value><value>GNU Emacs uses a layered architecture, with a </value><value>Turing complete</value><value> language running on top of a smaller central core.  Because about 70% of GNU Emacs is written in the Elisp extension language,</value><value>[27]</value><value> and the set of features implemented in Elisp code are automatically present once the C core (which implements the Elisp interpreter, weighing 247 kLOC as of version 24.4) has been ported, porting Emacs to a new platform is considerably less difficult than porting an equivalent project consisting of native code only.  Theoretically, only the core must be ported to the new platform; once the core is ported, the portions implemented in the language above take minimal work to bring over.
</value><value>GNU Emacs development was relatively closed until 1999 and was used as an example of the </value><value>Cathedral</value><value> development style in </value><value>The Cathedral and the Bazaar</value><value>. The project has since adopted a public development mailing list and anonymous </value><value>CVS</value><value> access. Development took place in a single CVS trunk until 2008 and was then switched to the Bazaar </value><value>DVCS</value><value>. On November 11, 2014, development was moved to </value><value>Git</value><value>.</value><value>[28]</value><value>
</value><value>Richard Stallman has remained the principal maintainer of GNU Emacs, but he has stepped back from the role at times. Stefan Monnier and Chong Yidong were maintainers from 2008-2015.</value><value>[29]</value><value>[30]</value><value> John Wiegley was named maintainer in 2015 after a meeting with Stallman at MIT.</value><value>[31]</value><value> As of early 2014, GNU Emacs has had 579 individual </value><value>committers</value><value> throughout its history.</value><value>[32]</value><value>
</value><value>
</value><value>XEmacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>XEmacs</value><value>
</value><value>  </value><value>XEmacs</value><value> 21.5 on </value><value>GNU</value><value>/</value><value>Linux</value><value>
</value><value>Lucid Emacs, based on an early alpha version of GNU Emacs 19, was developed beginning in 1991 by </value><value>Jamie Zawinski</value><value> and others at </value><value>Lucid Inc.</value><value> One of the best-known early forks in </value><value>free software</value><value> development occurred when the codebases of the two Emacs versions diverged and the separate development teams ceased efforts to merge them back into a single program.</value><value>[33]</value><value> Lucid Emacs has since been renamed </value><value>XEmacs</value><value> and remains the second most popular variety of Emacs, after GNU Emacs.</value><value>[</value><value>citation needed</value><value>]</value><value> XEmacs development has slowed, with the most recent stable version 21.4.22 released in January 2009 (while a beta was released in 2013), while GNU Emacs has implemented many formerly XEmacs-only features. This has led some users to proclaim XEmacs' death.</value><value>[34]</value><value>
</value><value>
</value><value>Other forks of GNU Emacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Other forks, less known than XEmacs, include:
</value><value>
</value><value>Remacs – a port of GNU Emacs to the </value><value>Rust</value><value> programming language.</value><value>[35]</value><value>
</value><value>Meadow</value><value> – a Japanese version for Microsoft Windows</value><value>[36]</value><value>
</value><value>SXEmacs</value><value> – Steve Youngs' fork of XEmacs</value><value>[37]</value><value>
</value><value>Aquamacs</value><value> – based on GNU Emacs (Aquamacs 3.2 is based on GNU Emacs version 24 and Aquamacs 3.3 is based on GNU Emacs version 25) which focuses on integrating with the Apple Macintosh user interface</value><value>
</value><value>Various Emacs editors</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>The </value><value>mg</value><value> tiny Emacs-like editor in </value><value>OpenBSD</value><value> 5.3. Editing </value><value>Ruby</value><value> </value><value>source code</value><value>
</value><value>  </value><value>Zmacs</value><value>, an Emacs for </value><value>Lisp machines</value><value>
</value><value>In the past, projects aimed at producing small versions of Emacs proliferated. GNU Emacs was initially targeted at computers with a 32-bit flat address space and at least 1 </value><value>MiB</value><value> of RAM.  Such computers were high end </value><value>workstations</value><value> and </value><value>minicomputers</value><value> in the 1980s, and this left a need for smaller reimplementations that would run on common </value><value>personal computer</value><value> hardware.  In more recent times, small clones have been designed to fit on software installation disks.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>Other projects aim to implement Emacs in a different dialect of Lisp or a different programming language altogether.  Although not all are still actively maintained, these clones include:
</value><value>
</value><value>MicroEMACS</value><value>, which was originally written by Dave Conroy and further developed by Daniel Lawrence and which exists in many variations.</value><value>
</value><value>mg</value><value>, originally called MicroGNUEmacs and, later, mg2a, a public-domain offshoot of MicroEMACS intended to more closely resemble GNU Emacs. Now installed by default on </value><value>OpenBSD</value><value>.</value><value>
</value><value>NotGNU,</value><value>[38]</value><value> a small, fast, proprietary </value><value>freeware</value><value> implementation for DOS, Win16, Win32 and Linux by Julie Melbin.</value><value>
</value><value>JOVE</value><value> (Jonathan's Own Version of Emacs), Jonathan Payne's non-programmable Emacs implementation for </value><value>UNIX-like</value><value> systems.</value><value>
</value><value>MINCE</value><value> (MINCE Is Not Complete Emacs), a version for CP/M and later DOS, from </value><value>Mark of the Unicorn</value><value>. MINCE evolved into Final Word, which eventually became the Borland </value><value>Sprint</value><value> word processor.</value><value>
</value><value>Perfect Writer</value><value>, a </value><value>CP/M</value><value> implementation derived from MINCE that was included circa 1982 as the default word processor with the very earliest releases of the Kaypro II and Kaypro IV. It was later provided with the Kaypro 10 as an alternative to </value><value>WordStar</value><value>.</value><value>
</value><value>Freemacs</value><value>, a </value><value>DOS</value><value> version that uses an extension language based on text macro expansion and fits within the original 64 </value><value>KiB</value><value> flat memory limit.</value><value>
</value><value>Zile</value><value>. Zile was a recursive acronym for </value><value>Z</value><value>ile </value><value>I</value><value>s </value><value>L</value><value>ossy</value><value> </value><value>E</value><value>macs</value><value>,</value><value>[39]</value><value> but the project was rewritten in </value><value>Lua</value><value> and now gives the expansion as Zile Implements Lua Editors. The new Zile still includes an implementation of Emacs in Lua called Zemacs. There is also an implementation of vi called Zi.</value><value>
</value><value>Zmacs</value><value>, for the MIT </value><value>Lisp Machine</value><value> and its descendants, implemented in </value><value>ZetaLisp</value><value>.</value><value>
</value><value>Climacs</value><value>, a Zmacs-influenced variant implemented in </value><value>Common Lisp</value><value>.</value><value>
</value><value>QEmacs</value><value>,</value><value>[40]</value><value> a small editor by </value><value>Fabrice Bellard</value><value> with UTF-8 capability that can quickly edit files as large as hundreds of MiB in size.</value><value>
</value><value>Epsilon</value><value>,</value><value>[41]</value><value> an Emacs clone by Lugaru Software. Versions for DOS, Windows, Linux, FreeBSD, Mac OS X and O/S 2 are bundled in the release. It uses a non-Lisp extension language with C syntax and used a very early concurrent command shell buffer implementation under the single-tasking MS-DOS.</value><value>
</value><value>PceEmacs</value><value> is the Emacs-based editor for </value><value>SWI-Prolog</value><value>.</value><value>
</value><value>EmACT</value><value>, a 1986 fork of MicroEmacs by Christian Jullien. EmACT</value><value>[42]</value><value> source code is available at SourceForge.</value><value>
</value><value>Amacs</value><value>, an Apple II ProDOS version of Emacs implemented in 6502 assembly by </value><value>Brian Fox</value><value>.</value><value>[43]</value><value>[44]</value><value>
</value><value>Hemlock</value><value>, originally written in </value><value>Spice Lisp</value><value>, then </value><value>Common Lisp</value><value>. A part of </value><value>CMU Common Lisp</value><value>. Influenced by </value><value>Zmacs</value><value>. Later forked by Lucid Common Lisp (as Helix), </value><value>LispWorks</value><value> and </value><value>Clozure CL</value><value> projects. There is also a Portable Hemlock project, which aims to provide a Hemlock, which runs on several Common Lisp implementations.</value><value>
</value><value>umacs</value><value>,</value><value>[45]</value><value> an implementation under </value><value>OS-9</value><value>
</value><value>Editors with Emacs emulation</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Yi</value><value>, an editor that is written and extensible in </value><value>Haskell</value><value> and has an emulation mode for Emacs.</value><value>
</value><value>Joe's Own Editor</value><value> emulates Emacs keybindings when invoked as </value><value>jmacs</value><value>.</value><value>
</value><value>JED</value><value> has an emulation mode for Emacs.</value><value>
</value><value>Eclipse (IDE)</value><value> provides a set of Emacs keybindings.</value><value>
</value><value>IntelliJ IDEA</value><value> provides a set of Emacs keybindings.</value><value>
</value><value>Epsilon (text editor)</value><value> Defaults to Emacs emulation and supports a vi mode.</value><value>
</value><value>The </value><value>Cocoa text system</value><value> uses some of the same terminology and understands many Emacs navigation bindings. This is possible because the native UI uses the </value><value>Command key</value><value> (equivalent to Super) instead of the </value><value>Control key</value><value>.</value><value>[46]</value><value>
</value><value>Sublime Text</value><value> can emulate some of Emacs' behavior with the SublemacsPro plugin.</value><value>[47]</value><value>
</value><value>Visual Studio Emacs Keys</value><value> provides a set of Emacs keybindings for Visual Studio users</value><value>
</value><value>GNU Readline</value><value> is a </value><value>line editor</value><value> that understands the standard Emacs navigation keybindings. It also has a </value><value>vi</value><value> emulation mode.</value><value>
</value><value>GNOME Builder</value><value> has an emulation mode for Emacs.</value><value>
</value><value>Features</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Emacs is primarily a </value><value>text editor</value><value> and is designed for manipulating pieces of text, although it is capable of formatting and printing documents like a </value><value>word processor</value><value> by interfacing with external programs such as </value><value>LaTeX</value><value>, </value><value>Ghostscript</value><value> or a web browser. Emacs provides commands to manipulate and </value><value>differentially display</value><value> </value><value>semantic</value><value> units of text such as </value><value>words</value><value>, </value><value>sentences</value><value>, </value><value>paragraphs</value><value> and </value><value>source code</value><value> constructs such as </value><value>functions</value><value>. It also features </value><value>keyboard macros</value><value> for performing user-defined batches of editing commands.
</value><value>GNU Emacs is a </value><value>real-time display</value><value> editor, as its edits are displayed onscreen as they occur. This is standard behavior for modern text editors but EMACS was among the earliest to implement this functionality instead of having to issue a separate command to insert new edits into the existing text as in vi.
</value><value>
</value><value>General architecture</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Almost all of the functionality in Emacs, including basic editing operations such as the insertion of characters into a document, is achieved through </value><value>functions</value><value> written in </value><value>Emacs Lisp</value><value> (ELisp), a dialect of the </value><value>Lisp programming language</value><value>. The ELisp layer sits atop a stable core of basic services and platform abstraction written in the </value><value>C programming language</value><value>. In this Lisp environment, </value><value>variables</value><value> and </value><value>functions</value><value> can be modified with no need to recompile or restart Emacs.
</value><value>Emacs operates on </value><value>data structures</value><value> called </value><value>buffers</value><value> containing text with additional attributes; every buffer maintains its own </value><value>point</value><value> (cursor location) and </value><value>mark</value><value> (another location, delimiting the selected </value><value>region</value><value> together with the </value><value>point</value><value>), the name of the file it is </value><value>visiting</value><value> (if applicable) and the set of active </value><value>modes</value><value> (exactly one </value><value>major mode</value><value>[</value><value>clarification needed</value><value>]</value><value> and any number of </value><value>minor modes</value><value>[</value><value>clarification needed</value><value>]</value><value>), which control editor behaviour through variables. Elisp code can be executed interactively through named </value><value>commands</value><value>, which can be bound to key presses or accessed by name; some commands evaluate arbitrary Elisp code from buffers (e.g. </value><value>eval-region</value><value> or </value><value>eval-buffer</value><value>).
</value><value>Buffers are displayed in </value><value>windows</value><value>, which are tiled portions of the terminal screen or the GUI window (called a </value><value>frame</value><value> in Emacs terms; multiple frames are possible). Unless configured otherwise, windows include scroll bars, line numbers, a </value><value>header line</value><value> at the top (usually displaying the buffer title or filename) and a </value><value>mode line</value><value> at the bottom (usually listing the active modes and point position of the buffer).
</value><value>Multiple windows can be opened onto the same buffer, for example to see different parts of a long text, and multiple buffers can share the same text, for example to take advantage of different major modes in a mixed-language file. The mode can also be changed manually as needed with </value><value>M-x &lt;mode name&gt;</value><value>.
</value><value>
</value><value>Customizability</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Keystrokes can be recorded into macros and replayed to automate complex, repetitive tasks. This is often done on an ad-hoc basis, with each macro discarded after use, although macros can be saved and invoked later.</value><value>
</value><value>At startup, Emacs executes an Emacs Lisp script named </value><value>~/.emacs</value><value> (recent versions also look for </value><value>~/emacs.el</value><value> and </value><value>~/.emacs.d/init.el</value><value>;</value><value>[48]</value><value> Emacs will execute the first one it finds, ignoring the rest). This personal customization file can be arbitrarily long and complex, but typical content includes:
</value><value>Setting global variables or invoking functions to customize Emacs behaviour, for example </value><value>(set-default-coding-systems 'utf-8)</value><value>
</value><value>Key bindings</value><value> to override standard ones and to add shortcuts for commands that the user finds convenient but don't have a key binding by default. Example: </value><value>(global-set-key (kbd "C-x C-b") 'ibuffer)</value><value>
</value><value>Loading, enabling and initializing extensions (Emacs comes with many extensions, but only a few are loaded by default.)</value><value>
</value><value>Configuring </value><value>event hooks</value><value> to run arbitrary code at specific times, for example to automatically recompile source code after saving a buffer (</value><value>after-save-hook</value><value>)</value><value>
</value><value>Executing arbitrary files, usually to split an overly long configuration file into manageable and homogeneous parts (</value><value>~/.emacs.d/</value><value> and </value><value>~/elisp/</value><value> are traditional locations for these personal scripts)</value><value>
</value><value>The </value><value>customize</value><value> extension allows the user to set configuration properties such as the color scheme interactively, from within Emacs, in a more user-friendly way than by setting variables in </value><value>.emacs</value><value>: it offers search, descriptions and help text, multiple choice inputs, reverting to defaults, modification of the running Emacs instance without reloading, and other conveniences similar to the </value><value>preferences</value><value> functionality of other programs. The customized values are saved in </value><value>.emacs</value><value> (or another designated file) automatically.</value><value>
</value><value>Themes</value><value>, affecting the choice of fonts and colours, are defined as elisp files and chosen through the customize extension.</value><value>
</value><value>Self-documenting</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The first Emacs contained a </value><value>help</value><value> library that included documentation for every command, variable and internal function. Because of this, Emacs proponents described the software as </value><value>self-documenting</value><value> in that it presents the user with information on its normal features and its current state. Each function includes a documentation string that is displayed to the user on request, a practice that subsequently spread to programming languages including </value><value>Lisp</value><value>, </value><value>Java</value><value>, </value><value>Perl</value><value>, and </value><value>Python</value><value>. This help system can take users to the actual code for each function, whether from a built-in library or an added third-party library.
</value><value>Emacs also has a built-in </value><value>tutorial</value><value>. Emacs displays instructions for performing simple editing commands and invoking the tutorial when it is launched with no file to edit. The tutorial is by Stuart Cracraft and Richard Stallman.
</value><value>
</value><value>Culture</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Church of Emacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Editor war</value><value>
</value><value>  </value><value>Richard Stallman</value><value> as St I</value><value>GNUcius</value><value>, a saint in the </value><value>Church of Emacs</value><value>
</value><value>The </value><value>Church of Emacs</value><value>, formed by </value><value>Richard Stallman</value><value>, is a </value><value>parody religion</value><value> created for Emacs users.</value><value>[49]</value><value> While it refers to </value><value>vi</value><value> as the </value><value>editor of the beast</value><value> (vi-vi-vi being </value><value>6-6-6</value><value> in Roman numerals), it does not oppose the use of vi; rather, it calls </value><value>proprietary software</value><value> </value><value>anathema</value><value>. ("Using a </value><value>free</value><value> version of vi is not a sin but a </value><value>penance</value><value>."</value><value>[50]</value><value>) The Church of Emacs has its own </value><value>newsgroup</value><value>, </value><value>alt.religion.emacs</value><value>,</value><value>[51]</value><value> that has posts purporting to support this parody religion. Supporters of vi have created an opposing </value><value>Cult of vi</value><value>.
</value><value>Stallman has jokingly referred to himself as </value><value>St I </value><value>GNU</value><value> cius</value><value>, a saint in the Church of Emacs.</value><value>[52]</value><value>
</value><value>
</value><value>Emacs pinky</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>There is folklore attributing a </value><value>repetitive strain injury</value><value> colloquially called </value><value>Emacs </value><value>pinky</value><value> to Emacs' strong dependence on modifier keys,</value><value>[53]</value><value> although there have not been any studies done to show Emacs causes more such problems than other keyboard-heavy computer programs.
</value><value>Users have addressed this through various approaches. Some users recommend simply using the two Control keys on typical PC keyboards like Shift keys while touch typing to avoid overly straining the left pinky.</value><value>[54]</value><value> Software-side methods include:</value><value>[55]</value><value>
</value><value>
</value><value>Customizing the key layout so that the Control key is transposed with the caps lock key.</value><value>[56]</value><value> Similar techniques include defining the caps lock key as an additional Control key or transposing the Control and Meta keys.</value><value>This technique has also been specifically recommended </value><value>against</value><value> as </value><value>contributing</value><value> to Emacs pinky.</value><value>[</value><value>clarification needed</value><value>]</value><value>
</value><value>Software, such as xwrits or the built-in </value><value>type-break-mode</value><value> in Emacs, that reminds the user to take regularly scheduled breaks.</value><value>
</value><value>Using the ErgoEmacs keybindings (with minor mode </value><value>ergoemacs-mode</value><value>).</value><value>[57]</value><value>[58]</value><value>
</value><value>Customizing the whole keyboard layout to move statistically frequent Emacs keys to more appropriate places.</value><value>[59]</value><value>
</value><value>Packages such as </value><value>ace-jump-mode</value><value>[60]</value><value> or elisp extensions that provide similar functionality of tiered navigation, first asking for a character then replacing occurrences of the character with access keys for cursor movement.</value><value>
</value><value>evil-mode</value><value>, an advanced </value><value>Vim</value><value> emulation layer.</value><value>
</value><value>god-mode</value><value>, which provides an approach similar to vim's with a mode for entering Emacs commands without modifier keys.</value><value>
</value><value>Using customized key layout offered by </value><value>Spacemacs</value><value>, a project where </value><value>Space</value><value> key is used as the main key for initiating control sequences. The project also heavily incorporates both </value><value>evil-mode</value><value> and </value><value>god-mode</value><value>.</value><value>[61]</value><value>
</value><value>StickyKeys</value><value>, which turns key sequences into key combinations.</value><value>[62]</value><value>
</value><value>Emacs' built-in </value><value>viper-mode</value><value> that allows use of the </value><value>vi</value><value> key layout for basic text editing and the Emacs scheme for more advanced features.</value><value>[63]</value><value>
</value><value>Giving a dual role to a more-comfortably accessed key such as the </value><value>Space bar</value><value> so that it functions as a Control key when pressed in combination with other keys. </value><value>Ergonomic keyboards</value><value> or keyboards with a greater number of keys adjacent to the space bar, such as </value><value>Japanese keyboards</value><value>, allow thumb control of other modifier keys too like Meta or Shift.</value><value>[64]</value><value>
</value><value>Using a limited ergonomic subset of keybindings, and accessing other functionality by typing </value><value>M-x &lt;command-name&gt;</value><value>. M-x itself can also be rebound.</value><value>
</value><value>Driving Emacs through voice input.</value><value>
</value><value>Hardware solutions include special keyboards such as </value><value>Kinesis's Contoured Keyboard</value><value>, which places the modifier keys where they can easily be operated by the </value><value>thumb</value><value>, or the </value><value>Microsoft Natural keyboard</value><value>, whose large modifier keys are placed symmetrically on both sides of the keyboard and can be pressed with the palm of the hand.</value><value>[53]</value><value> Foot pedals can also be used.
</value><value>The </value><value>Emacs pinky</value><value> is a relatively recent development. The </value><value>Space-cadet keyboard</value><value> on which Emacs was developed had oversized Control keys that were adjacent to the space bar and were easy to reach with the thumb.</value><value>[65]</value><value>
</value><value>
</value><value>Terminology</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The word </value><value>emacs</value><value> is sometimes pluralized as </value><value>emacsen</value><value>, by phonetic analogy with </value><value>boxen</value><value> and </value><value>VAXen</value><value>, referring to different varieties of Emacs.</value><value>[66]</value><value>
</value><value>
</value><value>Emacs in popular culture</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In the movie, </value><value>The Internship (2013)</value><value>, at 01:21:01, Nick Campbell asks, "It occurred to me, why not use Emacs rather than vi as the default editor for Ubuntu?" to which Dana replies, "That's actually a very good thought, Nick."</value><value>[67]</value><value>
</value><value>On the television series, </value><value>Silicon Valley Season 3, episode 6</value><value>, Richard asks, "I mean, why not just use Vim over Emacs?", to which Winnie replies, "I do use Vim over Emacs.", to which Richard responds, "Oh, God, help us!"</value><value>[68]</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Comparison of text editors</value><value>
</value><value>Conkeror</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>List of text editors</value><value>
</value><value>List of Unix programs</value><value>
</value><value>Integrated development environment</value><value>
</value><value>Notes</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents&gt;ul{list-style-type:none;margin-left:0}.mw-parser-output .refbegin-hanging-indents&gt;ul&gt;li,.mw-parser-output .refbegin-hanging-indents&gt;dl&gt;dd{margin-left:0;padding-left:3.2em;text-indent:-3.2em;list-style:none}.mw-parser-output .refbegin-100{font-size:100%}</value><value>
</value><value>Ciccarelli, Eugene</value><value> (1978). </value><value>An Introduction to the Emacs Editor</value><value>. Cambridge, Massachusetts: MIT Artificial Intelligence Laboratory. AIM-447.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value> </value><value>PDF</value><value>
</value><value>Stallman, Richard M.</value><value> (1981) [1979]. </value><value>EMACS: The Extensible, Customizable, Self-Documenting Display Editor</value><value>. Cambridge Massachusetts: MIT Artificial Intelligence Laboratory. AIM-519A.</value><value> </value><value>PDF</value><value> </value><value>HTML</value><value>
</value><value>Stallman, Richard M.</value><value> (2002). </value><value>GNU Emacs Manual</value><value> (15th ed.). GNU Press. </value><value>ISBN</value><value> </value><value>1-882114-85-X</value><value>.</value><value>
</value><value>Stallman, Richard M.</value><value> (2002). </value><value>"My Lisp Experiences and the Development of GNU Emacs"</value><value>. Retrieved </value><value>2007-02-01</value><value>.</value><value>
</value><value>Chassel, Robert J.</value><value> (2004). </value><value>An Introduction to Programming in Emacs Lisp</value><value>. GNU Press. </value><value>ISBN</value><value> </value><value>1-882114-56-6</value><value>.</value><value>
</value><value>Glickstein, Bob (April 1997). </value><value>Writing GNU Emacs Extensions</value><value>. O'Reilly &amp; Associates. </value><value>ISBN</value><value> </value><value>1-56592-261-1</value><value>.</value><value>
</value><value>Cameron, Debra; Elliott, James; Loy, Marc; Raymond, Eric; Rosenblatt, Bill (December 2004). </value><value>Learning GNU Emacs, 3rd Edition</value><value>. O'Reilly &amp; Associates. </value><value>ISBN</value><value> </value><value>0-596-00648-9</value><value>.</value><value>
</value><value>Finseth, Craig A. (1991). </value><value>The Craft of Text Editing -or- Emacs for the Modern World</value><value>. Springer-Verlag &amp; Co. </value><value>ISBN</value><value> </value><value>978-1-4116-8297-9</value><value>.</value><value>
</value><value>Thompson, Adrienne G. (2009). </value><value>"MACSimizing TECO"</value><value>. Retrieved </value><value>2012-02-26</value><value>.</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs Release Dates"</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>
</value><value>Zawinski, Jamie</value><value> (2005-06-21) [1999]. </value><value>"Emacs Timeline"</value><value>. Retrieved </value><value>11 August</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A Tutorial Introduction to GNU Emacs"</value><value>. </value><value>For an editor to be called "emacs" the main requirement is that it be fully extensible with a real programming language, not just a macro language.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs Pocket Reference"</value><value>. </value><value>GNU Emacs is the most popular and widespread of the Emacs family of editors.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs Manual"</value><value>. </value><value>GNU Emacs Manual</value><value>. FSF</value><value>. Retrieved </value><value>24 November</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Introducing Elfeed, an Emacs Web Feed Reader"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Amusements"</value><value>. </value><value>Finally, if you find yourself frustrated, try describing your problems to the famous psychotherapist Eliza. Just do M-x doctor.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Greenberg, Bernard S. (1979). </value><value>Multics Emacs: The History, Design and Implementation</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs FAQ"</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Adrienne G. Thompson. </value><value>"MACSimizing TECO"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Richard Stallman</value><value> is often credited as another co-creator, but as </value><value>Daniel Weinreb</value><value> wrote, "The original (TECO-based) Emacs was created and designed by Guy L. Steele Jr. and David Moon. After they had it working, and it had become established as the standard text editor at the AI lab, Stallman took over its maintenance." Moon himself responded "All true, so far as I can remember. But in all fairness I have to say that Stallman greatly improved Emacs after he “liberated” it from Guy and me." See </value><value>Weinreb, Dan</value><value> (November 11, 2007), </value><value>"Rebuttal to Stallman's Story About The Formation of Symbolics and LMI"</value><value>, </value><value>Dan Weinreb's blog: software and innovation</value><value>, archived from </value><value>the original</value><value> on January 1, 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A history of Emacs"</value><value>. </value><value>XEmacs Internals Manual</value><value>. 2006-12-11</value><value>. Retrieved </value><value>2007-08-22</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Allombert, Bill. </value><value>"Debian Popularity Contest"</value><value>. </value><value>Editors report</value><value>. Debian</value><value>. Retrieved </value><value>22 November</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The 10 oldest, significant open-source programs"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S.; Cameron, Debra; Rosenblatt, Bill (1996). </value><value>Learning GNU Emacs, 2nd Edition</value><value>. Sebastopol, CA: O'Reilly. pp. 408–409. </value><value>ISBN</value><value> </value><value>1-56592-152-6</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Arthur Samuel (March 1980). </value><value>"Essential E"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>2011-08-01</value><value>.</value><value>[</value><value>permanent dead link</value><value>]</value><value>
</value><value>
</value><value>^</value><value> </value><value>"EMACS vs. vi: The endless geek 'holy war</value><value>'</value><value>"</value><value>. </value><value>"EMACS as such actually started out as a standards project," emails Guy Steele</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stallman, Richard M.</value><value> (1987). </value><value>"The EMACS Full-Screen Editor"</value><value>. </value><value>GARB</value><value> (Maj 1987). Lysator, Linköping University. pp. 8–11</value><value>. Retrieved </value><value>2007-09-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Reynolds, Craig (1992-02-10).  Wiseman, David G., ed. </value><value>"The Emac Bolio Name Koan"</value><value>. </value><value>David G. Wiseman: Stories of Computer Folklore</value><value>. </value><value>A cocky novice once said to Stallman: 'I can guess why the editor is called Emacs, but why is the justifier called Bolio?'. Stallman replied forcefully, Names are but names, Emack &amp; Bolio's is the name of a popular ice cream shop in Boston town. Neither of these men had anything to do with the software.' His question answered, yet unanswered, the novice turned to go, but Stallman called to him, 'Neither Emacs nor Bolio had anything to do with the ice cream shop, either.'</value><value>[</value><value>permanent dead link</value><value>]</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Stallman, Richard (March 26, 1981). </value><value>EMACS: The Extensible, Customizable, Self-Documenting, Display Editor</value><value> </value><value>(PDF)</value><value> (Technical report). MIT AI Lab. AI Memo 519a</value><value>. Retrieved </value><value>2011-01-07</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Leigh Klotz (2007-08-29). </value><value>"email quoted in "Be Careful What You Joke About</value><value>"</value><value>"</value><value>. </value><value>The New York Times</value><value>. Retrieved </value><value>2010-05-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Comment by ZWEI's author Dan Weinreb"</value><value>. </value><value>I wrote the second Emacs ever: the Lisp machine implementation, whose spec was "do what Stallman's PDP-10 (original) Emacs does", and then progressed from there. There's just a whole LOT of it. It took me and Mike McMahon endless hours to implement so many commands to make ZWEI/Zmacs.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Owen Theodore Anderson (January 1979). </value><value>"The Design and Implementation of a Display-Oriented Editor Writing System"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>2012-09-09</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A History of Emacs"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"emacs-devel msg 00872 (2014-09-29)"</value><value>. </value><value>In retrospect 24.3 should have been named 25.1 and 24.4 should have been named 26.1.  The </value><value>.N</value><value> thingy should really be kept only for bug-fix releases and neither of 24.3, 24.4, nor the previously planned 24.5 are bug-fix releases.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stoll, Clifford</value><value> (1988). "Stalking the wily hacker". </value><value>Communications of the ACM</value><value>. </value><value>31</value><value> (5): 484–497. </value><value>doi</value><value>:</value><value>10.1145/42411.42412</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs"</value><value>. </value><value>Open Hub</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric</value><value> (2014-11-12). </value><value>"New Git repository is up"</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stallman, Richard</value><value> (2008-02-22). </value><value>"Re: Looking for a new Emacs maintainer or team"</value><value>. gnu.org Mailing List</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>McNamara, Paul (2008-02-25). </value><value>"Stallman on handing over GNU Emacs, its future and the importance of nomenclature"</value><value>. </value><value>Network World</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Chirgwin, Richard (2015-11-05). </value><value>"Emacs gets new maintainer as Richard Stallman signs off"</value><value>. </value><value>The Register</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric</value><value> (2014-03-29). </value><value>"Ugliest…repository…conversion…ever"</value><value>. Retrieved </value><value>2017-11-25</value><value>. </value><value>twenty-nine years of continuous development by no fewer than 579 people</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stephen J., Turnbull. </value><value>"XEmacs vs. GNU Emacs"</value><value>. Retrieved </value><value>2012-10-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"XEmacs is Dead. Long Live XEmacs!"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Remacs"</value><value>. </value><value>The Remacs github repository</value><value>. Retrieved </value><value>22 February</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>FrontPage - Meadow Wiki</value><value> </value><value>Archived</value><value> 2012-02-16 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SXEmacs Website"</value><value>. Sxemacs.org. 2009-10-11</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"NotGNU Emacs Editor (Author's Official Download Site)"</value><value>. Notgnu.org. 2004-01-15</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Zile home page"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"QEmacs Homepage"</value><value>. Fabrice.bellard.free.fr</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Lugaru Software Homepage"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Christian Jullien. (1986). </value><value>"EmACT on sourceforge"</value><value>. Christian Jullien</value><value>. Retrieved </value><value>31 December</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"AMACS source"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"apple2.org"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Paul S. Dayan (1992). </value><value>The OS-9 Guru - 1 : The Facts</value><value>. Galactic Industrial Limited. </value><value>ISBN</value><value> </value><value>0-9519228-0-7</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Cocoa text system"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SublemacsPro plugin for Sublime Text"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Init file"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Saint IGNUcius - Richard Stallman"</value><value>. Retrieved </value><value>29 January</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The unabridged selective transcript of Richard M Stallman's talk at the ANU"</value><value>. Retrieved </value><value>29 January</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>alt.religion.emacs newsgroup</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Saint IGNUcius - Richard Stallman"</value><value>. </value><value>www.stallman.org</value><value>. Retrieved </value><value>27 March</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"How To Avoid The Emacs Pinky Problem"</value><value>. Xahlee.org</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs: Why You Should Not Swap {Caps Lock, Control} Keys"</value><value>. </value><value>In touch typing, modifiers comes in pairs, such as ⇧ Shift key. The accepted ergonomic way to press modifier combinations is using one hand to press the modifier key and the other to press the letter key. Using 2 hands avoids single-hand straining its muscle.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"EmacsWiki: Repeated Strain Injury"</value><value>. Retrieved </value><value>29 January</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Moving The Ctrl Key"</value><value>. EmacsWiki</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ErgoEmacs Homepage"</value><value>. Retrieved </value><value>2018-09-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ErgoEmacs Hostory and development rationale"</value><value>. Retrieved </value><value>2018-09-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Keymacs layout"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"EmacsWiki: Ace Jump"</value><value>. Retrieved </value><value>29 January</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Spacemacs"</value><value>. Retrieved </value><value>2015-04-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>BayleShanks (2009-10-07). </value><value>"Sticky Modifiers"</value><value>. EmacsWiki</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Viper Mode"</value><value>. EmacsWiki</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"At Home Modifier by Evdev"</value><value>. Retrieved </value><value>2015-04-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Why Emacs's Keyboard Shortcuts are Painful"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"VAXen"</value><value>. Catb.org</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"It occurred to me, why not use Emacs - The Internship quotes"</value><value>. </value><value>www.subzin.com</value><value>. Retrieved </value><value>27 March</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Silicon Valley - S03E06 Bachmanity Insanity"</value><value>. </value><value>siliconvalleyism.com</value><value>. Retrieved </value><value>27 March</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikiquote has quotations related to: </value><value>Emacs</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>Emacs</value><value>.</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikibooks has more on the topic of: </value><value>Emacs</value><value>
</value><value>Official website</value><value>
</value><value>Reviewed entry</value><value> in the </value><value>Free Software Directory</value><value>.</value><value>
</value><value>Wikemacs</value><value>
</value><value>EmacsWiki</value><value>
</value><value>EmacsFamily</value><value>
</value><value>List of Emacs implementations</value><value>
</value><value>Architectural overview</value><value>
</value><value>Famous Emacs users</value><value>
</value><value>One of the Oldest Rivalries in Computing: Emacs vs Vi</value><value>
</value><value>v</value><value>t</value><value>e</value><value> </value><value>Emacs</value><value>Implementations</value><value>GNU and</value><value>derivative</value><value>
</value><value>GNU Emacs</value><value>
</value><value>XEmacs</value><value>
</value><value>SXEmacs</value><value>
</value><value>Aquamacs</value><value>
</value><value>Other</value><value>
</value><value>Climacs</value><value>
</value><value>Epsilon</value><value>
</value><value>Freemacs</value><value>
</value><value>EINE</value><value>
</value><value>Gosling Emacs</value><value>
</value><value>Mocklisp</value><value>
</value><value>Hemlock</value><value>
</value><value>JOVE</value><value>
</value><value>mg</value><value>
</value><value>MicroEMACS</value><value>
</value><value>MINCE</value><value>
</value><value>Multics Emacs</value><value>
</value><value>Perfect Writer</value><value>
</value><value>Spacemacs</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>vile</value><value>
</value><value>Zile</value><value>
</value><value>Zmacs</value><value>
</value><value>ZWEI</value><value>
</value><value>Modes</value><value>
</value><value>AUCTeX</value><value>
</value><value>Dired</value><value>
</value><value>Dunnet</value><value>
</value><value>Emacs Speaks Statistics</value><value>
</value><value>Emacspeak</value><value>
</value><value>EMMS</value><value>
</value><value>ERC</value><value>
</value><value>eww</value><value>
</value><value>Gnus</value><value>
</value><value>Org-mode</value><value>
</value><value>Planner</value><value>
</value><value>rcirc</value><value>
</value><value>RefTeX</value><value>
</value><value>SLIME</value><value>
</value><value>w3m</value><value>
</value><value>Internals</value><value>
</value><value>Emacs Lisp</value><value>
</value><value>Apel</value><value>
</value><value>MULE</value><value>
</value><value>Other</value><value>
</value><value>Conkeror</value><value>
</value><value>Dissociated press</value><value>
</value><value>Editor war</value><value>
</value><value>
</value><value> </value><value>Emacs on Wikimedia Commons</value><value>
</value><value> </value><value>Emacs on Wikiquotes</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>GNU Project</value><value>History</value><value>
</value><value>GNU Manifesto</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>Europe</value><value>
</value><value>India</value><value>
</value><value>Latin America</value><value>
</value><value>History of free software</value><value>
</value><value>Licenses</value><value>
</value><value>GNU General Public License</value><value>
</value><value>GNU Lesser General Public License</value><value>
</value><value>GNU Affero General Public License</value><value>
</value><value>GNU Free Documentation License</value><value>
</value><value>GPL linking exception</value><value>
</value><value>Software</value><value>
</value><value>GNU</value><value> (</value><value>variants</value><value>)</value><value>
</value><value>Hurd</value><value>
</value><value>Linux-libre</value><value>
</value><value>glibc</value><value>
</value><value>Bash</value><value>
</value><value>coreutils</value><value>
</value><value>findutils</value><value>
</value><value>Build System</value><value>
</value><value>GCC</value><value>
</value><value>binutils</value><value>
</value><value>GDB</value><value>
</value><value>GRUB</value><value>
</value><value>GNOME</value><value>
</value><value>GNUstep</value><value>
</value><value>GIMP</value><value>
</value><value>GNU Ring</value><value>
</value><value>GNU Emacs</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>GNU Octave</value><value>
</value><value>GNU R</value><value>
</value><value>GSL</value><value>
</value><value>GMP</value><value>
</value><value>GNU Electric</value><value>
</value><value>GNU Archimedes</value><value>
</value><value>GNUnet</value><value>
</value><value>GNU Privacy Guard</value><value>
</value><value>Gnuzilla</value><value> (</value><value>IceCat</value><value>)</value><value>
</value><value>GNU Health</value><value>
</value><value>GNUmed</value><value>
</value><value>GNU LilyPond</value><value>
</value><value>GNU Go</value><value>
</value><value>GNU Chess</value><value>
</value><value>Gnash</value><value>
</value><value>Guix</value><value>
</value><value>Guix System Distribution</value><value>
</value><value>more...</value><value>
</value><value>Public</value><value>speakers</value><value>
</value><value>Alexandre Oliva</value><value>
</value><value>Benjamin Mako Hill</value><value>
</value><value>Bradley M. Kuhn</value><value>
</value><value>Eben Moglen</value><value>
</value><value>Federico Heinz</value><value>
</value><value>Georg C. F. Greve</value><value>
</value><value>John Sullivan</value><value>
</value><value>Loïc Dachary</value><value>
</value><value>Matt Lee</value><value>
</value><value>Nagarjuna G.</value><value>
</value><value>Ricardo Galli</value><value>
</value><value>Richard Stallman</value><value>
</value><value>Robert J. Chassell</value><value>
</value><value>Other topics</value><value>
</value><value>GNU/Linux naming controversy</value><value>
</value><value>Revolution OS</value><value>
</value><value>Free Software Foundation anti-Windows campaigns</value><value>
</value><value>Defective by Design</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 14 December 2018, at 11:56</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Ethereum</url><title>Ethereum</title><text><value>
</value><value>
</value><value>blockchain platform with programmable transactions</value><value>
</value><value>
</value><value>
</value><value>Ethereum</value><value>The Ethereum Project's logo, first used in 2014</value><value>Original author(s)</value><value>Vitalik Buterin, Gavin Wood, Joseph Lubin</value><value>Initial release</value><value>30 July 2015</value><value>Repository</value><value>github</value><value>.com</value><value>/ethereum</value><value>
</value><value> </value><value>Written in</value><value>Go</value><value>, </value><value>C++</value><value>, </value><value>Rust</value><value>Operating system</value><value>Clients available for </value><value>Linux</value><value>, </value><value>Windows</value><value>, </value><value>macOS</value><value>, </value><value>POSIX</value><value>, </value><value>Raspbian</value><value>Platform</value><value>x86, AMD64, ARM</value><value>Type</value><value>Decentralized computing</value><value>, </value><value>Blockchain</value><value>, </value><value>Cryptocurrency</value><value>License</value><value>GPLv3</value><value>, </value><value>LGPLv</value><value>3, </value><value>MIT</value><value>[1]</value><value>[2]</value><value>Website</value><value>www</value><value>.ethereum</value><value>.org</value><value>
</value><value>Ethereum</value><value> is an </value><value>open-source</value><value>, </value><value>public</value><value>, </value><value>blockchain</value><value>-based </value><value>distributed computing</value><value> platform and </value><value>operating system</value><value> featuring </value><value>smart contract</value><value> (scripting) functionality. It supports a modified version of </value><value>Nakamoto</value><value> consensus via transaction-based state transitions.
</value><value>Ether</value><value> is a </value><value>cryptocurrency</value><value> whose blockchain is generated by the Ethereum platform. </value><value>Ether</value><value> can be transferred between accounts and used to compensate participant mining nodes for computations performed.</value><value>[3]</value><value> Ethereum provides a decentralized </value><value>virtual machine</value><value>, the Ethereum Virtual Machine (EVM), which can execute scripts using an international network of public nodes. The virtual machine's </value><value>instruction set</value><value>, in contrast to others like </value><value>Bitcoin</value><value> </value><value>Script</value><value>, is </value><value>expressive</value><value> enough as languages like </value><value>C</value><value> that it's said to be </value><value>Turing-complete</value><value> in an informal sense. "Gas", an internal transaction pricing mechanism, is used to mitigate </value><value>spam</value><value> and allocate resources on the network.
</value><value>Ethereum was proposed in late 2013 by </value><value>Vitalik Buterin</value><value>, a cryptocurrency researcher and programmer. Development was funded by an online </value><value>crowdsale</value><value> that took place between July and August 2014.
</value><value>The system went live on 30 July 2015, with 72 million coins "premined". 
This accounts for about 70 percent of the total circulating supply in 2018.
</value><value>In 2016, as a result of the exploitation of a flaw in </value><value>The DAO</value><value> project's </value><value>smart contract</value><value> software, and subsequent theft of $50 million worth of Ether,</value><value>[4]</value><value> Ethereum was split into two separate blockchains – the new separate version became Ethereum (ETH) with the theft reversed,</value><value>[5]</value><value> and the original continued as </value><value>Ethereum Classic</value><value> (ETC).</value><value>[6]</value><value>[7]</value><value>
</value><value>The value of the Ethereum currency grew over 13,000 percent in 2017, to over $1400.</value><value>[8]</value><value> By September 2018, it had fallen back to $200.</value><value>[9]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Etymology</value><value>
</value><value>2</value><value> </value><value>History</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Enterprise Ethereum Alliance (EEA)</value><value>
</value><value>2.2</value><value> </value><value>Milestones</value><value>
</value><value>2.3</value><value> </value><value>The DAO event</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Ether</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Characteristics</value><value>
</value><value>
</value><value>3.1.1</value><value> </value><value>Addresses</value><value>
</value><value>3.1.2</value><value> </value><value>Comparison to bitcoin</value><value>
</value><value>
</value><value>
</value><value>3.2</value><value> </value><value>Supply</value><value>
</value><value>3.3</value><value> </value><value>Markets and stores</value><value>
</value><value>
</value><value>
</value><value>4</value><value> </value><value>Platform</value><value>
</value><value>
</value><value>4.1</value><value> </value><value>Virtual Machine</value><value>
</value><value>4.2</value><value> </value><value>Smart contracts</value><value>
</value><value>4.3</value><value> </value><value>Applications</value><value>
</value><value>
</value><value>4.3.1</value><value> </value><value>Enterprise software</value><value>
</value><value>4.3.2</value><value> </value><value>Permissioned ledgers</value><value>
</value><value>
</value><value>
</value><value>4.4</value><value> </value><value>Performance</value><value>
</value><value>
</value><value>
</value><value>5</value><value> </value><value>Development Governance and EIP</value><value>
</value><value>6</value><value> </value><value>Criticisms</value><value>
</value><value>7</value><value> </value><value>References</value><value>
</value><value>8</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Etymology</value><value>
</value><value>Vitalik Buterin picked the name Ethereum after browsing Wikipedia articles about elements and science fiction, when he found the name, noting, "I immediately realized that I liked it better than all of the other alternatives that I had seen; I suppose it was the fact that sounded nice and it had the word '</value><value>ether</value><value>', referring to the hypothetical invisible medium that permeates the universe and allows light to travel."
</value><value>
</value><value>History</value><value>
</value><value>Ethereum was initially described in a white paper by </value><value>Vitalik Buterin</value><value>,</value><value>[10]</value><value> a programmer involved with </value><value>Bitcoin Magazine</value><value>, in late 2013 with a goal of building decentralized applications.</value><value>[11]</value><value>[12]</value><value> Buterin had argued that Bitcoin needed a </value><value>scripting language</value><value> for application development. Failing to gain agreement, he proposed development of a new platform with a more general scripting language.</value><value>[13]</value><value>:</value><value>88</value><value>
</value><value>At the time of public announcement in January 2014, the core Ethereum team was Vitalik Buterin, Mihai Alisie, Anthony Di Iorio, and Charles Hoskinson. Formal development of the Ethereum software project began in early 2014 through a </value><value>Swiss</value><value> company, </value><value>Ethereum Switzerland GmbH</value><value> (</value><value>EthSuisse</value><value>).</value><value>[14]</value><value>[15]</value><value> Subsequently, a Swiss non-profit foundation, the Ethereum Foundation (</value><value>Stiftung Ethereum</value><value>), was created as well. Development was funded by an online public </value><value>crowdsale</value><value> during July–August 2014, with the participants buying the Ethereum value token (ether) with another digital currency, </value><value>bitcoin</value><value>.
</value><value>While there was early praise for the technical innovations of Ethereum, questions were also raised about its security and scalability.</value><value>[11]</value><value>
</value><value>
</value><value>Enterprise Ethereum Alliance (EEA)</value><value>
</value><value>In March 2017, various blockchain start-ups, research groups, and Fortune 500 companies announced the creation of the Enterprise Ethereum Alliance (EEA) with 30 founding members.</value><value>[16]</value><value> By May, the nonprofit organization had 116 enterprise members—including </value><value>ConsenSys</value><value>, </value><value>CME Group</value><value>, </value><value>Cornell University's research group</value><value>, </value><value>Toyota Research Institute</value><value>, </value><value>Samsung SDS</value><value>, </value><value>Microsoft</value><value>, </value><value>Intel</value><value>, </value><value>J. P. Morgan</value><value>, </value><value>Cooley LLP</value><value>, </value><value>Merck KGaA</value><value>, </value><value>DTCC</value><value>, </value><value>Deloitte</value><value>, </value><value>Accenture</value><value>, </value><value>Banco Santander</value><value>, </value><value>BNY Mellon</value><value>, </value><value>ING</value><value>, and </value><value>National Bank of Canada</value><value>.</value><value>[17]</value><value>[18]</value><value>[19]</value><value> By July 2017, there were over 150 members in the alliance, including recent additions </value><value>MasterCard</value><value>, </value><value>Cisco Systems</value><value>, </value><value>Sberbank</value><value> and </value><value>Scotiabank</value><value>.</value><value>[20]</value><value>[21]</value><value>
</value><value>
</value><value>Milestones</value><value>
</value><value>

</value><value>
</value><value>Version
</value><value>
</value><value>Code name
</value><value>
</value><value>Release date
</value><value>
</value><value>
</value><value>Old version, no longer supported:</value><value> 0
</value><value>
</value><value>Olympic
</value><value>
</value><value>May, 2015
</value><value>
</value><value>
</value><value>Old version, no longer supported:</value><value> 1
</value><value>
</value><value>Frontier
</value><value>
</value><value>30 July 2015
</value><value>
</value><value>
</value><value>Old version, no longer supported:</value><value> 2
</value><value>
</value><value>Homestead
</value><value>
</value><value>14 March 2016
</value><value>
</value><value>
</value><value>Current stable version:</value><value> </value><value>3</value><value>
</value><value>
</value><value>Metropolis (vByzantium)
</value><value>
</value><value>16 October 2017
</value><value>
</value><value>
</value><value>Future release:</value><value> 3.5
</value><value>
</value><value>Metropolis (vConstantinople)
</value><value>
</value><value>TBA
</value><value>
</value><value>
</value><value>Future release:</value><value> 4
</value><value>
</value><value>Serenity
</value><value>
</value><value>TBA
</value><value>
</value><value>
</value><value>Legend:</value><value>Old version</value><value>Older version, still supported</value><value>Latest version</value><value>Latest preview version</value><value>Future release</value><value>
</value><value>
</value><value>Several codenamed prototypes of the Ethereum platform were developed by the Foundation, as part of their Proof-of-Concept series, prior to the official launch of the Frontier network. "Olympic" was the last of these prototypes, and public beta pre-release.
</value><value>The Olympic network provided users with a </value><value>bug bounty</value><value> of 25,000 ether for stress testing the limits of the Ethereum blockchain. "Frontier" marked the tentative experimental release of the Ethereum platform in July 2015.</value><value>[22]</value><value>
</value><value>Since the initial launch, Ethereum has undergone several planned protocol upgrades, which are important changes affecting the underlying functionality and/or </value><value>incentive structures</value><value> of the platform.
</value><value>[23]</value><value>[24]</value><value>
</value><value>
</value><value>Protocol upgrades are accomplished by means of a </value><value>soft fork</value><value> of the open source code base.
</value><value>
</value><value>"Homestead" was the first to be considered </value><value>stable</value><value>.
</value><value>It included improvements to transaction processing, gas pricing, and security
and the soft fork occurred on 31 July 2015.</value><value>[13]</value><value>:</value><value>87</value><value>
</value><value>The "Metropolis Part 1: Byzantium" soft fork took effect on 16 October 2017, and included changes to reduce the complexity of the EVM and provide more flexibility for smart contract developers.</value><value>[24]</value><value> Byzantium also adds supports for zk-SNARKs (from </value><value>Zcash</value><value>); with the first zk-SNARK transaction occurring on testnet on September 19, 2017.
</value><value>
</value><value>The DAO event</value><value>
</value><value>Main article: </value><value>The DAO (organization)</value><value>
</value><value>In 2016 a </value><value>decentralized autonomous organization</value><value> called </value><value>The DAO</value><value>, a set of </value><value>smart contracts</value><value> developed on the platform, raised a record </value><value>US$150 million</value><value> in a </value><value>crowdsale</value><value> to fund the project.</value><value>[25]</value><value> The DAO was exploited in June when </value><value>US$50 million</value><value> in Ether were taken by an unknown hacker.</value><value>[26]</value><value>[27]</value><value> The event sparked a debate in the crypto-community about whether Ethereum should perform a contentious "hard fork" to reappropriate the affected funds.</value><value>[28]</value><value> As a result of the dispute, the network split in two. Ethereum (the subject of this article) continued on the forked blockchain, while </value><value>Ethereum Classic</value><value> continued on the original blockchain. The hard fork created a rivalry between the two networks.
</value><value>After the hard fork related to The DAO, Ethereum subsequently forked twice in the fourth quarter of 2016 to deal with other attacks. By the end of November 2016, Ethereum had increased its </value><value>DDoS</value><value> protection, de-bloated the blockchain, and thwarted further spam attacks by hackers.
</value><value>
</value><value>Ether</value><value>
</value><value>Ether</value><value>Denominations</value><value>Symbol</value><value>Ξ</value><value>Ticker symbol</value><value>ETH</value><value>Subunits</value><value>.mw-parser-output .nobold{font-weight:normal}</value><value> 10</value><value>−9</value><value>Gwei</value><value> 10</value><value>−18</value><value>Wei, after cryptocurrency pionneer </value><value>Wei Dai</value><value>Coins</value><value>Balances from accounts to be debited/credited, in Wei, non-UTXO scheme</value><value>Ledger</value><value>Timestamping scheme</value><value>Proof-of-work</value><value>
</value><value>Ethash</value><value>Hash function</value><value>Keccak</value><value>Issuance</value><value>Block and Uncle/Ommer reward</value><value>Block reward</value><value>3 ETH (non-deterministic)</value><value>Block time</value><value>14-15 seconds on average</value><value>Block explorer</value><value>etherscan</value><value>.io</value><value>, </value><value>eth</value><value>.btc</value><value>.com</value><value>, </value><value>blockchair</value><value>.com</value><value>/ethereum</value><value>
</value><value>
</value><value>Ether</value><value> is a fundamental </value><value>cryptocurrency</value><value> for operation of Ethereum, which thereby provides a public </value><value>distributed ledger</value><value> for transactions. It is used to pay for gas, a unit of computation used in transactions and other state transitions. Mistakenly, this currency is also referred to as </value><value>Ethereum</value><value>.
</value><value>It is listed under the code ETH and traded on </value><value>cryptocurrency</value><value> exchanges, and the </value><value>Greek</value><value> </value><value>uppercase Xi</value><value> character (Ξ) is generally used for its </value><value>currency symbol</value><value>. It is also used to pay for transaction fees and computational services on the Ethereum network.</value><value>[29]</value><value>
</value><value>
</value><value>Characteristics</value><value>
</value><value>Further information: </value><value>Cryptocurrency</value><value>
</value><value>As with other cryptocurrencies, the validity of each ether is provided by a </value><value>blockchain</value><value>, which is a continuously growing list of </value><value>records</value><value>, called </value><value>blocks</value><value>, which are linked and secured using </value><value>cryptography</value><value>.</value><value>[30]</value><value>[31]</value><value> By design, the blockchain is inherently resistant to modification of the data. It is an open, </value><value>distributed ledger</value><value> that records transactions between two parties efficiently and in a verifiable and permanent way.</value><value>[32]</value><value> Unlike Bitcoin, Ethereum operates using accounts and balances in a manner called state transitions. This does not rely upon </value><value>unspent transaction outputs</value><value> (UTXOs). State denotes the current balances of all accounts and extra data. State is not stored on the blockchain, it is stored in a separate </value><value>Merkle</value><value> Patricia tree. A </value><value>cryptocurrency wallet</value><value> stores the </value><value>public and private "keys"</value><value> or "addresses" which can be used to receive or spend Ether. These can be generated through BIP 39 style mnemonics for a BIP 32 "HD Wallet". In Ethereum, this is unnecessary as it does not operate in a UTXO scheme. With the private key, it is possible to write in the blockchain, effectively making an ether transaction.
</value><value>To send ether to an account, you need the public key of that account. Ether accounts are pseudonymous in that they are not linked to individual persons, but rather to one or more specific addresses.
</value><value>Owners can store these addresses in software, on paper and possibly in memory ("brain wallet").
</value><value>
</value><value>Addresses</value><value>
</value><value>Ethereum addresses are composed of the prefix "0x", a common identifier for </value><value>hexadecimal</value><value>, concatenated with the rightmost 20 bytes of the </value><value>Keccak-256</value><value> hash (</value><value>big endian</value><value>) of the </value><value>ECDSA</value><value> </value><value>public key</value><value>. In hexadecimal, 2 digits represents a byte, meaning addresses contain 40 hexadecimal digits. One example is 0xb794F5eA0ba39494cE839613fffBA74279579268, the Poloniex ColdWallet. Contract addresses are in the same format, however they are determined by sender and creation transaction nonce.</value><value>[33]</value><value> User accounts are indistinguishable from contract accounts given only an address for each and no blockchain data. Any valid Keccak-256 hash put into the described format is valid, even if it does not correspond to an account with a private key or a contract. This is unlike Bitcoin, which uses </value><value>base58check</value><value> to ensure that addresses are properly typed.
</value><value>
</value><value>Comparison to bitcoin</value><value>
</value><value>Ether is different from </value><value>Bitcoin</value><value> (the </value><value>cryptocurrency</value><value> with the largest </value><value>market capitalization</value><value> as of June 2018) in several aspects:
</value><value>
</value><value>Its </value><value>block time</value><value> is 14 to 15 seconds, compared with 10 minutes for bitcoin.</value><value>
</value><value>Mining</value><value> of ether generates new coins at a usually consistent rate, occasionally changing during hard forks, while for bitcoin the rate halves every 4 years.</value><value>
</value><value>For proof-of-work, it uses the </value><value>Ethash</value><value> algorithm which reduces the advantage of specialized </value><value>ASICs</value><value> in mining.</value><value>
</value><value>Transaction fees differ by computational complexity, bandwidth use and storage needs (in a system known as gas), while bitcoin transactions compete by means of transaction size, in bytes.</value><value>
</value><value>Ethereum gas units each have a price that can be specified in a transaction. This is typically measured in Gwei. Bitcoin transactions usually have fees specified in satoshis per byte.</value><value>
</value><value>Transaction fees are generally considerably lower for ether than for Bitcoin. In December 2017, the median transaction fee for ether corresponded to $0.33, while for bitcoin it corresponded to $23.</value><value>
</value><value>Ethereum uses an account system where values in Wei are debited from accounts and credited to another, as opposed to Bitcoin's UTXO system, which is more analogous to spending cash and receiving change in return.</value><value>
</value><value>Supply</value><value>
</value><value>The total supply of ether was Ξ100 million as of June 2018. In 2017, mining generated 9.2 million new ether, corresponding to a 10% increase in its total supply. Casper FFG and CBC are expected to reduce the inflation rate to between 0.5% to 2%. There is no currently implemented hard cap on the total supply of ETH.
</value><value>
</value><value>Markets and stores</value><value>
</value><value>Ether can be traded by regular currency </value><value>brokers</value><value>, </value><value>cryptocurrency exchanges</value><value>, as well as many online </value><value>cryptocurrency wallets</value><value>.</value><value>[34]</value><value>
</value><value>
</value><value>Platform</value><value>
</value><value>Virtual Machine</value><value>
</value><value>The Ethereum Virtual Machine (EVM) is the runtime environment for smart contracts in Ethereum. It is a 256-bit register stack, designed to run the same code exactly as intended. It is the fundamental consensus mechanism for Ethereum. The formal definition of the EVM is specified in the Ethereum Yellow Paper.</value><value>[33]</value><value>[35]</value><value> On February 1, 2018, there were 27,500 nodes in the main Ethereum network.</value><value>[36]</value><value> Ethereum Virtual Machines have been implemented in </value><value>C++</value><value>, </value><value>Go</value><value>, </value><value>Haskell</value><value>, </value><value>Java</value><value>, </value><value>JavaScript</value><value>, </value><value>Python</value><value>, </value><value>Ruby</value><value>, </value><value>Rust</value><value>, and </value><value>WebAssembly</value><value> (currently under development).
</value><value>
</value><value>Smart contracts</value><value>
</value><value>Ethereum's </value><value>smart contracts</value><value> are based on different computer languages, which developers use to program their own functionalities. Smart contracts are </value><value>high-level</value><value> programming </value><value>abstractions</value><value> that are compiled down to EVM </value><value>bytecode</value><value> and deployed to the Ethereum blockchain for execution. They can be written in </value><value>Solidity</value><value> (a language library with similarities to </value><value>C</value><value> and </value><value>JavaScript</value><value>), Serpent (similar to </value><value>Python</value><value>, but deprecated), LLL (a </value><value>low-level</value><value> </value><value>Lisp</value><value>-like language), and Mutan (</value><value>Go</value><value>-based, but deprecated). There is also a research-oriented language under development called Viper (a </value><value>strongly-typed</value><value> </value><value>Python</value><value>-derived </value><value>decidable language</value><value>).
</value><value>Smart contracts can be public, which opens up the possibility to prove functionality, e.g. self-contained </value><value>provably fair</value><value> casinos.</value><value>[37]</value><value>
</value><value>One issue related to using smart contracts on a public blockchain is that bugs, including security holes, are visible to all but cannot be fixed quickly.</value><value>[38]</value><value> One example of this is the 17 June 2016 attack on The DAO, which could not be quickly stopped or reversed.</value><value>[26]</value><value>
</value><value>There is ongoing research on how to use formal verification to express and prove non-trivial properties. A </value><value>Microsoft Research</value><value> report noted that writing solid smart contracts can be extremely difficult in practice, using The DAO hack to illustrate this problem. The report discussed tools that Microsoft had developed for verifying contracts, and noted that a large-scale analysis of published contracts is likely to uncover widespread vulnerabilities. The report also stated that it is possible to verify the equivalence of a Solidity program and the EVM code.</value><value>[39]</value><value>
</value><value>
</value><value>Applications</value><value>
</value><value>Ethereum is written in Turing complete language, which includes seven different programming languages.</value><value>[40]</value><value> Developers use the language to create and publish applications which they know will run inside Ethereum.</value><value>[41]</value><value>[42]</value><value> It's a cumbersome system, but that's not deterring developers from writing Ethereum programs.</value><value>[43]</value><value>
</value><value>Ethereum blockchain applications are usually referred to as DApps (</value><value>decentralized application</value><value>), since they are based on the decentralized Ethereum Virtual Machine, and its smart contracts.</value><value>[44]</value><value> Many uses have been proposed for Ethereum platform, including ones that are impossible or unfeasible.</value><value>[45]</value><value>[29]</value><value> Use case proposals have included finance, the </value><value>internet-of-things</value><value>, </value><value>farm-to-table</value><value> produce, </value><value>electricity sourcing and pricing</value><value>, and </value><value>sports betting</value><value>. Ethereum is (as of 2017) the leading </value><value>blockchain</value><value> platform for </value><value>initial coin offering</value><value> projects, with over 50% market share.
</value><value>As of January 2018, there are more than 250 live DApps, with hundreds more under development. Some application examples include: digital signature algorithms, securitized tokens, digital rights management, crowdfunding, prediction markets, remittance, online gambling, social media platforms, financial exchanges and identity systems.
</value><value>
</value><value>Enterprise software</value><value>
</value><value>Ethereum-based customized software and networks, independent from the public Ethereum chain, are being tested by </value><value>enterprise software</value><value> companies.</value><value>[46]</value><value> Interested parties include </value><value>Microsoft</value><value>, </value><value>IBM</value><value>, </value><value>JPMorgan Chase</value><value>,</value><value>[29]</value><value>[47]</value><value> </value><value>Deloitte</value><value>,</value><value>[48]</value><value> </value><value>R3</value><value>,</value><value>[49]</value><value> </value><value>Innovate UK</value><value> (cross-border payments prototype).</value><value>[50]</value><value> Barclays, UBS and Credit Suisse are experimenting with Ethereum blockchain to automate Markets in Financial Instruments Directive (MiFID) II requirements.
</value><value>
</value><value>Permissioned ledgers</value><value>
</value><value>Ethereum-based </value><value>permissioned blockchain</value><value> variants are used and being investigated for various projects.
</value><value>
</value><value>J. P. Morgan Chase</value><value> is developing a permissioned-variant of Ethereum blockchain dubbed "Quorum".</value><value>[51]</value><value> It's designed to toe the line between private and public in the realm of shuffling derivatives and payments. The idea is to satisfy regulators who need seamless access to financial goings-on, while protecting the privacy of parties that don't wish to reveal their identities nor the details of their transactions to the general public.</value><value>[52]</value><value>
</value><value>Royal Bank of Scotland</value><value> has announced that it has built a Clearing and Settlement Mechanism (CSM) based on the Ethereum distributed ledger and smart contract platform.</value><value>[53]</value><value>[54]</value><value>
</value><value>Performance</value><value>
</value><value>In Ethereum all smart contracts are stored publicly on every node of the blockchain, which has costs.</value><value>[55]</value><value> Being a </value><value>blockchain</value><value> means it is </value><value>secure by design</value><value> and is an example of a distributed computing system with high </value><value>Byzantine fault tolerance</value><value>. The downside is that performance issues arise in that every node is calculating all the smart contracts in real time, resulting in lower speeds.</value><value>[55]</value><value> As of January 2016, the Ethereum protocol could process 25 transactions per second.</value><value>[55]</value><value> In comparison, the </value><value>Visa</value><value> payment platform processes 45,000 payments per second leading some to question the scalability of Ethereum.</value><value>[56]</value><value> On 19 December 2016, Ethereum exceeded one million transactions in a single day for the first time.</value><value>[57]</value><value>
</value><value>
</value><value>Micro Raiden was launched November 2017.</value><value>[58]</value><value>
</value><value>Buterin and Joseph Poon (a co-author of </value><value>Bitcoin</value><value>'s </value><value>Lightning Network</value><value> whitepaper) announced in 2017 their plan to launch a scaling solution called Plasma which creates "child" blockchains to the "main" parent blockchain.</value><value>[59]</value><value> The plasma project has skeptics; specifically, Vlad Zamfir (Ethereum's lead researcher on proof of stake) has publicly questioned the plasma project's viability.</value><value>[59]</value><value>
</value><value>Ethereum engineers have been working on </value><value>sharding</value><value> the calculations, and the next step (called Ethereum 2) was presented at Ethereum's Devcon 3 in November 2017.</value><value>[60]</value><value>
</value><value>Ethereum's blockchain uses </value><value>Merkle trees</value><value>, for security reasons, to improve scalability, and to optimize transaction hashing.</value><value>[61]</value><value> As with any Merkle tree implementation, it allows for storage savings, set membership proofs (called "Merkle proofs"), and light client synchronization. The Ethereum network has at times faced congestion problems, for example, congestion occurred during late 2017 in relation to </value><value>Cryptokitties</value><value>.</value><value>[62]</value><value>
</value><value>
</value><value>Development Governance and EIP</value><value>
</value><value>In October 2015,</value><value>[63]</value><value> a development governance was proposed as </value><value>Ethereum Improvement Proposal</value><value>, aka </value><value>EIP</value><value>, standardized on EIP-1.</value><value>[64]</value><value> The core development group and community were to gain consensus by a process regulated EIP. A few notable decisions were made in the process of EIP, such as EIP-160 (EXP cost increase caused by Spurious Dragon Hardfork)</value><value>[65]</value><value> and </value><value>EIP-20 (ERC-20 Token Standard)</value><value>.</value><value>[66]</value><value> In January 2018, the EIP process was finalized and published as EIP-1 status turned "active".</value><value>[63]</value><value>
</value><value>
</value><value>Criticisms</value><value>
</value><value>Izabella Kaminska, the editor of </value><value>FT Alphaville</value><value>, has pointed out that criminals are using Ethereum to run </value><value>Ponzi schemes</value><value> and other forms of investment fraud.</value><value>[67]</value><value> The article was based on a paper from the </value><value>University of Cagliari</value><value>, which placed the number of Ethereum smart contracts which facilitate Ponzi schemes at nearly 10% of 1384 smart contracts examined. However, it also estimated that only 0.05% of the transactions on the network were related to such contracts.</value><value>[68]</value><value>
</value><value>
</value><value>References</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ethereum"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>11 January</value><value> 2018</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Go Ethereum GitHub repository"</value><value>. </value><value>Archived</value><value> from the original on 3 October 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Cryptocurrencies: A Brief Thematic Review</value><value> </value><value>Archived</value><value> 25 December 2017 at the </value><value>Wayback Machine</value><value>.. Social Science Research Network. Date accessed 28 August 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Waters, Richard (18 June 2016). </value><value>"</value><value>'</value><value>Ether' brought to earth by theft of $50m in cryptocurrency"</value><value>. </value><value>ft.com</value><value>. The Financial Times</value><value>. Retrieved </value><value>19 October</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Leising, Matthew (13 June 2017). </value><value>"Ether thief remains mystery year after $55 million heist"</value><value>. </value><value>www.bloomberg.com</value><value>. </value><value>Bloomberg News</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>De Jesus, Cecille (19 July 2016). </value><value>"The DAO Heist Undone: 97% of ETH Holders Vote for the Hard Fork"</value><value>. Futurism, LLC. </value><value>Archived</value><value> from the original on 7 August 2017</value><value>. Retrieved </value><value>16 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Quentson, Andrew (17 July 2016). </value><value>"Miners Vote Overwhelmingly in Support of Ethereum's Hardfork"</value><value>. Cryptocoinnews. </value><value>Archived</value><value> from the original on 26 June 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ethereum hits a fresh record high and is up over 13,000% in a year"</value><value>. </value><value>CNBC</value><value>. January 8, 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Beaten-down cryptocurrency ether is about to 'rally strongly,' says Wall Street's Tom Lee"</value><value>. </value><value>CNBC</value><value>. September 27, 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"White Paper· ethereum/wiki Wiki · GitHub"</value><value>. </value><value>Archived</value><value> from the original on 28 March 2015.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Finley, Klint (27 January 2014). </value><value>"Out in the Open: Teenage Hacker Transforms Web Into One Giant Bitcoin Network"</value><value>. </value><value>Wired</value><value>. </value><value>Archived</value><value> from the original on 18 March 2016</value><value>. Retrieved </value><value>21 March</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Schneider, Nathan (7 April 2014). </value><value>"Code your own utopia: Meet Ethereum, bitcoin's most ambitious successor"</value><value>. Al Jazeera. </value><value>Archived</value><value> from the original on 23 February 2016</value><value>. Retrieved </value><value>21 February</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Tapscott, Don; Tapscott, Alex (2016-05-07). </value><value>The Blockchain Revolution: How the Technology Behind Bitcoin is Changing Money, Business, and the World</value><value>. Portfolio. </value><value>ISBN</value><value> </value><value>978-0670069972</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>
</value><value>Schmid, Valentin (10 May 2014). </value><value>"The Entrepreneur: Joe Lubin, COO of Ethereum"</value><value>. </value><value>Epoch Times</value><value>. </value><value>Archived</value><value> from the original on 25 April 2016</value><value>. Retrieved </value><value>31 March</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Company Overview of Ethereum Switzerland GmbH"</value><value>. Bloomberg. 20 August 2016. </value><value>Archived</value><value> from the original on 20 August 2016</value><value>. Retrieved </value><value>20 August</value><value> 2016</value><value>. </value><value>The company was founded in 2014 and is based in Baar, Switzerland.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Popper, Nathaniel (27 February 2017). </value><value>"Business Giants to Announce Creation of a Computing System Based on Ethereum"</value><value>. </value><value>New York Times</value><value>. </value><value>Archived</value><value> from the original on 20 June 2017</value><value>. Retrieved </value><value>5 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Peck, Morgan (2 March 2017). </value><value>"Corporate Titans Unite to Build an Enterprise Version of the Ethereum Blockchain"</value><value>. Institute of Electrical and Electronics Engineers (IEEE). </value><value>Archived</value><value> from the original on 17 June 2017</value><value>. Retrieved </value><value>5 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Enterprise Ethereum Alliance expands dramatically announcing 86 new members"</value><value> </value><value>(PDF)</value><value> (Press release). Enterprise Ethereum Alliance (EEA). 19 May 2017. </value><value>Archived</value><value> </value><value>(PDF)</value><value> from the original on 7 June 2017</value><value>. Retrieved </value><value>5 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Shin, Laura (22 May 2017). </value><value>"Ethereum Enterprise Alliance Adds 86 New Members Including DTCC, State Street And Infosys"</value><value>. Forbes. </value><value>Archived</value><value> from the original on 22 May 2017</value><value>. Retrieved </value><value>22 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Enterprise Ethereum Alliance Just Got A Whole Lot Stronger"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Sberbank joins Enterprise Ethereum Alliance to broaden cooperation"</value><value>(19 Oct 2017). </value><value>Fintech Futures News</value><value>. Retrieved 6 June 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Vigna, Paul (31 July 2015). </value><value>"BitBeat: Ethereum Opens Its 'Frontier' for Business"</value><value>. The Wall Street Journal. </value><value>Archived</value><value> from the original on 6 September 2017</value><value>. Retrieved </value><value>5 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Gupta, Vinay (3 March 2015). </value><value>"The Ethereum Launch Process"</value><value>. Ethereum Foundation. </value><value>Archived</value><value> from the original on 6 June 2017</value><value>. Retrieved </value><value>5 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Silva, Los (25 February 2017). </value><value>"Ethereum's Road Map for 2017"</value><value>. ETHNews. </value><value>Archived</value><value> from the original on 2 June 2017</value><value>. Retrieved </value><value>5 June</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Vigna, Paul (16 May 2016). </value><value>"Chiefless Company Rakes in More than $100 Million"</value><value>. </value><value>Wall Street Journal</value><value>. </value><value>Archived</value><value> from the original on 25 June 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Popper, Nathaniel (18 June 2016). </value><value>"Hacker May Have Taken $50 Million From Cybercurrency Project"</value><value>. </value><value>The New York Times</value><value>. </value><value>Archived</value><value> from the original on 20 June 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Price, Rob (17 June 2016). </value><value>"Digital Currency Ethereum is Cratering Amid Claims of a $50 Million Hack"</value><value>. </value><value>Business Insider</value><value>. Business Insider. </value><value>Archived</value><value> from the original on 11 June 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Peck, Morgan (19 July 2016). </value><value>"</value><value>"</value><value>Hard Fork" Coming to Restore Ethereum Funds to Investors of Hacked DAO"</value><value>. </value><value>IEEE Spectrum: Technology, Engineering, and Science News</value><value>. IEEE. </value><value>Archived</value><value> from the original on 3 March 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Popper, Nathaniel (27 March 2016). </value><value>"Ethereum, a Virtual Currency, Enables Transactions That Rival Bitcoin's"</value><value>. </value><value>New York Times</value><value>. </value><value>Archived</value><value> from the original on 24 July 2016</value><value>. Retrieved </value><value>2 September</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Blockchains: The great chain of being sure about things"</value><value>. </value><value>The Economist</value><value>. 31 October 2015</value><value>. Retrieved </value><value>18 June</value><value> 2016</value><value>. </value><value>The technology behind bitcoin lets people who do not know or trust each other build a dependable ledger. This has implications far beyond the crypto currency.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Narayanan, Arvind; Bonneau, Joseph; Felten, Edward; Miller, Andrew; Goldfeder, Steven (2016). </value><value>Bitcoin and Cryptocurrency Technologies: a Comprehensive Introduction</value><value>. Princeton: Princeton University Press. </value><value>ISBN</value><value> </value><value>978-0-691-17169-2</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Iansiti, Marco; Lakhani, Karim R. (January 2017). </value><value>"The Truth About Blockchain"</value><value>. </value><value>Harvard Business Review</value><value>. </value><value>Harvard University</value><value>. Retrieved </value><value>2017-01-17</value><value>. </value><value>The technology at the heart of bitcoin and other virtual currencies, blockchain is an open, distributed ledger that can record transactions between two parties efficiently and in a verifiable and permanent way.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Wood, Gavin</value><value> (3 February 2018). </value><value>"ETHEREUM: A SECURE DECENTRALISED GENERALISED TRANSACTION LEDGER (EIP-150)"</value><value>. </value><value>yellowpaper.io</value><value>. Archived from </value><value>the original</value><value> on 3 February 2018</value><value>. Retrieved </value><value>3 February</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Olga Kharif (2017-10-11). </value><value>"Fans of Digital Currency Ether Can Now Buy ETNs—In Sweden"</value><value>. </value><value>Bloomberg</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Triantafyllidis, Nikolaos Petros (19 February 2016). "The Ethereum Project: Ethereum History". Developing an Ethereum Blockchain Application (Report). University of Amsterdam. p. 20.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ethernodes.org - The Network number 1"</value><value>. </value><value>ethernodes.org</value><value>. Retrieved </value><value>2018-02-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Piasecki, Piotr J. (2016). </value><value>"Gaming Self-Contained Provably Fair Smart Contract Casinos"</value><value>. </value><value>Ledger</value><value>. </value><value>1</value><value>: 99–110. </value><value>doi</value><value>:</value><value>10.5195/ledger.2016.29</value><value>. </value><value>Archived</value><value> from the original on 24 December 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Peck, M. (28 May 2016). </value><value>"Ethereum's $150-Million Blockchain-Powered Fund Opens Just as Researchers Call For a Halt"</value><value>. </value><value>IEEE Spectrum</value><value>. </value><value>Institute of Electrical and Electronics Engineers</value><value>. </value><value>Archived</value><value> from the original on 30 May 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Short Paper: Formal Verification of Smart Contracts"</value><value> </value><value>(PDF)</value><value>. </value><value>microsoft.com/</value><value>. Microsoft. Archived from </value><value>the original</value><value> </value><value>(PDF)</value><value> on 27 August 2016</value><value>. Retrieved </value><value>25 August</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ethereum vs. Bitcoin"</value><value> </value><value>(PDF)</value><value>. </value><value>Economist</value><value>. August 20, 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Bitcoin Vs Ethereum: Driven by Different Purposes"</value><value>. </value><value>Investopedia</value><value>. August 20, 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Litecoin vs. Ethereum"</value><value>. August 20, 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ETHEREUM IS CODING'S NEW WILD WEST"</value><value>. </value><value>Wired</value><value>. August 20, 2018.</value><value>
</value><value>
</value><value>^</value><value> </value><value>ConsenSys (23 June 2016). </value><value>"Ethereum, Gas, Fuel, &amp; Fees"</value><value>. </value><value>ConsenSys Media</value><value>. </value><value>Archived</value><value> from the original on 23 May 2017</value><value>. Retrieved </value><value>15 January</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"This Is Your Company on Blockchain"</value><value>. </value><value>Bloomberg Businessweek</value><value>. </value><value>Archived</value><value> from the original on 14 September 2016</value><value>. Retrieved </value><value>14 September</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Big Business Giants From Microsoft to J.P. Morgan Are Getting Behind Ethereum"</value><value>. </value><value>Fortune</value><value>. </value><value>Archived</value><value> from the original on 29 September 2017</value><value>. Retrieved </value><value>8 November</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Hyperledger blockchain code almost comes together for IoT"</value><value>. Rethink Research. </value><value>Archived</value><value> from the original on 16 August 2016</value><value>. Retrieved </value><value>23 April</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Allison, Ian (3 May 2016). </value><value>"Deloitte to build Ethereum-based 'digital bank' with New York City's ConsenSys"</value><value>. </value><value>International Business Times</value><value>. </value><value>Archived</value><value> from the original on 6 May 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Allison, Ian (20 January 2016). </value><value>"R3 connects 11 banks to distributed ledger using Ethereum and Microsoft Azure"</value><value>. </value><value>International Business Times</value><value>. </value><value>Archived</value><value> from the original on 23 February 2016</value><value>. Retrieved </value><value>23 February</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Settlement using blockchain to Automate Foreign Exchange in a Regulated environment (SAFER)"</value><value>. </value><value>Innovate UK</value><value>. </value><value>Archived</value><value> from the original on 4 May 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"JP Morgan's Quorum blockchain powers new correspondent banking network " Banking Technology"</value><value>. </value><value>www.bankingtech.com</value><value>. </value><value>Archived</value><value> from the original on 9 November 2017</value><value>. Retrieved </value><value>8 November</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Hacket, Robert. </value><value>"Why J.P. Morgan Chase Is Building a Blockchain on Ethereum"</value><value>. </value><value>Fortune</value><value>. </value><value>Archived</value><value> from the original on 2 February 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Proving Ethereum for the Clearing Use Case"</value><value> </value><value>(PDF)</value><value>. </value><value>Archived</value><value> </value><value>(PDF)</value><value> from the original on 10 October 2016.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Allison, Ian (7 December 2016). </value><value>"Blockchain: RBS builds Ethereum-based distributed clearing house"</value><value>. </value><value>IB Times</value><value>. </value><value>Archived</value><value> from the original on 13 April 2017</value><value>. Retrieved </value><value>8 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Allison, Ian (25 January 2016). </value><value>"How are banks actually going to use blockchains and smart contracts?"</value><value>. </value><value>International Business Times</value><value>. </value><value>Archived</value><value> from the original on 8 May 2016</value><value>. Retrieved </value><value>4 May</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Murphy, Hannah (19 October 2018). </value><value>"The rise and fall of Ethereum"</value><value>. </value><value>Financial Times</value><value>. London: The Financial Times Ltd</value><value>. Retrieved </value><value>19 October</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Filiba, Jack. </value><value>"Ethereum Breaks One Million Transactions in a Single Day"</value><value>. </value><value>Archived</value><value> from the original on 22 December 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Higgins, Stan. </value><value>"</value><value>'</value><value>Microraiden' Payment Channels Go Live on Ethereum Network"</value><value>. </value><value>Archived</value><value> from the original on 22 December 2017.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Hertig, Alyssa (12 August 2017). </value><value>"Ethereum + Lightning? Buterin and Poon Unveil 'Plasma' Scaling Plan"</value><value>. CoinDesk. </value><value>Archived</value><value> from the original on 24 August 2017</value><value>. Retrieved </value><value>23 August</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Galeon, Dom. </value><value>"Ethereum's Co-Founder Just Unveiled His Plan for the Future of Cryptocurrency"</value><value>. </value><value>Archived</value><value> from the original on 9 November 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Vitalik Buterin. </value><value>"Merkling in Ethereum"</value><value>. </value><value>Ethereum.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Joon Ian Wong. </value><value>"The ethereum network is getting jammed up because people are rushing to buy cartoon cats on its blockchain"</value><value>. </value><value>QZ.com</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Update status EIP-1 according to own specification · ethereum/EIPs@db14da1"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2018-07-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Becze, Martin; Jameson, Hudson. </value><value>"Ethereum EIP-1 on Github"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2018-07-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Vitalik, Buterin</value><value>. </value><value>"Ethereum EIP-160 EXP cost increase"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2018-07-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Ethereum EIP-20:ERC-20 Token Standard"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2018-07-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kaminska, Izabella (1 June 2017). </value><value>"It's not a ponzi, it's a smart ponzi"</value><value>. </value><value>FT Alphaville</value><value>. </value><value>Archived</value><value> from the original on 23 July 2017.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Bartoletti, Carta;  et al. </value><value>"Dissecting Ponzi schemes on Ethereum: identification, analysis, and impact"</value><value> </value><value>(PDF)</value><value>. Universita di Cagliari. </value><value>Archived</value><value> </value><value>(PDF)</value><value> from the original on 17 August 2017</value><value>. Retrieved </value><value>30 July</value><value> 2017</value><value>.</value><value>CS1 maint: Explicit use of et al. (</value><value>link</value><value>) </value><value>
</value><value>
</value><value>
</value><value>External links</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>Ethereum</value><value>.</value><value>
</value><value>Official website</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Cryptocurrencies</value><value>Technology</value><value>
</value><value>Blockchain</value><value>
</value><value>Cryptocurrency tumbler</value><value>
</value><value>Cryptocurrency exchange</value><value>
</value><value>Cryptocurrency wallet</value><value>
</value><value>Cryptographic hash function</value><value>
</value><value>Distributed ledger</value><value>
</value><value>Fork</value><value>
</value><value>Lightning Network</value><value>
</value><value>Smart contract</value><value>
</value><value>Consensus</value><value> mechanisms</value><value>
</value><value>Proof-of-authority</value><value>
</value><value>Proof-of-space</value><value>
</value><value>Proof-of-stake</value><value>
</value><value>Proof-of-work</value><value>
</value><value>Proof-of-work</value><value> currencies</value><value>SHA-256</value><value>-based</value><value>
</value><value>Bitcoin</value><value>
</value><value>Bitcoin Cash</value><value>
</value><value>Counterparty</value><value>
</value><value>MazaCoin</value><value>
</value><value>Namecoin</value><value>
</value><value>NeuCoin</value><value>
</value><value>Nxt</value><value>
</value><value>Peercoin</value><value>
</value><value>Steem</value><value>
</value><value>Titcoin</value><value>
</value><value>Ethash</value><value>-based</value><value>
</value><value>Ethereum</value><value>
</value><value>Ethereum Classic</value><value>
</value><value>Scrypt</value><value>-based</value><value>
</value><value>Auroracoin</value><value>
</value><value>Bitconnect</value><value>
</value><value>Bitcoin Gold</value><value>
</value><value>Coinye</value><value>
</value><value>Dogecoin</value><value>
</value><value>Gridcoin</value><value>
</value><value>Litecoin</value><value>
</value><value>PotCoin</value><value>
</value><value>Equihash</value><value>-based</value><value>
</value><value>Bitcoin Private</value><value>
</value><value>Zcash</value><value>
</value><value>Zcoin</value><value>
</value><value>CryptoNote</value><value>-based</value><value>
</value><value>Monero</value><value>
</value><value>X11</value><value>-based</value><value>
</value><value>Dash</value><value>
</value><value>Petro</value><value>
</value><value>Lyra2</value><value>-based</value><value>
</value><value>Taler</value><value>
</value><value>Other</value><value>
</value><value>Verge</value><value>
</value><value>Vertcoin</value><value>
</value><value>Proof-of-stake</value><value> currencies</value><value>
</value><value>EOS.IO</value><value>
</value><value>Decred</value><value>
</value><value>ERC-20</value><value> tokens</value><value>
</value><value>Aion</value><value>
</value><value>Augur</value><value>
</value><value>Basic Attention Token</value><value>
</value><value>Binance Coin</value><value>
</value><value>Kin</value><value>
</value><value>KodakCoin</value><value>
</value><value>Minds</value><value>
</value><value>OmiseGO</value><value>
</value><value>Power Ledger</value><value>
</value><value>Other currencies</value><value>
</value><value>BitShares</value><value>
</value><value>Filecoin</value><value>
</value><value>NEM</value><value>
</value><value>NEO</value><value>
</value><value>NuBits</value><value>
</value><value>Primecoin</value><value>
</value><value>Ripple</value><value>
</value><value>Stellar</value><value>
</value><value>Tether</value><value>
</value><value>Related topics</value><value>
</value><value>Airdrop</value><value>
</value><value>BitLicense</value><value>
</value><value>Blockchain game</value><value>
</value><value>Complementary currency</value><value>
</value><value>Crypto-anarchism</value><value>
</value><value>Cryptocurrency bubble</value><value> (</value><value>2018 cryptocurrency crash</value><value>)</value><value>
</value><value>Digital currency</value><value>
</value><value>Double-spending</value><value> (</value><value>Bitcoin Gold Double Spend Attack</value><value>)</value><value>
</value><value>Initial coin offering</value><value>
</value><value>Initiative Q</value><value>
</value><value>List of cryptocurrencies</value><value>
</value><value>Stablecoin</value><value>
</value><value>Token money</value><value>
</value><value>Virtual currency</value><value>
</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>List</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 2 December 2018, at 15:26</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Drupal</url><title>Drupal</title><text><value>Drupal</value><value>Drupal 8 in action. Showing in-context editing and previews (</value><value>WYSIWYG</value><value>).</value><value>Original author(s)</value><value>Dries Buytaert</value><value>Developer(s)</value><value>Drupal community</value><value>Initial release</value><value>May 18, 2000</value><value>; 18 years ago</value><value> (</value><value>2000-05-18</value><value>)</value><value>[1]</value><value>Stable release</value><value>8.6.4</value><value>[2]</value><value>
   / 5 December 2018 </value><value>[±]</value><value>
</value><value>Repository</value><value>cgit</value><value>.drupalcode</value><value>.org</value><value>/drupal</value><value>
</value><value> </value><value>Written in</value><value>PHP</value><value>, using </value><value>Symfony</value><value>Operating system</value><value>Unix-like</value><value>, </value><value>Windows</value><value>Platform</value><value>Cross-platform</value><value>Size</value><value>80 MB (uncompressed Drupal 8 core)</value><value>[3]</value><value>Available in</value><value>Multilingual</value><value>Type</value><value>Content management framework</value><value>, </value><value>Content management system</value><value>, </value><value>Community</value><value> and </value><value>Blog software</value><value>License</value><value>GPLv2</value><value> or later</value><value>[4]</value><value>Website</value><value>www</value><value>.drupal</value><value>.org</value><value>
</value><value>Drupal</value><value> </value><value>/</value><value>ˈ</value><value>d</value><value>r</value><value>uː</value><value>p</value><value>əl</value><value>/</value><value> is </value><value>[5]</value><value> a </value><value>free</value><value> and </value><value>open source</value><value> </value><value>content-management framework</value><value> written in </value><value>PHP</value><value> and distributed under the </value><value>GNU General Public License</value><value>.</value><value>[4]</value><value>[6]</value><value>[7]</value><value> Drupal provides a </value><value>back-end</value><value> framework for at least 2.3% of all </value><value>web sites</value><value> worldwide</value><value>[8]</value><value>[9]</value><value> – ranging from personal </value><value>blogs</value><value> to corporate, political, and government sites.</value><value>[10]</value><value> Systems also use Drupal for </value><value>knowledge management</value><value> and for business collaboration.</value><value>[11]</value><value>
</value><value>As of  September 2018</value><value>[update]</value><value>, the Drupal community comprised more than 1.3 million members,</value><value>[12]</value><value>[13]</value><value> including 112,500 users actively contributing,</value><value>[14]</value><value> resulting in more than 41,500 free modules that extend and customize Drupal functionality,</value><value>[15]</value><value> over 2,670 free themes that change the look and feel of Drupal,</value><value>[16]</value><value> and at least 1,240 free distributions that allow users to quickly and easily set up a complex, use-specific Drupal in fewer steps.</value><value>[17]</value><value>
</value><value>The standard release of Drupal, known as </value><value>Drupal core</value><value>, contains basic features common to </value><value>content-management systems</value><value>. These include user account registration and maintenance, menu management, </value><value>RSS</value><value> feeds, taxonomy, page layout customization, and system administration. The Drupal core installation can serve as a simple Web site, a single- or multi-user blog, an </value><value>Internet forum</value><value>, or a community Web site providing for </value><value>user-generated content</value><value>.
</value><value>Drupal also describes itself as a </value><value>Web application framework</value><value>.</value><value>[18]</value><value> When compared with notable frameworks Drupal meets most of the generally accepted </value><value>feature requirements</value><value> for such web frameworks.</value><value>[19]</value><value>[20]</value><value>[21]</value><value>
</value><value>Although Drupal offers a sophisticated </value><value>API</value><value> for developers, basic Web-site installation and administration of the framework require no programming skills.</value><value>[22]</value><value>
</value><value>Drupal runs on any </value><value>computing platform</value><value> that supports both a </value><value>Web server</value><value> capable of running PHP and a </value><value>database</value><value> to store content and configuration.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Core</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Core modules</value><value>
</value><value>2.2</value><value> </value><value>Core themes</value><value>
</value><value>2.3</value><value> </value><value>Localization</value><value>
</value><value>2.4</value><value> </value><value>Auto-update notification</value><value>
</value><value>2.5</value><value> </value><value>Database abstraction</value><value>
</value><value>2.6</value><value> </value><value>Windows development</value><value>
</value><value>2.7</value><value> </value><value>Accessibility</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Extending the core</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Modules</value><value>
</value><value>3.2</value><value> </value><value>Themes</value><value>
</value><value>3.3</value><value> </value><value>Distributions</value><value>
</value><value>
</value><value>
</value><value>4</value><value> </value><value>Architecture</value><value>
</value><value>5</value><value> </value><value>Community</value><value>
</value><value>6</value><value> </value><value>Security</value><value>
</value><value>7</value><value> </value><value>Criticism</value><value>
</value><value>8</value><value> </value><value>See also</value><value>
</value><value>9</value><value> </value><value>References</value><value>
</value><value>10</value><value> </value><value>Further reading</value><value>
</value><value>11</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>

</value><value>Latest major releases
</value><value>
</value><value>
</value><value>Version</value><value>
</value><value>Release date
</value><value>
</value><value>
</value><value>8.6.3
</value><value>
</value><value>November 7, 2018</value><value>[3]</value><value>
</value><value>
</value><value>
</value><value>7.61</value><value>
</value><value>November 8, 2018</value><value>[23]</value><value>
</value><value>
</value><value>
</value><value>6.38</value><value>
</value><value>February 24, 2016</value><value>[24]</value><value>
</value><value>
</value><value>
</value><value>5.23</value><value>
</value><value>August 11, 2010</value><value>[25]</value><value>
</value><value>
</value><value>  </value><value>Drupal version 1-6 release history timeline</value><value>
</value><value>Originally written by </value><value>Dries Buytaert</value><value> as a </value><value>message board</value><value>, Drupal became an </value><value>open source</value><value> project in 2001.</value><value>[26]</value><value> The name </value><value>Drupal</value><value> represents an English rendering of the </value><value>Dutch</value><value> word </value><value>druppel</value><value>, which means "drop" (as in a water droplet).</value><value>[27]</value><value> The name came from the now-defunct Drop.org Web site, whose code slowly evolved into Drupal. Buytaert wanted to call the site "dorp" (Dutch for "village") for its community aspects, but mistyped it when checking the domain name and thought the error sounded better.</value><value>[26]</value><value>
</value><value>Interest in Drupal got a significant boost in 2003 when it helped build "DeanSpace" for </value><value>Howard Dean</value><value>, one of the candidates in the </value><value>U.S. Democratic Party</value><value>'s primary campaign for the </value><value>2004 U.S. presidential election</value><value>.  DeanSpace used open-source sharing of Drupal to support a decentralized network of approximately 50 disparate, unofficial pro-Dean websites that allowed users to communicate directly with one another as well as with the campaign.</value><value>[28]</value><value> After Dean ended his campaign, members of his Web team continued to pursue their interest in developing a Web platform that could aid political activism by launching CivicSpace Labs in July 2004, "...the first company with full-time employees that was developing and distributing Drupal technology."</value><value>[29]</value><value> Other companies began to also specialize in Drupal development.</value><value>[30]</value><value>[31]</value><value> By 2013 the Drupal Web site listed hundreds of vendors that offered Drupal-related services.</value><value>[32]</value><value>
</value><value>As of  2014</value><value>[update]</value><value> Drupal is developed by a community,</value><value>[33]</value><value> and its popularity is growing rapidly.</value><value>[</value><value>citation needed</value><value>]</value><value> From July 2007 to June 2008 the Drupal.org site provided more than 1.4 million downloads of Drupal software, an increase of approximately 125% from the previous year.</value><value>[34]</value><value>[35]</value><value>
</value><value>As of  January 2017</value><value>[update]</value><value> more than 1,180,000 sites use Drupal.</value><value>[36]</value><value> These include hundreds of well-known organizations,</value><value>[37]</value><value> including corporations, media and publishing companies, governments, non-profits,</value><value>[38]</value><value> schools, and individuals.  Drupal has won several </value><value>Packt</value><value> Open Source CMS Awards</value><value>[39]</value><value> and won the </value><value>Webware 100</value><value>[</value><value>clarification needed</value><value>]</value><value> three times in a row.</value><value>[40]</value><value>[41]</value><value>
</value><value>Drupal 6 was released on February 13, 2008</value><value>[42]</value><value>, on March 5, 2009 Buytaert announced a </value><value>code freeze</value><value> for Drupal 7 for September 1, 2009.</value><value>[43]</value><value> Drupal 7 was released on January 5, 2011, with release parties in several countries.</value><value>[44]</value><value> After that, maintenance on Drupal 5 stopped, with only Drupal 7 and Drupal 6 maintained.</value><value>[45]</value><value> Drupal 7 series maintenance updates are released regularly.</value><value>[46]</value><value>
</value><value>On October 7, 2015 Drupal 8 first release candidate (rc1) was announced.</value><value>[47]</value><value> Drupal 8 includes new features and improvements for both users and developers, including: a revamped user interface; WYSIWYG and in-place editing; improved mobile support; added and improved key contributed modules including Views, Date, and Entity Reference; introduced a new object-oriented backend leveraging Symfony components; revamped configuration management; and improved multilingual support. Drupal 8 rc1 is the collective work of over 3,200 core contributors.</value><value>[48]</value><value>
</value><value>Drupal 8.0.0 was released on November 19, 2015.</value><value>[49]</value><value> Subsequent major and minor releases (</value><value>8.6.3</value><value> as of November 7, 2018) which bring numerous improvements and bug fixes (including CKEditor WYSIWYG enhancements, added APIs, an improved help page) can be found on the </value><value>Releases</value><value> page.</value><value>[50]</value><value>
</value><value>
</value><value>Core</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In the Drupal community, "CORE" refers to the collaboratively built codebase that can be extended through contributory modules and for versions prior to Drupal 8 is kept outside of the "sites" folder of a Drupal installation.</value><value>[51]</value><value> (Starting with version 8, core is kept in its own 'core' sub-directory.) Drupal core is the stock element of Drupal. Bootstrap and Common libraries are defined as Drupal core and all other functionality is defined as Drupal modules including the system module itself.
</value><value>In a Drupal website's default configuration, authors can contribute content as either registered or anonymous users (at the discretion of the administrator). This content is accessible to web visitors through a variety of selectable criteria. As of Drupal 8, Drupal has adopted some </value><value>Symfony</value><value> libraries into Drupal core.
</value><value>Core modules also includes a hierarchical </value><value>taxonomy</value><value> system, which lets developers categorize content  or </value><value>tagged</value><value> with key words for easier access.</value><value>[22]</value><value>
</value><value>Drupal maintains a detailed </value><value>changelog</value><value> of core feature updates by version.</value><value>[52]</value><value>
</value><value>
</value><value>Core modules</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal core includes optional modules that can be enabled by the administrator to extend the functionality of the core website.</value><value>[53]</value><value>
</value><value>The core Drupal distribution provides a number of features, including:</value><value>[53]</value><value>
</value><value>
</value><value>
</value><value>Access statistics and logging</value><value>
</value><value>Advanced search</value><value>
</value><value>Blogs, books, comments, forums, and polls</value><value>
</value><value>Caching and feature throttling for improved performance</value><value>
</value><value>Descriptive URLs</value><value>
</value><value>Multi-level menu system</value><value>
</value><value>Multi-site support</value><value>[54]</value><value>
</value><value>Multi-user content creation and editing</value><value>
</value><value>OpenID</value><value> support</value><value>
</value><value>RSS feed and feed aggregator</value><value>
</value><value>Security and new release update notification</value><value>
</value><value>User profiles</value><value>
</value><value>Various access control restrictions (user roles, IP addresses, email)</value><value>
</value><value>Workflow tools (triggers and actions)</value><value>
</value><value>Core themes</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal includes core themes, which customize the "look and feel" of Drupal sites,</value><value>[55]</value><value> for example, Garland and Bartik.
</value><value>The Color Module, introduced in Drupal core 5.0, allows administrators to change the color scheme of certain themes via a browser interface.</value><value>[56]</value><value>
</value><value>
</value><value>Localization</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>As of  January 2017</value><value>[update]</value><value>, Drupal had been made available in 100 languages and </value><value>English</value><value> (the default).</value><value>[57]</value><value> Support is included for right-to-left languages such as </value><value>Arabic</value><value>, </value><value>Persian</value><value>, and </value><value>Hebrew</value><value>.</value><value>[58]</value><value>
</value><value>Drupal localization is built on top of </value><value>gettext</value><value>, the GNU </value><value>internationalization and localization</value><value> (i18n) library.
</value><value>
</value><value>Auto-update notification</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal can automatically notify the administrator about new versions of modules, themes, or the Drupal core.</value><value>[58]</value><value> It's important to update quickly after security updates are released. 
</value><value>Before updating it is highly recommended to take backup of core, modules, theme, files and database. If there is any error shown after update or new updates is not compatible with a module, then it can be quickly replace by backup. There are several backup modules available in Drupal. 
</value><value>On October 15, 2014, a sql injection vulnerability was announced and update released.</value><value>[59]</value><value> Two weeks later the Drupal security team released an advisory explaining that everyone should act under the assumption that any site not updated within 7 hours of the announcement are infected.</value><value>[60]</value><value> Thus, it can be extremely important to apply these updates quickly and usage of a tool to make this process easier like </value><value>drush</value><value> is highly recommended.
</value><value>
</value><value>Database abstraction</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Prior to version 7, Drupal had functions that performed tasks related to databases, such as SQL query cleansing, multi-site table name prefixing, and generating proper SQL queries. In particular, Drupal 6 introduced an abstraction layer that allowed programmers to create SQL queries without writing SQL.
</value><value>Drupal 7 extends the data abstraction layer so that a programmer no longer needs to write SQL queries as text strings. It uses </value><value>PHP Data Objects</value><value> to abstract the database. </value><value>Microsoft</value><value> has written a database driver for their </value><value>SQL Server</value><value>.</value><value>[61]</value><value> Drupal 7 supports the file-based </value><value>SQLite</value><value> database engine, which is part of the standard PHP distribution.
</value><value>
</value><value>Windows development</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>With Drupal 7's new database abstraction layer, and ability to run on the Windows web server </value><value>IIS</value><value>, it is now easier for Windows developers to participate in the Drupal community. 
</value><value>A group on Drupal.org is dedicated to Windows issues.</value><value>[62]</value><value>
</value><value>
</value><value>Accessibility</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>With the release of Drupal 7, </value><value>Web accessibility</value><value> has been greatly improved by the Drupal community.</value><value>[63]</value><value>  Drupal is a good framework for building sites accessible to people with disabilities, because many of the best practices have been incorporated into the program code Core. The accessibility team is carrying on the work of identifying and resolving accessibility barriers and raising awareness within the community. 
</value><value>Drupal 7 started the adoption of </value><value>WAI-ARIA</value><value> support for </value><value>Rich Internet Applications</value><value> and this has been carried further in Drupal 8. There have been many improvements to both the visitor and administrator sides of Drupal, especially:
</value><value>
</value><value>Drag and drop functionality</value><value>
</value><value>Improved color contrast and intensity</value><value>
</value><value>Adding skip navigation to core themes</value><value>
</value><value>Adding labels by default for input forms</value><value>
</value><value>Fixing CSS display:none with consistent methods for hiding and exposing text on focus.</value><value>
</value><value>The community also added an accessibility gate for core issues in Drupal 8.</value><value>[64]</value><value>
</value><value>
</value><value>Extending the core</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal core is </value><value>modular</value><value>, defining a system of </value><value>hooks</value><value> and </value><value>callbacks</value><value>, which are accessed internally via an </value><value>API</value><value>.</value><value>[65]</value><value> This design allows third-party contributed </value><value>modules</value><value> and </value><value>themes</value><value> to extend or override Drupal's default behaviors without changing Drupal core's code.
</value><value>Drupal isolates core files from contributed modules and themes. This increases flexibility and security and allows administrators to cleanly upgrade to new releases without overwriting their site's customizations.</value><value>[66]</value><value> The Drupal community has the saying, "Never hack core," a strong recommendation that site developers do not change core files.</value><value>[51]</value><value>
</value><value>
</value><value>Modules</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Contributed modules offer such additional or alternate features as image galleries, custom content types and content listings, </value><value>WYSIWYG</value><value> editors, private messaging, third-party integration tools,</value><value>[67]</value><value> integrating with BPM portals,</value><value>[68]</value><value> and more. As of  January 2017</value><value>[update]</value><value> the Drupal website lists more than 36,500 free </value><value>modules</value><value>.</value><value>[15]</value><value>
</value><value>Some of the most commonly used contributed modules include:</value><value>[69]</value><value>
</value><value>
</value><value>Content Construction Kit (CCK): allows site administrators to dynamically create content types by extending the database schema. "Content type" describes the kind of information. Content types include, but are not limited to, events, invitations, reviews, articles, and products. The CCK Fields API is in Drupal core in Drupal 7.</value><value>[70]</value><value>[71]</value><value>
</value><value>Views: facilitates the retrieval and presentation, through a database abstraction system, of content to site visitors. Basic views functionality has been added to core in Drupal 8.</value><value>[72]</value><value>
</value><value>Panels: drag and drop layout manager that allows site administrators to visually design their site.</value><value>
</value><value>Rules: conditionally executed actions based on recurring events.</value><value>
</value><value>Features: enables the capture and management of features (entities, views, fields, configuration, etc.) into custom modules.</value><value>
</value><value>Context: allows definition of sections of site where Drupal features can be conditionally activated</value><value>
</value><value>Media: makes photo uploading and media management easier</value><value>
</value><value>Services: provides an API for Drupal.</value><value>
</value><value>Organic Groups Mailing List</value><value>
</value><value>Themes</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>As of  January 2017</value><value>[update]</value><value>, there are more than 2,400</value><value>[16]</value><value> free community-contributed </value><value>themes</value><value>. Themes adapt or replace a Drupal site's default look and feel.
</value><value>Drupal themes use standardized formats that may be generated by common third-party theme design engines. Many are written in the </value><value>PHPTemplate</value><value> engine</value><value>[73]</value><value> or, to a lesser extent, the </value><value>XTemplate</value><value> engine.</value><value>[74]</value><value> Some templates use hard-coded </value><value>PHP</value><value>. Drupal 8 will integrate the </value><value>Twig</value><value> templating engine.
</value><value>The inclusion of the PHPTemplate and XTemplate engines in Drupal addressed user concerns about flexibility and complexity.</value><value>[75]</value><value> The Drupal theming system utilizes a </value><value>template engine</value><value> to further separate </value><value>HTML</value><value>/</value><value>CSS</value><value> from PHP. A popular Drupal contributed module called 'Devel' provides GUI information to developers and themers about the page build.
</value><value>Community-contributed themes</value><value>[76]</value><value> at the Drupal website are released under a free </value><value>GPL</value><value> license,</value><value>[77]</value><value> and the most installed Drupal themes are </value><value>listed on this page</value><value>.</value><value>[78]</value><value>
</value><value>
</value><value>Distributions</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In the past, those wanting a fully customized installation of Drupal had to download a pre-tailored version separately from the official Drupal core. Today, however, a distribution defines a packaged version of Drupal that upon installation, provides a website or application built for a specific purpose.
</value><value>The distributions offer the benefit of a new Drupal site without having to manually seek out and install third-party contributed modules or adjust configuration settings.</value><value>[79]</value><value> They are collections of modules, themes, and associated configuration settings that prepare Drupal for custom operation. For example, a distribution could configure Drupal as a "brochure" site rather than a news site or </value><value>online store</value><value>.
</value><value>
</value><value>Architecture</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal is based on the </value><value>Presentation Abstraction Control</value><value> architecture, or PAC. 
</value><value>The </value><value>menu system</value><value> acts as the Controller. It accepts input via a single source (</value><value>HTTP GET</value><value> and </value><value>POST</value><value>), routes requests to the appropriate helper functions, pulls data out of the Abstraction (nodes and, from Drupal 5 onwards, forms), and then pushes it through a filter to get a Presentation of it (the theme system). 
</value><value>It even has multiple, parallel PAC agents in the form of blocks that push data out to a common canvas (page.tpl.php).</value><value>[80]</value><value>
</value><value>
</value><value>Community</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal.org has a large community of users and developers who provide active </value><value>community</value><value> support by coming up with new updates to help improve the functionality of Drupal,</value><value>[81]</value><value> As of  January 2017</value><value>[update]</value><value> more than 105,400 users are actively contributing.</value><value>[14]</value><value> The semiannual DrupalCon conference alternates between North America, Europe and Asia.</value><value>[82]</value><value> Attendance at DrupalCon grew from 500 at </value><value>Szeged</value><value> in August 2008, to over 3,700 people at Austin, Texas in June, 2014.
</value><value>Smaller events, known as "Drupal Camps" or DrupalCamp,</value><value>[83]</value><value> occur throughout the year all over the world. The annual Florida DrupalCamp brings users together for </value><value>Coding for a Cause</value><value> that benefits a local nonprofit organization, as does the annual GLADCamp (</value><value>Greater Los Angeles Drupal</value><value> Camp) event, </value><value>Coders with a Cause</value><value>.
</value><value>The Drupal community also organizes professional and semi-professional gatherings called </value><value>meetups</value><value> at a large number of venues around the world. In July, 2013, </value><value>Droplabs</value><value>, a co-working space in Los Angeles, California, was recognized as the world's "Top Drupal Location</value><value>[84]</value><value>" (with 62 recorded events) when compared with other event venues over a 12-month period.
</value><value>There are a number of active Drupal forums,</value><value>[85]</value><value> mailing lists</value><value>[86]</value><value> and discussion groups.</value><value>[87]</value><value> Drupal also maintains several </value><value>IRC</value><value> channels</value><value>[88]</value><value> on the </value><value>Freenode</value><value> network.
</value><value>There are over 30 national communities</value><value>[89]</value><value> around drupal.org offering language-specific support.
</value><value>Notable Drupal users include </value><value>NBC</value><value>, </value><value>Taboola</value><value>, </value><value>Patch</value><value>, and </value><value>We the People</value><value>.</value><value>[90]</value><value>
</value><value>
</value><value>Security</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Drupal's policy is to announce the nature of each security vulnerability once the fix is released.</value><value>[91]</value><value>[92]</value><value>
</value><value>Administrators of Drupal sites are automatically notified of these new releases via the Update Status module (Drupal 6) or via the Update Manager (Drupal 7).</value><value>[93]</value><value> 
</value><value>Drupal maintains a security announcement mailing list, a history of all security advisories,</value><value>[94]</value><value> a security team home page,</value><value>[95]</value><value> and an RSS feed</value><value>[96]</value><value> with the most recent security advisories.
</value><value>In mid-October 2014,</value><value>[97]</value><value> Drupal issued a "highly critical" security advisory regarding an </value><value>SQL injection</value><value> bug in Drupal 7, also known as Drupalgeddon.</value><value>[98]</value><value>[99]</value><value>  
</value><value>Downloading and installing an upgrade to Drupal 7.32 fixes the vulnerability, but does not remove any </value><value>backdoor</value><value> installed by hackers if the site has already been </value><value>compromised</value><value>.</value><value>[100]</value><value>  Attacks began soon after the vulnerability was announced. According to the Drupal security team, where a site was not patched within hours of the announcement, it should be considered compromised and taken offline by being replaced with a static HTML page while the administrator of its server must be told that other sites on the same server may also have been compromised. 
</value><value>To solve the problem, the site must be restored using backups from before October 15, be patched and manually updated, and anything merged from the site must be audited.</value><value>[101]</value><value>
</value><value>In late March 2018, a patch for vulnerability </value><value>CVE</value><value>-2018-7600, also dubbed </value><value>Drupalgeddon2</value><value>, was released. The underlying bug allows remote attackers without special roles or permissions to take complete control of Drupal 6, 7, and 8 sites. Starting early April, large scale automated attacks against vulnerable sites were observed,</value><value>[102]</value><value> and on April 20th, a high level of penetration of unpatched sites was reported.</value><value>[103]</value><value>
</value><value>
</value><value>Criticism</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>This section needs to be </value><value>updated</value><value>.</value><value> Please update this article to reflect recent events or newly available information.</value><value>  </value><value>(December 2014)</value><value>
</value><value>In an article</value><value>[104]</value><value> about the adoption of Drupal by the Whitehouse.gov site, </value><value>Slate</value><value> associate editor Chris Wilson</value><value>[105]</value><value> lists some common criticisms of Drupal. Other criticisms have included:
</value><value>
</value><value>Usability:</value><value> Aspects of the Drupal 6 administration interface were confusing and intimidating to some, particularly for new administrators.</value><value>[106]</value><value>[107]</value><value>[108]</value><value> According to Dries Buytaert, Drupal 7 addressed 90% of the problems identified by usability tests conducted at the Universities of Minnesota and Baltimore.</value><value>[109]</value><value>[110]</value><value> To achieve this, </value><value>Acquia</value><value> (the company founded by the project lead of Drupal) hired </value><value>user experience</value><value> designer Mark Boulton to work with the Drupal community to design an improved user interface for Drupal's administration interface.</value><value>[111]</value><value> The majority of his team's design work has been implemented by the community in Drupal 7. The 2011 usability test results from the University of Minnesota Office of Information Technology show that all of the major usability problems identified in Drupal 6 are either vastly improved or non-existent in Drupal 7. However, some new usability problems were identified.</value><value>[112]</value><value>[113]</value><value> Since the release of Drupal 7 there are now various distributions and applications to enhance the Back-end Usability of Drupal such as Drupal Gardens,</value><value>[114]</value><value> Open Enterprise</value><value>[115]</value><value> and Mitkom Builder.</value><value>[116]</value><value>
</value><value>Learning curve:</value><value> Some users describe Drupal as being difficult to master.</value><value>[117]</value><value>[118]</value><value> Drupal's many contributed modules can have overlapping functionality and have been reported as overwhelming to new users.</value><value>[119]</value><value>
</value><value>Backward compatibility (for software development):</value><value> Prior to 7, Drupal did not commit to backward compatibility across major revisions.</value><value>[120]</value><value> This means that module and theme developers may have to rework their code to make it compatible. However, Drupal's policy is to not change how it uses data. This means that data from previous versions is still usable without alteration in the new release.</value><value>[121]</value><value>[122]</value><value> Drupal documents any incompatibilities, allowing the user to make informed decisions about when and whether to upgrade. Upgrades from 8 to 9 and beyond will require substantially less effort." </value><value>[123]</value><value>
</value><value>Performance/scalability:</value><value> In 2008, </value><value>performance</value><value> tests between Drupal 6.1 and </value><value>Joomla</value><value> 1.5 demonstrated that Drupal's pages were delivered "significantly faster" than those of Joomla.</value><value>[124]</value><value> Despite this, arguments over speed persist.</value><value>[125]</value><value> Drupal is likely to be slower than a special-purpose application for a given task. For example, </value><value>WordPress</value><value> typically outperforms Drupal as a single-user blogging tool. Drupal positions itself for broader applications requirements that are outside the scope of more narrowly focused applications.</value><value>[126]</value><value> Drupal offers </value><value>caching</value><value> to store various page elements, the use of which resulted in a 508% improvement in one benchmark.</value><value>[127]</value><value> When using Drupal's default Page Cache mechanism, the cached pages are delivered only to anonymous users, so contributed modules must be installed to allow caching content for logged in users.</value><value>[128]</value><value>[129]</value><value> Like performance, </value><value>scalability</value><value> (the ability to add servers to handle growing numbers of visitors with consistent response) can become a concern on large, interactive sites. </value><value>MySQL</value><value>'s query caching can help reduce the load on the database server caused by Drupal's high </value><value>query rate</value><value>.</value><value>[130]</value><value>[131]</value><value> Drupal caches database schema </value><value>metadata</value><value> as well as elements such as blocks, forms and menus.</value><value>[132]</value><value> Drupal 7 increases performance in database queries and reduces PHP code usage.</value><value>[133]</value><value>
</value><value>Integrability with hosting structures:</value><value> Because of Drupal's demanding query requirements, Drupal-based websites can quickly become very taxing to hosts whose databases reside on a machine separate from their </value><value>HTTP server</value><value>. While the issue can normally be addressed by implementing aggressive </value><value>caching</value><value> as described above, such methods may be unimplementable in cases where the host does not offer access to </value><value>PHP accelerators</value><value> like </value><value>XCache</value><value> or </value><value>APC</value><value>. Drupal has plugins that facilitate similar caching without requiring special PHP extensions.</value><value>[134]</value><value>[135]</value><value>
</value><value>The Drupal core search is ineffective at searching content:</value><value>[</value><value>citation needed</value><value>]</value><value> There are contributed modules that will greatly improve the search functionality on a Drupal website, but they are not easily accessible due to a high learning curve and the difficulty users have in general of finding the right module.</value><value>[</value><value>citation needed</value><value>]</value><value> One of the faceted search options is </value><value>Apache Solr</value><value> Search Integration module, however, the module requires a dedicated server or </value><value>virtual private server</value><value> (VPS) to operate because Solr must run on a </value><value>servlet</value><value> container, e.g. </value><value>Tomcat</value><value>, </value><value>Jetty</value><value> or </value><value>Resin</value><value>. These requirements make it harder for a Drupal website to have a functional search feature. In response some companies have created Apache Solr </value><value>SaaS</value><value> products.</value><value>
</value><value>Many published, yet incomplete or outdated modules</value><value>[136]</value><value> While Drupal's site boasts over 30,000 downloadable modules, searching the Drupal module directory finds many that are incomplete abandoned projects and do not work at all, only work for an outdated version due to lack of backward compatibility, or are unusable due to serious bugs.  This is due to the open source nature of Drupal, and the fact that anyone is free to start a module and publish it on drupal.org.  Modules with an active maintenance team are often highly polished, secure, and nearly bug free. Recent changes to the drupal.org website now let users search for modules, themes, and distributions, while filtering results by stability. </value><value>[137]</value><value>
</value><value>Difficult to unit test:</value><value>[138]</value><value> Drupal 7 doesn't follow MVC framework and stores all of its configurations in database and as a result, unit testing the code without touching the database becomes extremely difficult. As a result, developers have resorted to using integration testing frameworks such as Red Test or behavior-driven development framework such as Behat and Codeception. Drupal 8 has taken a great stride in making it easier for developers to write unit-testable code.</value><value>
</value><value>There have also been criticism that Drupal is moving closer to the Enterprise Market and leaving smaller sites behind. The </value><value>Backdrop CMS</value><value> project was forked by Nate Haug and Jen Lampton from Drupal about 2 years into the Drupal 8 development cycle. They claimed that Drupal was moving "closer to the Enterprise market" and that many in the community wouldn't be able (or willing) to make the jump. At that time the code was quite similar to that of Drupal 7—it was before the adoption of </value><value>Symfony</value><value>, before the removal of much code that was not </value><value>object-oriented</value><value>, and before widespread rewrites of many subsystems. </value><value>[139]</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Comparison of web frameworks</value><value>
</value><value>List of applications with iCalendar support</value><value>
</value><value>List of content management systems</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"drupal/drupal"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>6 November</value><value> 2018</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Releases for Drupal core"</value><value>. Drupal Project</value><value>. Retrieved </value><value>12 December</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Drupal 8 release history; drupal.org"</value><value>. Retrieved </value><value>28 November</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Licensing FAQ"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>A query on </value><value>Drupal</value><value>'</value><value>s official website on March 2009: </value><value>How does one pronounce "Drupal"?</value><value> (accessed 19 June 2013)</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Drupal Overview"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"System Requirements"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>W3Techs (2011-07-15). </value><value>"Usage of content management systems for websites"</value><value>. Retrieved </value><value>2011-07-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>BuiltWith (2011-03-28). </value><value>"Drupal Usage Statistics"</value><value>. Retrieved </value><value>2011-03-28</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The State of Drupal 2010 speech"</value><value>. Archive.org. 2001-03-10</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Knowledge management with Drupal"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Getting Involved | Drupal.org"</value><value>. </value><value>www.drupal.org</value><value>. 2018-09-21</value><value>. Retrieved </value><value>2018-09-21</value><value>. </value><value>Drupal.org Activity</value><value>
</value><value>
</value><value>^</value><value> </value><value>"1 Million Users on Drupal.org!"</value><value>. </value><value>www.drupal.org</value><value>. 2013-10-11.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Drupal for Developers | Drupal.org"</value><value>. </value><value>www.drupal.org</value><value>. 2017-09-21</value><value>. Retrieved </value><value>2017-04-21</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Module project | Drupal.org"</value><value>. </value><value>www.drupal.org</value><value>. 2017-09-21</value><value>. Retrieved </value><value>2017-09-21</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Theme project | Drupal.org"</value><value>. </value><value>www.drupal.org</value><value>. 2017-09-21</value><value>. Retrieved </value><value>2017-09-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Distribution project | Drupal.org"</value><value>. </value><value>www.drupal.org</value><value>. 2017-09-21</value><value>. Retrieved </value><value>2017-09-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 7 as an enterprise web application framework"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Comparison of web frameworks"</value><value>. </value><value>Wikipedia</value><value>. 2017-04-07. </value><value>Comparison of features</value><value>
</value><value>
</value><value>^</value><value> </value><value>O'Connor, William (2014-08-19). </value><value>"The Drupal API turns a CMS into a true enterprise application - O'Reilly Radar"</value><value>. </value><value>O'Reilly Media</value><value>. Retrieved </value><value>2017-04-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Diana, Dupuis (2013-05-15). </value><value>"Drupal Is a Framework: Why Everyone Needs to Understand This"</value><value>. </value><value>Linux Journal</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Features"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 7 release history; drupal.org"</value><value>. Retrieved </value><value>28 November</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 6 release history; drupal.org"</value><value>. Retrieved </value><value>6 November</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 5 release history; drupal.org"</value><value>. Retrieved </value><value>6 November</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"History"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Druppel: Dutch to English Translation"</value><value>. </value><value>Babylon Translation</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Benjamin Melançon;  et al. (2011). </value><value>The Definitive Guide to Drupal 7</value><value> (2nd ed.). Apress. p. 823. </value><value>ISBN</value><value> </value><value>9781430231356</value><value>. Retrieved </value><value>2012-05-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Critchley, Spencer (2006-05-03). </value><value>"Digital Politics: An Interview With CivicSpace Founder Zack Rosen"</value><value>. </value><value>O'Reilly Media</value><value>. Retrieved </value><value>2012-05-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kreiss, Daniel (2012-03-05). </value><value>"Dean, Romney, and Drupal: Values and Technological Adoption"</value><value>. </value><value>Culture Digitally</value><value>. Retrieved </value><value>2012-05-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Samantha M. Shapiro, </value><value>"The Dean Connection"</value><value>, </value><value>The New York Times</value><value> December 7, 2003, accessed May 27, 2012.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Marketplace"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2013-04-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Koenig, Josh. </value><value>"Growth Graphs"</value><value>. </value><value>Groups.Drupal</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2008). </value><value>"Drupal Download Statistics"</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2007). </value><value>"Drupal Download Statistics"</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Usage statistics for Drupal core"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Sites"</value><value>. </value><value>Dries Buytaert</value><value>. Retrieved </value><value>2010-07-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"List of Nonprofit, NPO, NGO Websites Using Drupal"</value><value>. </value><value>ENGINE Industries</value><value>. Archived from </value><value>the original</value><value> on 2009-12-24</value><value>. Retrieved </value><value>2010-07-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"OSS CMS Award Previous Winners"</value><value>. </value><value>Packt Publishing</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal is a Webware 100 winner for the third year in a row"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Cnet.com"</value><value>. News.cnet.com. 2009-05-19</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://www.drupal.org/forum/general/news-and-announcements/2008-02-13/drupal-60-released</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Buytaert.net"</value><value>. Buytaert.net</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 7 to be released on January 5 (with one ginormous party)"</value><value>. Buytaert.net</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Xplain Hosting Drupal 7 Quickstart training seminar"</value><value>. </value><value>Scoop</value><value>. 2010-12-16.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"drupal 7.24"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2013-11-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 8.0.0-rc1 announcement"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 8.0.0-rc1  announcement"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 8.0.0 released"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>19 November</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://www.drupal.org/project/drupal/releases</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Never hack core"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 7.39 released"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2015-09-19</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Handbook: Core Modules"</value><value>. </value><value>drupal.org</value><value>. Archived from </value><value>the original</value><value> on 2008-07-28</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Multi-site installation recipes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries. </value><value>"Garland, the new default core theme"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Color: Allows the user to change the color scheme of certain themes"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal core translation downloads"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2017-01-30</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Drupal 6.0 released"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SA-CORE-2014-005 - Drupal core - SQL injection"</value><value>. </value><value>Https:</value><value>. Retrieved </value><value>December 3,</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Core - Highly Critical - Public Service announcement - PSA-2014-003"</value><value>. </value><value>Https:</value><value>. Retrieved </value><value>December 3,</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Install Drupal for Windows"</value><value>. </value><value>microsoft.com</value><value>. Retrieved </value><value>2011-02-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal on Windows Group"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2011-02-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Killesreiter, Gerhard (2013-02-25). </value><value>"Accessibility statement"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2013-04-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Scholten, Roy (2012-12-10). </value><value>"Drupal core gates"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2013-04-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"API Reference"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"File and directory management"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Integrating Drupal with External Systems"</value><value>. specbee.com. 2018-08-24</value><value>. Retrieved </value><value>2018-08-24</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Camunda BPM Integration"</value><value>. </value><value>Srijan Technologies</value><value>. Srijan Technologies.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Project usage overview"</value><value>. </value><value>Drupal.org</value><value>. Retrieved </value><value>2011-08-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"DRUPAL 5 TO DRUPAL 7"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Field API"</value><value>. 2009</value><value>. Retrieved </value><value>2009-05-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Views in Drupal Core initiative: Status report and roadmap"</value><value>. Retrieved </value><value>2014-11-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PHPTemplate theme engine"</value><value>. </value><value>drupal.org</value><value>. Archived from </value><value>the original</value><value> on 2009-03-08</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"XTemplate theme engine"</value><value>. </value><value>drupal.org</value><value>. Archived from </value><value>the original</value><value> on 2009-03-16</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"How does Drupal compare to Mambo? discussion thread"</value><value>. </value><value>drupal.org</value><value>. 2005-01-17</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal themes"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Adding your theme to Drupal.org"</value><value>. Drupal.org.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"10 Best Drupal Themes"</value><value>. MAAN Softwares</value><value>. Retrieved </value><value>2017-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Top Drupal Distributions"</value><value>. AGLOBALWAY Consulting Services Inc. Archived from </value><value>the original</value><value> on 2014-04-13.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"MVC vs. PAC"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Drupal - CMS Grew Overnight</value><value> By MAAN Softwares, Retrieved, June 8th, 2017</value><value>
</value><value>
</value><value>^</value><value> </value><value>"drupal.org discussion on DrupalCon event management"</value><value>. Groups.drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Camps and Cons"</value><value>. Retrieved </value><value>25 January</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"1 Year of Drupal Events Visualized"</value><value>. Retrieved </value><value>13 July</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"forums"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"mailing lists"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Groups"</value><value>. Groups.drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal IRC channels on FreeNode"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Language specific communities"</value><value>. Drupal.org. 2011-08-26</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Keller, Katherine (7 April 2017). </value><value>"CMS Battle for Beginners: WordPress vs Joomla vs Drupal (Infographic)"</value><value>. </value><value>Entrepreneur</value><value>. Retrieved </value><value>17 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Drupal. </value><value>"Security announcement and release process"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Drupal. </value><value>"How to report a security issue"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Update manager (and Update status)"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2011-07-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Security advisories"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-28</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal security team"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Security RSS feed"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupalgeddon megaflaw raises questions over CMS bods' crisis mgmt"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SA-CORE-2014-005 - Drupal core - SQL injection"</value><value>. </value><value>Security advisories</value><value>. Drupal security team.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupalgeddon strikes back: outdated Drupal allegedly linked to "Panama Papers</value><value>"</value><value>"</value><value>. </value><value>Blog</value><value>. Drop Guard.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Core—Highly Critical—Public Service Announcement—PSA-2014-003"</value><value>. </value><value>Security advisories</value><value>. Drupal security team. October 29, 2014  – via Drupal.org. </value><value>You should proceed under the assumption that every Drupal 7 website was compromised unless updated or patched before Oct 15th, 11pm UTC, that is 7 hours after the announcement.</value><value>Simply updating to Drupal 7.32 will not remove backdoors</value><value>....updating to version 7.32 or applying the patch fixes the vulnerability but does not fix an already compromised website. If you find that your site is already patched but you didn’t do it, that can be a symptom that the site was compromised - some attacks have applied the patch as a way to guarantee they are the only attacker in control of the site.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Robinson, Brian (2014-11-07). </value><value>"Attacks on open source call for better software design -"</value><value>. </value><value>GCN</value><value>. Retrieved </value><value>2016-07-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"FAQ about SA-CORE-2018-002"</value><value>. Drupal Security Team</value><value>. Retrieved </value><value>23 April</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Goddin, Dan (20 April 2018). </value><value>"</value><value>"</value><value>Drupalgeddon2" touches off arms race to mass-exploit powerful Web servers"</value><value>. </value><value>Ars Technica</value><value>. Retrieved </value><value>23 April</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Wilson, Chris. </value><value>"Running the White House Web site on Drupal is a political disaster"</value><value>. Retrieved </value><value>6 November</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Message Error, Why running the White House Web site on Drupal is a political disaster waiting to happen</value><value> Chris Wilson. </value><value>Slate (magazine)</value><value> October 27, 2009</value><value>
</value><value>
</value><value>^</value><value> </value><value>Scollan, Becca; Abby Byrnes; Malia Nagle; Paul Coyle; Cynthia York; Maleka Ingram (2008-05-01). </value><value>"Drupal Usability Research Report"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Lal, Kieran (2008-06-26). </value><value>"Drupal usability tests from the University of Baltimore with community solutions"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2008-07-03). </value><value>"Usability, usability, and usability"</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2008-03-10). </value><value>"First results from usability testing"</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Report from Formal Drupal"</value><value> </value><value>(PDF)</value><value>. 2008-03-03</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2009-02-04). </value><value>"Mark Boulton to help with Drupal 7"</value><value>. Archived from </value><value>the original</value><value> on 2010-04-13.</value><value>
</value><value>
</value><value>^</value><value> </value><value>University of Minnesota Office of Information Technology (2011-05-23). </value><value>"Usability test at University of Minnesota, may 2011"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>University of Minnesota Office of Information Technology (2011-06-01). </value><value>"Report from the University of Minnesota Drupal Usability Testing"</value><value>. </value><value>drupal.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Gardens"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Open Enterprise"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Mitkom"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Howard, Brian C. (2007-01-25). </value><value>"Harnessing Drupal for Citizen Journalism"</value><value>. </value><value>NewAssignment.Net</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Review"</value><value>. Archived from </value><value>the original</value><value> on 2010-02-05.</value><value>
</value><value>
</value><value>^</value><value> </value><value>James, Heather (2010-11-09). </value><value>"203 people tell What I wish I knew when I started Drupal"</value><value>. </value><value>Acquia.com</value><value>. Retrieved </value><value>2010-11-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2006-05-26). </value><value>"Backward Compatibility"</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2006-07-27). </value><value>"The pain before the pay-off"</value><value>. Retrieved </value><value>2009-04-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal's Upgrade Instructions (end-user)"</value><value>. Drupal.org</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Making Drupal upgrades easy forever - Dries Buytaert"</value><value>. </value><value>buytaert.net</value><value>. Retrieved </value><value>6 November</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Joomla 1.5 &amp; Drupal 6.1 Performance Comparison"</value><value>. Archived from </value><value>the original</value><value> on 2012-07-22.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Is Drupal Slow &amp; Bloated?"</value><value>. Archived from </value><value>the original</value><value> on 2012-09-09.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Is Drupal the right tool for the job?"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal vs Joomla: performance | Dries Buytaert"</value><value>. Buytaert.net</value><value>. Retrieved </value><value>2012-05-05</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Authenticated User Page Caching (Authcache)"</value><value>. </value><value>drupal.org</value><value>. Retrieved </value><value>2009-09-23</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Buytaert, Dries (2006-08-11). </value><value>"Drupal vs Joomla! performance"</value><value>. Retrieved </value><value>2009-05-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Speed up a Drupal web site by enabling MySQL query caching"</value><value>. </value><value>nadeausoftware.com</value><value>. 2007-03-07</value><value>. Retrieved </value><value>2009-06-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Book on Drupal Performance &amp; Scalability"</value><value>. Books.tag1consulting.com. 2008-07-16. Archived from </value><value>the original</value><value> on 2011-09-06</value><value>. Retrieved </value><value>2011-08-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Caching in Drupal 6"</value><value>. </value><value>drupal.org</value><value>. 2008-07-28</value><value>. Retrieved </value><value>2009-06-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal 6 vs Drupal 7 performance and comments vs nodes"</value><value>. </value><value>CivicActions.com</value><value>. 2009-05-19</value><value>. Retrieved </value><value>2009-06-21</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Boost"</value><value>. drupal.org. 2006-10-15</value><value>. Retrieved </value><value>2012-05-05</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Memcache API and Integration"</value><value>. drupal.org</value><value>. Retrieved </value><value>2012-05-05</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Dealing with unsupported (abandoned) projects"</value><value>. </value><value>While experienced Drupal users know to check the queue and the git commits to determine the health of a project, having broken and unmaintained/unsupported projects available can be confusing and off-putting for new users.</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://www.drupal.org/project/project_module</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Drupal Testing Methodologies Are Broken - Here's Why | Red Crackle"</value><value>. </value><value>redcrackle.com</value><value>. Retrieved </value><value>2015-12-05</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Backdrop CMS: Setting the record straight"</value><value>. </value><value>Drupal Watchdog</value><value>. 2014-06-01.</value><value>
</value><value>
</value><value>
</value><value>Further reading</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Abbott/Jones (2016), Learning Drupal 8, England, Packt Publishing. </value><value>ISBN</value><value> </value><value>978-1-78216-875-1</value><value>
</value><value>Pol, Kristen (2012). </value><value>Drupal 7 Multilingual Sites</value><value>. Birmingham, England: Packt Publishing. </value><value>ISBN</value><value> </value><value>978-1-84951-818-5</value><value>.</value><value>
</value><value>Mercer, David (2010). </value><value>Drupal 7</value><value>. Birmingham, England: Packt Publishing. </value><value>ISBN</value><value> </value><value>1-84951-286-8</value><value>.</value><value>
</value><value>Travis, Brian (2011). </value><value>Pro Drupal 7 for Windows Developers</value><value>. Berkeley: APress. </value><value>ISBN</value><value> </value><value>978-1-4302-3153-0</value><value>.</value><value>
</value><value>Butcher, Matt; Larry Garfield; John Wilkins; Matt Farina; Ken Rickard; Greg Dunlap (2010). </value><value>Drupal 7 Module Development</value><value>. Birmingham, England: Packt Publishing. </value><value>ISBN</value><value> </value><value>978-1-84951-116-2</value><value>.</value><value>
</value><value>Bhavin, Patel (Aug 2010). </value><value>Drupal 6 Panel Cookbook</value><value>. Canada: Packt Publishing. </value><value>ISBN</value><value> </value><value>1-84951-118-7</value><value>.</value><value>
</value><value>Beighley, Lynn (2009). </value><value>Drupal for Dummies</value><value>. New York: For Dummies. </value><value>ISBN</value><value> </value><value>978-0-470-55611-5</value><value>.</value><value>
</value><value>Herremans, D. (2009). </value><value>Drupal 6: Ultimate Community Site Guide</value><value>. Switzerland. </value><value>ISBN</value><value> </value><value>978-2-8399-0490-2</value><value>.</value><value>
</value><value>Peacock, Michael (2008). </value><value>Selling Online with Drupal e-Commerce</value><value>. Birmingham, England: Packt Publishing. </value><value>ISBN</value><value> </value><value>978-1-84719-406-0</value><value>.</value><value>
</value><value>VanDyk, John K. (2008). </value><value>Pro Drupal Development, Second Edition</value><value>. New York: Springer Verlag/Apress. </value><value>ISBN</value><value> </value><value>1-4302-0989-5</value><value>.</value><value>
</value><value>Kafer, Konstantin; Emma Hogbin (Apr 2009). </value><value>Front End Drupal: Designing, Theming, Scripting</value><value>. Jersey, USA: Prentice Hall. </value><value>ISBN</value><value> </value><value>0-13-713669-2</value><value>.</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>Drupal</value><value>.</value><value>
</value><value>Official website</value><value>
</value><value>Latest releases</value><value>
</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Web frameworks</value><value>
</value><value>Comparison</value><value>
</value><value>C++</value><value>
</value><value>CppCMS</value><value>
</value><value>Wt</value><value>
</value><value>CLI</value><value>
</value><value>ASP.NET</value><value>
</value><value>Core</value><value>
</value><value>AJAX</value><value>
</value><value>Dynamic Data</value><value>
</value><value>MVC</value><value>
</value><value>Razor</value><value>
</value><value>Web Forms</value><value>
</value><value>DNN</value><value>
</value><value>BFC</value><value>
</value><value>MonoRail</value><value>
</value><value>OpenRasta</value><value>
</value><value>Umbraco</value><value>
</value><value>WebSharper</value><value>
</value><value>ColdFusion</value><value>
</value><value>CFWheels</value><value>
</value><value>ColdBox Platform</value><value>
</value><value>ColdSpring</value><value>
</value><value>Fusebox</value><value>
</value><value>Model-Glue</value><value>
</value><value>Common Lisp</value><value>
</value><value>Caveman2</value><value>
</value><value>CL-HTTP</value><value>
</value><value>Weblocks</value><value>
</value><value>Haskell</value><value>
</value><value>Yesod</value><value>
</value><value>Snap</value><value>
</value><value>Java</value><value>
</value><value>AppFuse</value><value>
</value><value>Flexive</value><value>
</value><value>Grails</value><value>
</value><value>GWT</value><value>
</value><value>ICEfaces</value><value>
</value><value>ItsNat</value><value>
</value><value>JavaServer Faces</value><value>
</value><value>JHipster</value><value>
</value><value>Jspx</value><value>
</value><value>JWt</value><value>
</value><value>OpenXava</value><value>
</value><value>Play</value><value>
</value><value>Remote Application Platform</value><value>
</value><value>RIFE</value><value>
</value><value>Seam</value><value>
</value><value>Sling</value><value>
</value><value>Spring</value><value>
</value><value>Stripes</value><value>
</value><value>Struts</value><value>
</value><value>Tapestry</value><value>
</value><value>Vaadin</value><value>
</value><value>Vert.x</value><value>
</value><value>WebWork</value><value>
</value><value>Wicket</value><value>
</value><value>WaveMaker</value><value>
</value><value>ZK</value><value>
</value><value>JavaScript</value><value>
</value><value>Angular</value><value>/</value><value>AngularJS</value><value>
</value><value>Backbone.js</value><value>
</value><value>Chaplin.js</value><value>
</value><value>Closure</value><value>
</value><value>Dojo Toolkit</value><value>
</value><value>Ember.js</value><value>
</value><value>Ext JS</value><value>
</value><value>jQuery</value><value>
</value><value>Knockout.js</value><value>
</value><value>Meteor</value><value>
</value><value>MooTools</value><value>
</value><value>Node.js</value><value>
</value><value>OpenUI5</value><value>
</value><value>Prototype</value><value>
</value><value>React</value><value>
</value><value>Rico</value><value>
</value><value>script.aculo.us</value><value>
</value><value>Sencha Touch</value><value>
</value><value>SproutCore</value><value>
</value><value>Vue.js</value><value>
</value><value>Wakanda</value><value>
</value><value>Perl</value><value>
</value><value>Catalyst</value><value>
</value><value>Dancer</value><value>
</value><value>Mason</value><value>
</value><value>Maypole</value><value>
</value><value>Mojolicious</value><value>
</value><value>WebGUI</value><value>
</value><value>PHP</value><value>
</value><value>CakePHP</value><value>
</value><value>CodeIgniter</value><value>
</value><value>Drupal</value><value>
</value><value>Fat-Free</value><value>
</value><value>FuelPHP</value><value>
</value><value>Flow</value><value>
</value><value>Gyroscope</value><value>
</value><value>Horde</value><value>
</value><value>Kohana</value><value>
</value><value>Laravel</value><value>
</value><value>Lithium</value><value>
</value><value>Midgard</value><value>
</value><value>MODX</value><value>
</value><value>Nette</value><value>
</value><value>Phalcon</value><value>
</value><value>PHP-Fusion</value><value>
</value><value>Pop PHP</value><value>
</value><value>PRADO</value><value>
</value><value>ProcessWire</value><value>
</value><value>Qcodo</value><value>
</value><value>Silex</value><value>
</value><value>SilverStripe</value><value>
</value><value>Symfony</value><value>
</value><value>TYPO3</value><value>
</value><value>Xaraya</value><value>
</value><value>XOOPS</value><value>
</value><value>Yii</value><value>
</value><value>Zend Framework</value><value>
</value><value>Python</value><value>
</value><value>BlueBream</value><value>
</value><value>CherryPy</value><value>
</value><value>Django</value><value>
</value><value>Flask</value><value>
</value><value>Grok</value><value>
</value><value>Nevow</value><value>
</value><value>Pyjs</value><value>
</value><value>Pylons</value><value>
</value><value>Pyramid</value><value>
</value><value>Quixote</value><value>
</value><value>TACTIC</value><value>
</value><value>Tornado</value><value>
</value><value>TurboGears</value><value>
</value><value>web2py</value><value>
</value><value>Webware</value><value>
</value><value>Zope 2</value><value>
</value><value>Ruby</value><value>
</value><value>Camping</value><value>
</value><value>Merb</value><value>
</value><value>Padrino</value><value>
</value><value>Ruby on Rails</value><value>
</value><value>Sinatra</value><value>
</value><value>Scala</value><value>
</value><value>Lift</value><value>
</value><value>Play</value><value>
</value><value>Scalatra</value><value>
</value><value>Smalltalk</value><value>
</value><value>AIDA/Web</value><value>
</value><value>Seaside</value><value>
</value><value>Other languages</value><value>
</value><value>Vibe.d</value><value> (</value><value>D</value><value>)</value><value>
</value><value>Application Express</value><value> (</value><value>PL/SQL</value><value>)</value><value>
</value><value>Grails</value><value> (</value><value>Groovy</value><value>)</value><value>
</value><value>Kepler</value><value> (</value><value>Lua</value><value>)</value><value>
</value><value>Rocket</value><value> (</value><value>Rust</value><value>)</value><value>
</value><value>OpenACS</value><value> (</value><value>Tcl</value><value>)</value><value>
</value><value>Phoenix</value><value> (</value><value>Elixir</value><value>)</value><value>
</value><value>SproutCore</value><value> (</value><value>JavaScript</value><value>-</value><value>Ruby</value><value>)</value><value>
</value><value>Yaws</value><value> (</value><value>Erlang</value><value>)</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Software in the Public Interest</value><value>People</value><value>
</value><value>Martin Michlmayr</value><value> (President)</value><value>
</value><value>Bdale Garbee</value><value>
</value><value>Projects</value><value>
</value><value>0 A.D.</value><value>
</value><value>Arch Linux</value><value>
</value><value>Debian</value><value>
</value><value>Drizzle</value><value>
</value><value>Drupal</value><value>
</value><value>FFmpeg</value><value>
</value><value>Fluxbox</value><value>
</value><value>freedesktop.org</value><value>
</value><value>FreedomBox</value><value>
</value><value>Gallery Project</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>GNUstep</value><value>
</value><value>Jenkins</value><value>
</value><value>LibreOffice</value><value>
</value><value>MinGW</value><value>
</value><value>Open and Free Technology Community</value><value>
</value><value>Open Bioinformatics Foundation</value><value>
</value><value>Open64</value><value>
</value><value>OpenEmbedded</value><value>
</value><value>OpenVAS</value><value>
</value><value>OpenWrt</value><value>
</value><value>PostgreSQL</value><value>
</value><value>Privoxy</value><value>
</value><value>SproutCore</value><value>
</value><value>X.Org Foundation</value><value>
</value><value>YafaRay</value><value>
</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>GND</value><value>: </value><value>7522644-3</value><value>
</value><value>LCCN</value><value>: </value><value>n2009053036</value><value>
</value><value>VIAF</value><value>: </value><value>180810498</value><value>
</value><value> </value><value>WorldCat Identities</value><value>: </value><value>180810498</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 4 December 2018, at 21:18</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Homesteading_the_Noosphere</url><title>Homesteading the Noosphere</title><text><value>"</value><value>Homesteading the Noosphere</value><value>" (abbreviated </value><value>HtN</value><value>) is an </value><value>essay</value><value> written by </value><value>Eric S. Raymond</value><value> about the social workings of </value><value>open-source</value><value> </value><value>software development</value><value>. It follows his previous piece "</value><value>The Cathedral and the Bazaar</value><value>" (1997).
</value><value>The essay examines issues of </value><value>project</value><value> ownership and transfer, as well as investigating possible </value><value>anthropological</value><value> roots of the </value><value>gift culture</value><value> in open source as contrasted with the exchange culture of </value><value>closed source</value><value> software. Raymond also investigates the nature of the spread of open source into the untamed frontier of ideas he terms the </value><value>noosphere</value><value>, postulating that projects that range too far ahead of their time fail because they are too far out in the wilderness, and that successful projects tend to relate to existing projects.
</value><value>Raymond delves into the contrast between the stated aims of open source and observed behaviors, and also explores the underlying motivations of people involved in the </value><value>open source movement</value><value>. He seems to settle on the idea that open-source practitioners find striving for a great </value><value>reputation</value><value> within the "tribe" a key motivational feature.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Citations</value><value>
</value><value>2</value><value> </value><value>In popular culture</value><value>
</value><value>3</value><value> </value><value>See also</value><value>
</value><value>4</value><value> </value><value>References</value><value>
</value><value>5</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Citations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"Homesteading the Noosphere" has been referenced in various papers, including:
</value><value>
</value><value>The impact of ideology on effectiveness in open source software development teams</value><value>[1]</value><value>[2]</value><value>
</value><value>An Overview of the Software Engineering Process and Tools in the Mozilla Project</value><value>[3]</value><value>
</value><value>From Planning to Mature: on the Determinants of Open Source Take Off, Discussion paper 2005-17, Università degli Studi di</value><value>[4]</value><value>
</value><value>Open borders? Immigration in open source projects</value><value>[5]</value><value>
</value><value>Public commons of geographic data: research and development challenges</value><value>[6]</value><value>
</value><value>In popular culture</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In the Japanese novel series </value><value>Log Horizon</value><value> and its </value><value>manga</value><value> and </value><value>anime</value><value> adaptations, three-hundred thousand Japanese players of a </value><value>massively multiplayer online role-playing game</value><value> suddenly find themselves transported into the game's world right as the game was being updated with an expansion pack by the name of </value><value>Homesteading the Noosphere</value><value> (</value><value>ノウアスフィアの開墾</value><value>,</value><value> </value><value>Nōasufia no Kaikon</value><value>)</value><value>, which the author named after Raymond's essay.</value><value>[7]</value><value> The first chapter of the novel series also bears the same name.</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Calculation in kind</value><value>, also known as a money-free economy</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Eric S. Raymond (1999). "Homesteading the Noosphere". </value><value>The Cathedral &amp; the Bazaar</value><value>. O'Reilly. hardcover </value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>ISBN</value><value> </value><value>1-56592-724-9</value><value>, October 1999; paperback </value><value>ISBN</value><value> </value><value>0-596-00108-8</value><value>, January 2001.</value><value>  — also includes "</value><value>The Cathedral and the Bazaar</value><value>", "</value><value>The Magic Cauldron</value><value>" and "</value><value>Revenge of the Hackers</value><value>"</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Archived copy"</value><value> </value><value>(PDF)</value><value>. Archived from </value><value>the original</value><value> </value><value>(PDF)</value><value> on 2010-07-01</value><value>. Retrieved </value><value>2010-07-10</value><value>.</value><value>CS1 maint: Archived copy as title (</value><value>link</value><value>) </value><value>
</value><value>
</value><value>^</value><value> </value><value>http://www.rhsmith.umd.edu/faculty/kstewart/ResearchInfo/StewartGosain-IdeologyinOSS.pdf</value><value>[</value><value>permanent dead link</value><value>]</value><value>
</value><value>
</value><value>^</value><value> </value><value>http://www.async.com.br/~kiko/papers/mozse.pdf</value><value>
</value><value>
</value><value>^</value><value> </value><value>http://www.intertic.org/Conference/Manenti.pdf</value><value>
</value><value>
</value><value>^</value><value> </value><value>http://portal.acm.org/citation.cfm?id=1269016</value><value>
</value><value>
</value><value>^</value><value> </value><value>http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.85.4039&amp;rep=rep1&amp;type=pdf</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Twitter / marmalade_macro: @Noneuseless ..."</value><value> (in Japanese). Twitter</value><value>. Retrieved </value><value>December 7,</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The essay readable on the web</value><value>, including a revision-history, 1998-2000.</value><value>
</value><value>
</value><value>
</value><value> </value><value>This article about a computer book or series of books is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>
</value><value>This article about an </value><value>essay</value><value> or essay collection is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 19 November 2018, at 16:13</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Corporation_for_National_Research_Initiatives</url><title>Corporation for National Research Initiatives</title><text><value>The </value><value>Corporation for National Research Initiatives</value><value> (</value><value>CNRI</value><value>), based in </value><value>Reston, Virginia</value><value>, is a </value><value>non-profit organization</value><value> founded in 1986 by </value><value>Robert E. Kahn</value><value> as an "activities center around strategic development of network-based information technologies", including the </value><value>National Information Infrastructure</value><value> (NII) in the </value><value>United States</value><value>.</value><value>[1]</value><value>
</value><value>CNRI develops the </value><value>Handle System</value><value> for managing and locating digital information.</value><value>[2]</value><value>  CNRI obtained </value><value>DARPA</value><value> funding for the development of JPython (</value><value>Jython</value><value>), a Python implementation in and for Java, initially created by </value><value>Jim Hugunin</value><value>.</value><value>[3]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Handle System</value><value>
</value><value>3</value><value> </value><value>D-Lib</value><value>
</value><value>4</value><value> </value><value>Software</value><value>
</value><value>
</value><value>4.1</value><value> </value><value>DO Repository and DO Registry</value><value>
</value><value>4.2</value><value> </value><value>GNU Mailman</value><value>
</value><value>4.3</value><value> </value><value>Python</value><value>
</value><value>
</value><value>
</value><value>5</value><value> </value><value>References</value><value>
</value><value>6</value><value> </value><value>Externale links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>CNRI formerly operated the Secretariat of the </value><value>Internet Engineering Task Force</value><value>.</value><value>[4]</value><value> </value><value>Guido van Rossum</value><value>, pioneer for open source software and creator of Python, at one time worked for this company. The formation and early funding of the </value><value>Internet Society</value><value> were led by CNRI. At the first meeting of the Internet Society board, Vint Cerf, representing CNRI, offered, "In the event a deficit occurs, CNRI has agreed to contribute up to USD102000 to offset it."</value><value>[5]</value><value> In the event, the contribution was not needed. CNRI did cover many of the expenses of the Internet Society in 1992. They also paid Cerf's salary during 1993, when much of his time was devoted to building the Internet Society.</value><value>[6]</value><value>
</value><value>
</value><value>Handle System</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In 1996, the </value><value>Association of American Publishers</value><value> announced that </value><value>R.R. Bowker</value><value> and the CNRI had been selected to design a </value><value>Digital Object Identifier</value><value> system. The effort was initiated after a year-long study of the need for a system to identify electronic copyright ownership and to manage the digital purchase of rights.</value><value>[7]</value><value>  The CNRI Handle system was first demonstrated at a February 1997 meeting of the Professional/Scholarly Publishing (PSP) division of the AAP meeting in Washington, DC.</value><value>[8]</value><value> The </value><value>Handle System</value><value> is a technology specification for assigning, managing, and resolving </value><value>persistent identifiers</value><value> for digital objects and other resources on the Internet. The DONA System is under consideration at the </value><value>ITU</value><value>[9]</value><value> and has been adopted by several countries.</value><value>[10]</value><value>
</value><value>
</value><value>D-Lib</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>D-Lib Magazine</value><value> was an on-line magazine dedicated to digital library research and development, produced by CNRI.
</value><value>
</value><value>Software</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>DO Repository and DO Registry</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>CNRI developed the Digital Object (DO) Repository software, with digital object architecture which provides a mechanism for the creation of, and access to, digital objects as discrete data structures with unique, resolvable identifiers.</value><value>[11]</value><value>
</value><value>
</value><value>GNU Mailman</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GNU Mailman</value><value>
</value><value>
</value><value>Python</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python releases 1.3 through 1.6, see </value><value>Python License</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"About CNRI"</value><value>. </value><value>Corporation for National Research Initiatives</value><value>. </value><value>Archived</value><value> from the original on 23 September 2015</value><value>. Retrieved </value><value>9 November</value><value> 2015</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Handle.net - General FAQs"</value><value>. </value><value>Handle.net</value><value>. Corporation for National Research Initiatives. </value><value>Archived</value><value> from the original on 27 August 2015</value><value>. Retrieved </value><value>9 November</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Rossum, Guido Van (27 January 2009). </value><value>"The History of Python: Personal History - part 2, CNRI and beyond"</value><value>. </value><value>The History of Python</value><value>. Retrieved </value><value>23 September</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Senior Advisory Board Member"</value><value>. </value><value>Northern Virginia Technology Council</value><value>. Retrieved </value><value>15 Apr</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Board Meeting No. 1 - Minutes | Internet Society"</value><value>. </value><value>www.internetsociety.org</value><value>. </value><value>Archived</value><value> from the original on 2017-02-04</value><value>. Retrieved </value><value>2017-02-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>dave. </value><value>"Footnotes to History"</value><value>. </value><value>netpolicynews.com</value><value>. </value><value>Archived</value><value> from the original on 2017-02-04</value><value>. Retrieved </value><value>2017-02-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Reid, Calvin (1996). "Bowker, CNRI to develop digital identifier system". </value><value>Publishers Weekly</value><value> (243(38) p.15).</value><value>
</value><value>
</value><value>^</value><value> </value><value>Simmonds, A.W. (1999). "The digital object identifier (DOI)". </value><value>Publishing Research Quarterly</value><value> (15(2), p. 10-13).</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Lost something on the Internet? Never again with new Digital Object (DO) Architecture"</value><value>. </value><value>The ITU Blog</value><value>. 2014-01-06. </value><value>Archived</value><value> from the original on 2017-02-04</value><value>. Retrieved </value><value>2017-02-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Muvunyi, Steven. </value><value>"New system to enhance digital management"</value><value>. </value><value>The New Times Rwanda</value><value>. </value><value>Archived</value><value> from the original on 2017-02-04</value><value>. Retrieved </value><value>2017-02-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Digital Object (DO) Repository Software"</value><value>. </value><value>Archived</value><value> from the original on 2014-05-17</value><value>. Retrieved </value><value>15 Apr</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>
</value><value>Externale links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Corporation for National Research Initiatives</value><value>
</value><value>D-Lib Magazine</value><value>
</value><value>
</value><value>
</value><value>This article relating to </value><value>library science</value><value> or </value><value>information science</value><value> is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>
</value><value>This article about an IT-related or software-related company or corporation is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 24 September 2018, at 18:13</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Eric_S._Raymond</url><title>Eric S. Raymond</title><text><value>"Eric Raymond" redirects here. For other uses, see </value><value>Eric Raymond (disambiguation)</value><value>.</value><value>
</value><value>This article </value><value>may rely excessively on sources </value><value>too closely associated with the subject</value><value>, potentially preventing the article from being </value><value>verifiable</value><value> and </value><value>neutral</value><value>.</value><value> Please help </value><value>improve it</value><value> by replacing them with more appropriate </value><value>citations</value><value> to </value><value>reliable, independent, third-party sources</value><value>.</value><value>  </value><value>(July 2015)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>
</value><value>
</value><value>Eric S. Raymond</value><value>Raymond at </value><value>Linucon</value><value> 2004</value><value>Born</value><value> (</value><value>1957-12-04</value><value>) </value><value>December 4, 1957</value><value> (age 61)</value><value>Boston, Massachusetts</value><value>Residence</value><value>Pennsylvania</value><value>Nationality</value><value>American</value><value>Alma mater</value><value>University of Pennsylvania</value><value> (dropped out)</value><value>[1]</value><value>Occupation</value><value>Software developer</value><value>, author</value><value>Website</value><value>www</value><value>.catb</value><value>.org</value><value>/esr</value><value>/</value><value>
</value><value>Eric Steven Raymond</value><value> (born December 4, 1957), often referred to as </value><value>ESR</value><value>, is an American </value><value>software developer</value><value>, author of the widely cited</value><value>[2]</value><value> 1997 essay and 1999 book </value><value>The Cathedral and the Bazaar</value><value> and other works, and </value><value>open-source software</value><value> advocate. He wrote a guidebook for the </value><value>Roguelike</value><value> game </value><value>NetHack</value><value>.</value><value>[3]</value><value> In the 1990s, he edited and updated the </value><value>Jargon File</value><value>, currently in print as </value><value>The New Hacker's Dictionary</value><value>.</value><value>[4]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Early life</value><value>
</value><value>2</value><value> </value><value>Career</value><value>
</value><value>3</value><value> </value><value>Views on open source</value><value>
</value><value>4</value><value> </value><value>Political beliefs and activism</value><value>
</value><value>5</value><value> </value><value>Personal life</value><value>
</value><value>6</value><value> </value><value>Bibliography</value><value>
</value><value>
</value><value>6.1</value><value> </value><value>By Eric Raymond</value><value>
</value><value>
</value><value>6.1.1</value><value> </value><value>Books</value><value>
</value><value>6.1.2</value><value> </value><value>Writings posted or archived on his website</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>7</value><value> </value><value>See also</value><value>
</value><value>8</value><value> </value><value>References</value><value>
</value><value>9</value><value> </value><value>Further reading</value><value>
</value><value>10</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Early life</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Raymond was born in </value><value>Boston, Massachusetts</value><value>, in 1957 and lived in Venezuela as a child. His family moved to </value><value>Pennsylvania</value><value> in 1971.</value><value>[5]</value><value> He has suffered from </value><value>cerebral palsy</value><value> since birth; his weakened physical condition motivated him to go into computing.</value><value>[6]</value><value>
</value><value>
</value><value>Career</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Raymond began his programming career writing proprietary software, between 1980 and 1985.</value><value>[1]</value><value> In 1990, noting that the </value><value>Jargon File</value><value> had not been maintained since about 1983, he adopted it; he currently has a third edition in print. </value><value>Paul Dourish</value><value> maintains an archived original version of the Jargon File, because, he says, Raymond's updates "essentially destroyed what held it together."</value><value>[7]</value><value>
</value><value>In 1996 Raymond took over development of the open-source email software "popclient", renaming it to </value><value>Fetchmail</value><value>.</value><value>[8]</value><value> Soon after this experience, in 1997, he wrote the essay "</value><value>The Cathedral and the Bazaar</value><value>", detailing his thoughts on </value><value>open-source software development</value><value> and why it should be done as openly as possible (i.e., the "bazaar" approach). The essay was based in part on his experience in developing Fetchmail. He first presented his thesis at the annual </value><value>Linux Kongress</value><value> on May 27, 1997. He later expanded the essay into a book, </value><value>The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary</value><value>, in 1999. The internal white paper by Frank Hecker that led to the release of the </value><value>Mozilla</value><value> (then </value><value>Netscape</value><value>) source code in 1998 cited </value><value>The Cathedral and the Bazaar</value><value> as "independent validation" of ideas proposed by </value><value>Eric Hahn</value><value> and </value><value>Jamie Zawinski</value><value>.</value><value>[9]</value><value> Hahn would later describe the 1999 book as "clearly influential".</value><value>[10]</value><value>:</value><value>190</value><value>
</value><value>From the late 1990s onward, due in part to the popularity of his essay, Raymond became a prominent voice in the open source movement. He co-founded the </value><value>Open Source Initiative</value><value> in 1998, taking on the self-appointed role of ambassador of </value><value>open source</value><value> to the press, business and public. He remains active in OSI, and stepped down as president of the initiative in February 2005.</value><value>[11]</value><value>  In 1998 Raymond received and published a Microsoft document expressing worry about the quality of rival open-source software.</value><value>[12]</value><value> Eric named this document, together with others subsequently leaked, "</value><value>the </value><value>Halloween Documents</value><value>".
</value><value>In 2000–2002 he wrote a number of </value><value>HOWTOs</value><value> still included in the </value><value>Linux Documentation Project</value><value>[</value><value>citation needed</value><value>]</value><value>. His personal archive also lists a number of non-technical and very early non-Linux FAQs</value><value>[</value><value>citation needed</value><value>]</value><value>. At this time he also created </value><value>CML2</value><value>, a source code configuration system; while originally intended for the </value><value>Linux operating system</value><value>, it was rejected by kernel developers.</value><value>[13]</value><value> Raymond attributed this rejection to "kernel list politics".</value><value>[14]</value><value> </value><value>Linus Torvalds</value><value> on the other hand said in a 2007 mailing list </value><value>post</value><value> that as a matter of policy, the development team preferred more incremental changes. His 2003 book </value><value>The Art of Unix Programming</value><value> discusses user tools for programming and other tasks.
</value><value>Raymond is currently the administrator of the project page for the GPS data tool </value><value>gpsd</value><value>.</value><value>[15]</value><value> Also, some versions of </value><value>NetHack</value><value> include his guide.</value><value>[3]</value><value> He has also contributed code and content to the free software video game </value><value>The Battle for Wesnoth</value><value>.</value><value>[16]</value><value>
</value><value>
</value><value>Views on open source</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Raymond coined an </value><value>aphorism</value><value> he dubbed "</value><value>Linus's Law</value><value>", inspired by </value><value>Linus Torvalds</value><value>: "Given enough eyeballs, all </value><value>bugs</value><value> are shallow".</value><value>[17]</value><value> It first appeared in his book </value><value>The Cathedral and the Bazaar</value><value>.</value><value>[18]</value><value>:</value><value>30</value><value>
</value><value>Raymond has refused to speculate on whether the "bazaar" development model could be applied to works such as books and music, not wanting to "weaken the winning argument for open-sourcing software by tying it to a potential loser".</value><value>[19]</value><value>
</value><value>Raymond has had a number of public </value><value>disputes</value><value> with other figures in the </value><value>free software movement</value><value>. As head of the Open Source Initiative, he argued that advocates should focus on the potential for better products. The "very seductive" moral and ethical rhetoric of </value><value>Richard Stallman</value><value> and the </value><value>Free Software Foundation</value><value> fails, he said, "not because his principles are wrong, but because that kind of language ... simply does not persuade anybody".</value><value>[20]</value><value>
</value><value>In a 2008 essay he "defended the right of programmers to issue work under proprietary licenses because I think that if a programmer wants to write a program and sell it, it's neither my business nor anyone else's but his customer's what the terms of sale are".</value><value>[21]</value><value> In the same essay he also said that the "logic of the system" puts developers into "dysfunctional roles", with bad code the result.
</value><value>
</value><value>Political beliefs and activism</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Raymond is a member of the </value><value>Libertarian Party</value><value>. He is a </value><value>gun rights</value><value> advocate.</value><value>[22]</value><value> He has endorsed the open source firearms organization </value><value>Defense Distributed</value><value>, calling them "friends of freedom" and writing "I approve of any development that makes it more difficult for governments and criminals to monopolize the use of force. As 3D printers become less expensive and more ubiquitous, this could be a major step in the right direction."</value><value>[23]</value><value>[24]</value><value>
</value><value>In 2015 Raymond accused the </value><value>Ada Initiative</value><value> and other </value><value>women in tech</value><value> groups of attempting to entrap male open source leaders and accuse them of rape, saying "Try to avoid even being alone, ever, because there is a chance that a 'women in tech' advocacy group is going to try to collect your scalp."</value><value>[25]</value><value>[26]</value><value>
</value><value>Raymond is also known for claiming that “Gays experimented with unfettered promiscuity in the 1970s and got AIDS as a consequence” and that “Police who react to a random black male behaving suspiciously who might be in the critical age range as though he is an near-imminent lethal threat, are being rational, not racist.”</value><value>[27]</value><value>[28]</value><value> Progressive campaign The Great Slate was successful in raising funds for candidates in part by asking for contributions from tech workers in return for not posting similar quotes by Raymond. </value><value>Matasano Security</value><value> employee and Great Slate fundraiser Thomas Ptacek said, “I’ve been torturing Twitter with lurid Eric S. Raymond quotes for years. Every time I do, 20 people beg me to stop.” It is estimated that as of March 2018 over $30,000 has been raised in this way.</value><value>[29]</value><value>
</value><value>
</value><value>Personal life</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Raymond describes himself as </value><value>neo-pagan</value><value>.</value><value>[6]</value><value>
</value><value>
</value><value>Bibliography</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Hamerly, Jim, Paquin, Tom and Walton, Susan;</value><value> </value><value>Freeing the Source: The Story of Mozilla</value><value>, in </value><value>Open Sources: Voices from the Open Source Revolution</value><value>, O'Reilly, 1999. 280pp, </value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>ISBN</value><value> </value><value>1-56592-582-3</value><value>
</value><value>Wayner, Peter; </value><value>Free for All: How LINUX and the Free Software Movement Undercut the High-Tech Titans</value><value>, HarperCollins, 2000, 340pp, </value><value>ISBN</value><value> </value><value>0-06-662050-3</value><value>
</value><value>Suarez-Potts, Louis;</value><value> </value><value>Interview: Frank Hecker</value><value>, Community Articles, May 1, 2001, www.openoffice.org, OpenOffice website</value><value>
</value><value>Moody, Glyn; </value><value>Rebel Code: Linux and the Open Source Revolution</value><value>, Basic Books 2002, 342pp, </value><value>ISBN</value><value> </value><value>978-0-7382-0333-1</value><value>
</value><value>By Eric Raymond</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Books</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The New Hacker's Dictionary</value><value> (editor) (MIT Press </value><value>ISBN</value><value> </value><value>0-262-68092-0</value><value>) — printed version of the </value><value>Jargon File</value><value> with Raymond listed as the editor.</value><value>
</value><value>The Cathedral and the Bazaar</value><value> (O'Reilly; hardcover </value><value>ISBN</value><value> </value><value>1-56592-724-9</value><value>, October 1999) — includes "</value><value>The Cathedral and the Bazaar</value><value>", "</value><value>Homesteading the Noosphere</value><value>", "</value><value>The Magic Cauldron</value><value>" and </value><value>"Revenge of the Hackers"</value><value>
</value><value>The Art of Unix Programming</value><value> (Addison-Wesley, October 2003; </value><value>ISBN</value><value> </value><value>0-13-142901-9</value><value>)</value><value>
</value><value>Learning GNU Emacs, 3rd Edition</value><value> Cameron, Debra; Elliott, James; Loy, Marc; Raymond, Eric; Rosenblatt, Bill (O'Reilly Media, December 2004; </value><value>ISBN</value><value> </value><value>978-0-596-00648-8</value><value>)</value><value>
</value><value>Writings posted or archived on his website</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The Art of Unix Usability</value><value>, the book about programming and user interface philosophy in UNIX</value><value>
</value><value>How to Ask Questions the Smart Way</value><value>, mirrored on personal site</value><value>
</value><value>Release Early, Release Often</value><value>, excerpt from </value><value>The Cathedral and the Bazaar</value><value>, mirrored on personal site</value><value>
</value><value>Eric Raymond's FAQ collection</value><value>, mirrored on his personal site. Includes links to Linux Documentation Project.</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Open Source Software portal</value><value>
</value><value>Revolution OS</value><value> (film)</value><value>
</value><value>Hacker ethic</value><value>
</value><value>Halloween documents</value><value>
</value><value>Release early, release often</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Raymond, Eric S.</value><value> (January 29, 2003). </value><value>"Resume of Eric Steven Raymond"</value><value>. Retrieved </value><value>November 23,</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Citations for "The Cathedral And The Bazaar</value><value>"</value><value>"</value><value>. ACM Digital Library</value><value>. Retrieved </value><value>10 February</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Raymond, Eric S. (December 8, 2003). </value><value>"A Guide to the Mazes of Menace (Guidebook of Nethack)"</value><value>. </value><value>NetHack.org</value><value>. Retrieved </value><value>December 15,</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S. (October 11, 1996). </value><value>The New Hacker's Dictionary</value><value>. </value><value>ISBN</value><value> </value><value>0-262-68092-0</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Man Against the FUD"</value><value>. Archived from </value><value>the original</value><value> on October 13, 2007</value><value>. Retrieved </value><value>July  7,</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Leonard, Andrew (April 1998). </value><value>"Let my software go!"</value><value>. </value><value>Salon.com</value><value>. San Francisco: </value><value>Salon Media Group</value><value>. Retrieved </value><value>November 23,</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Original Hacker's Dictionary"</value><value>. </value><value>dourish.com</value><value>. Retrieved </value><value>November 5,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Fetchmail"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Suarez-Potts, Louis (2001). </value><value>"Interview: Frank Hecker"</value><value>. Retrieved </value><value>November 5,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Moody, Glyn (2002-07-25). </value><value>Rebel Code: Linux and the Open Source Revolution</value><value>. Basic Books. </value><value>ISBN</value><value> </value><value>0-7382-0670-9</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S. (January 31, 2005). </value><value>"Open Source Initiative (OSI) Announces expanded programs, counsel, AND board"</value><value>. Retrieved </value><value>January 14,</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Harmon, Amy (November 3, 1998). </value><value>"Internal Memo Shows Microsoft Executives' Concern Over Free Software"</value><value>. </value><value>The New York Times</value><value>. Retrieved </value><value>November 5,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"CML2, ESR, &amp; The LKML"</value><value>. </value><value>KernelTrap</value><value>. February 17, 2002. Archived from </value><value>the original</value><value> on August 7, 2007.</value><value>
</value><value>
</value><value>^</value><value> </value><value>McMillan, Rob. </value><value>"Interview: Eric Raymond goes back to basics"</value><value>. </value><value>IBM developerWorks</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GPSD – Summary"</value><value>. </value><value>savannah.nongnu.org</value><value>. Retrieved </value><value>October 30,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"People at Gna!: Eric S. Raymond Profile"</value><value>. </value><value>Gna.org</value><value>. Archived from </value><value>the original</value><value> on March  1, 2017</value><value>. Retrieved </value><value>September 13,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Greenstein, Shane (January 2012). "The Range of Linus' Law". </value><value>IEEE Micro</value><value> (Volume 32, Issue 1). IEEE Computer Society.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S. (1999). </value><value>The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary</value><value>. O'Reilly Media. </value><value>ISBN</value><value> </value><value>1-56592-724-9</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S.</value><value> (2000). </value><value>"Afterword: Beyond Software?"</value><value>. Retrieved </value><value>July 24,</value><value> 2007</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S.</value><value> (July 28, 1999). </value><value>"Shut Up And Show Them The Code"</value><value>. </value><value>Linux Today</value><value>. Retrieved </value><value>July 5,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric S.</value><value> (October 1, 2008). </value><value>"Why I Hate Proprietary Software"</value><value>. Retrieved </value><value>November 5,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Richard Stallman, Free Software, and Copyleft</value><value> 2011</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric</value><value> (August 23, 2012). </value><value>"Defense Distributed"</value><value>. Armed and Dangerous</value><value>. Retrieved </value><value>January 14,</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kopfstein, Janus (April 12, 2013). </value><value>"Guns want to be free: what happens when 3D printing and crypto-anarchy collide?"</value><value>. </value><value>The Verge</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Linus Torvalds targeted by honeytraps, claims Eric S. Raymond"</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Is This Crazy Anti-Feminist Rumor the Platonic Ideal of the Men's-Rights Internet?"</value><value>. </value><value>Select All</value><value>. Retrieved </value><value>2017-11-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric (2002-06-16). </value><value>"The Elephant in the Bath-House"</value><value>. Retrieved </value><value>2018-08-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raymond, Eric (2016-09-24). </value><value>"Dilemmatizing the NRA"</value><value>. Retrieved </value><value>2018-08-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Jeong, Sarah (2018-03-08). </value><value>"Meet the campaign connecting affluent techies with progressive candidates around the country"</value><value>. </value><value>The Verge</value><value>. Retrieved </value><value>2018-03-08</value><value>.</value><value>
</value><value>
</value><value>
</value><value>Further reading</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents&gt;ul{list-style-type:none;margin-left:0}.mw-parser-output .refbegin-hanging-indents&gt;ul&gt;li,.mw-parser-output .refbegin-hanging-indents&gt;dl&gt;dd{margin-left:0;padding-left:3.2em;text-indent:-3.2em;list-style:none}.mw-parser-output .refbegin-100{font-size:100%}</value><value>
</value><value>Byfield, Bruce (December 22, 2015). </value><value>"The Decline and Fall of Eric S. Raymond"</value><value>. </value><value>Linux Magazine</value><value>. Retrieved </value><value>July 15,</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>Eric S. Raymond</value><value>.</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikiquote has quotations related to: </value><value>Eric S. Raymond</value><value>
</value><value>Official website</value><value>
</value><value>Blog ("Armed and Dangerous")</value><value>
</value><value>Works by Eric S. Raymond</value><value> at </value><value>Project Gutenberg</value><value>
</value><value>Works by or about Eric S. Raymond</value><value> at </value><value>Internet Archive</value><value>
</value><value>Eric S. Raymond</value><value> on </value><value>IMDb</value><value> </value><value>
</value><value>v</value><value>t</value><value>e</value><value>Notable contributors to the </value><value>Linux operating system</value><value>Kernel</value><value>
</value><value>H. Peter Anvin</value><value>
</value><value>Jens Axboe</value><value>
</value><value>Andries Brouwer</value><value>
</value><value>Rémy Card</value><value>
</value><value>Arnaldo Carvalho de Melo</value><value>
</value><value>Alan Cox</value><value>
</value><value>Kristoffer Ericson</value><value>
</value><value>Matthew Garrett</value><value>
</value><value>Michael Kerrisk</value><value>
</value><value>Con Kolivas</value><value>
</value><value>Greg Kroah-Hartman</value><value>
</value><value>Robert Love</value><value>
</value><value>David S. Miller</value><value>
</value><value>Ingo Molnár</value><value>
</value><value>Andrew Morton</value><value>
</value><value>Keith Packard</value><value>
</value><value>Hans Reiser</value><value>
</value><value>Rusty Russell</value><value>
</value><value>Sage Sharp</value><value>
</value><value>Linus Torvalds</value><value>
</value><value>Theodore Ts'o</value><value>
</value><value>Stephen Tweedie</value><value>
</value><value>Sage Weil</value><value>
</value><value>Harald Welte</value><value>
</value><value>Chris Wright</value><value>
</value><value>GNU</value><value>
</value><value>Loïc Dachary</value><value>
</value><value>Alexandre Oliva</value><value>
</value><value>Richard Stallman</value><value>
</value><value>Michael Tiemann</value><value>
</value><value>Distributions</value><value>
</value><value>Gaël Duval</value><value>
</value><value>Marc Ewing</value><value>
</value><value>Benjamin Mako Hill</value><value>
</value><value>Peter MacDonald</value><value>
</value><value>Ian Murdock</value><value>
</value><value>Daniel Robbins</value><value>
</value><value>Jane Silber</value><value>
</value><value>Mark Shuttleworth</value><value>
</value><value>Patrick Volkerding</value><value>
</value><value>Bob Young</value><value>
</value><value>Other developers</value><value>
</value><value>Timothee Besset</value><value>
</value><value>Matthias Ettrich</value><value>
</value><value>Olivier Fourdan</value><value>
</value><value>Mark Galassi</value><value>
</value><value>Jim Gettys</value><value>
</value><value>Ryan C. Gordon</value><value>
</value><value>Harald Hoyer</value><value>
</value><value>Miguel de Icaza</value><value>
</value><value>Havoc Pennington</value><value>
</value><value>Lennart Poettering</value><value>
</value><value>Michael Simms</value><value>
</value><value>Kay Sievers</value><value>
</value><value>Dave Taylor</value><value>
</value><value>Jeff Waugh</value><value>
</value><value>Advocates</value><value>
</value><value>Valerie Aurora</value><value>
</value><value>Donna Benjamin</value><value>
</value><value>Ken Coar</value><value>
</value><value>Mary Gardiner</value><value>
</value><value>Jon Hall</value><value>
</value><value>Federico Heinz</value><value>
</value><value>Bradley M. Kuhn</value><value>
</value><value>Bruce Perens</value><value>
</value><value>Eric S. Raymond</value><value>
</value><value>Others</value><value>
</value><value>Pia Andrews</value><value>
</value><value>Jono Bacon</value><value>
</value><value>Keith Bergelt</value><value>
</value><value>Pamela Jones</value><value>
</value><value>Allison Randal</value><value>
</value><value>Karen Sandler</value><value>
</value><value>Dave Sifry</value><value>
</value><value>Luis Villa</value><value>
</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>BNF</value><value>: </value><value>cb12473713k</value><value> </value><value>(data)</value><value>
</value><value>GND</value><value>: </value><value>114853967</value><value>
</value><value>ISNI</value><value>: </value><value>0000 0001 0904 1835</value><value>
</value><value>LCCN</value><value>: </value><value>n91042870</value><value>
</value><value>NDL</value><value>: </value><value>00515726</value><value>
</value><value>NKC</value><value>: </value><value>jn20020721375</value><value>
</value><value>SELIBR</value><value>: </value><value>318745</value><value>
</value><value>SNAC</value><value>: </value><value>w6gz9pfb</value><value>
</value><value>SUDOC</value><value>: </value><value>03393004X</value><value>
</value><value>VIAF</value><value>: </value><value>56710384</value><value>
</value><value> </value><value>WorldCat Identities</value><value>: </value><value>56710384</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 13 December 2018, at 01:44</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Eric_Allman</url><title>Eric Allman</title><text><value>Eric Paul Allman</value><value>Born</value><value> (</value><value>1955-09-02</value><value>) </value><value>September 2, 1955</value><value> (age 63)</value><value>El Cerrito, California</value><value>Education</value><value>University of California, Berkeley</value><value>Occupation</value><value>Programmer</value><value>Employer</value><value>Sendmail</value><value>Known for</value><value>Sendmail</value><value>Title</value><value>Chief Science Officer</value><value>Spouse(s)</value><value>Marshall Kirk McKusick</value><value>
</value><value>Eric Paul Allman</value><value> (born September 2, 1955) is an American computer programmer who  developed </value><value>sendmail</value><value> and its precursor </value><value>delivermail</value><value> in the late 1970s and early 1980s at </value><value>UC Berkeley</value><value>. In 1998, Allman and Greg Olson co-founded the company </value><value>Sendmail, Inc.</value><value>[1]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Education and training</value><value>
</value><value>2</value><value> </value><value>Sendmail and Syslog</value><value>
</value><value>3</value><value> </value><value>Other contributions</value><value>
</value><value>4</value><value> </value><value>Personal life</value><value>
</value><value>5</value><value> </value><value>References</value><value>
</value><value>6</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Education and training</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Born in </value><value>El Cerrito, California</value><value>, Allman knew from an early age that he wanted to work in computing, breaking into his high school's </value><value>mainframe</value><value> and later using the UC Berkeley computing center for his computing needs. In 1973, he entered UC Berkeley, just as the </value><value>Unix</value><value> operating system began to become popular in academic circles.</value><value>[2]</value><value>  He earned B.S. and M.S. degrees from UC Berkeley in 1977 and 1980 respectively.
</value><value>
</value><value>Sendmail and Syslog</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>As the Unix source code was available at Berkeley, the local </value><value>hackers</value><value> quickly made many extensions to the </value><value>AT&amp;T</value><value> code. One such extension was </value><value>delivermail</value><value>, which in 1981 turned into </value><value>sendmail</value><value>.  As an </value><value>MTA</value><value>, it was designed to deliver </value><value>email</value><value> over the still relatively small (as compared to today's Internet) </value><value>ARPANET</value><value>, which consisted of many smaller networks with vastly differing formats for e-mail headers.
</value><value>Sendmail soon became an important part of  the </value><value>Berkeley Software Distribution</value><value> (BSD) and it used to be the most widely used </value><value>MTA</value><value> on Unix based systems, despite its somewhat complex configuration syntax and frequent abuse by Internet telemarketing firms. In 1998, Allman and Greg Olson founded </value><value>Sendmail, Inc.</value><value>, headquartered in </value><value>Emeryville, California</value><value>, to do </value><value>proprietary</value><value> work on improving </value><value>sendmail</value><value>.
</value><value>The logging format used by the MTA, known as </value><value>syslog</value><value>, was at first used solely by sendmail, but eventually became an unofficial standard format used by other unrelated programs for logging. Later, this format was made official by </value><value>RFC 3164</value><value> in 2001; however, the original format has been made obsolete by the most recent revision, </value><value>RFC 5424</value><value>.
</value><value>
</value><value>Other contributions</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Allman is credited with popularizing the </value><value>Allman indent style</value><value>, also known as BSD indent style.</value><value>[3]</value><value>
</value><value>He was awarded the Telluride Tech Festival Award of Technology in August, 2006 in </value><value>Telluride, Colorado</value><value>,</value><value>[4]</value><value> and in 2009 he was recognized as a Distinguished Engineer by the </value><value>Association for Computing Machinery</value><value>.</value><value>[5]</value><value> In April 2014 he was inducted into the Internet Hall of Fame.</value><value>[6]</value><value>
</value><value>
</value><value>Personal life</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Allman, who is openly gay, lives in </value><value>Berkeley, California</value><value>, with </value><value>Marshall Kirk McKusick</value><value>, who was his partner for more than 30 years before they married in October, 2013.</value><value>[7]</value><value> McKusick is a lead developer of BSD; the two first met in graduate school.</value><value>[8]</value><value>
</value><value>
</value><value>.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}</value><value>There is some sort of perverse pleasure in knowing that it's basically impossible to send a piece of hate mail through the Internet without its being touched by a gay program. That's kind of funny.</value><value>[9]</value><value>— </value><value>Eric Allman</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Sendmail, Inc Company Information"</value><value>. Archived from </value><value>the original</value><value> on 15 January 2013</value><value>. Retrieved </value><value>13 January</value><value> 2013</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>Leonard, Andrew. </value><value>"You've got sendmail"</value><value>. Salon.com. Archived from </value><value>the original</value><value> on 2007-06-30</value><value>. Retrieved </value><value>2007-08-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Indent style"</value><value>. </value><value>The Jargon File</value><value>. Retrieved </value><value>2007-08-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Sendmail.com - event details"</value><value>. Sendmail, Inc. 2006-08-10</value><value>. Retrieved </value><value>2007-08-20</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"ACM Names 84 Distinguished Members for Advances in Computing Technology"</value><value>. Association for Computing Machinery. Archived from </value><value>the original</value><value> on 14 January 2010</value><value>. Retrieved </value><value>27 December</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Inductees – Eric Allman"</value><value>. </value><value>Internet Hall of Fame</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>McKusick, Kirk. </value><value>"Kirk McKusick's Family and Friends"</value><value>. </value><value>mckusick.com</value><value>. Marshall Kirk McKusick</value><value>. Retrieved </value><value>14 March</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Friess, Steve (3 March 1998). </value><value>"What a connection - gay couple's contributions to information technology - Special Cyber Report"</value><value>. </value><value>The Advocate</value><value>. </value><value>Scholar search</value><value>. Archived from </value><value>the original</value><value> on 16 December 2004</value><value>. Retrieved </value><value>2007-09-24</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>["The Advocate", 3 Mar 1998, p41]</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Homepage as of 2010-10-29</value><value>
</value><value>Linkedin.com profile</value><value>
</value><value>Former homepage at Berkeley</value><value>
</value><value>Former homePage for Eric Allman (at Sendmail.org)</value><value> at the </value><value>Wayback Machine</value><value> (archive index)</value><value>
</value><value>You've got Sendmail</value><value>, </value><value>Salon</value><value> article about sendmail going commercial (December 1998)</value><value>
</value><value>Biography at Sendmail.com (see "Chief Science Officer")</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Internet Hall of Fame</value><value>Pioneers</value><value>2012</value><value>
</value><value>Paul Baran</value><value>
</value><value>Vint Cerf</value><value>
</value><value>Danny Cohen</value><value>
</value><value>Steve Crocker</value><value>
</value><value>Donald Davies</value><value>
</value><value>Elizabeth J. Feinler</value><value>
</value><value>Charles Herzfeld</value><value>
</value><value>Robert Kahn</value><value>
</value><value>Peter T. Kirstein</value><value>
</value><value>Leonard Kleinrock</value><value>
</value><value>John Klensin</value><value>
</value><value>Jon Postel</value><value>
</value><value>Louis Pouzin</value><value>
</value><value>Lawrence Roberts</value><value>
</value><value>2013</value><value>
</value><value>David Clark</value><value>
</value><value>David Farber</value><value>
</value><value>Howard Frank</value><value>
</value><value>Kanchana Kanchanasut</value><value>
</value><value>J. C. R. Licklider</value><value>
</value><value>Bob Metcalfe</value><value>
</value><value>Jun Murai</value><value>
</value><value>Kees Neggers</value><value>
</value><value>Nii Quaynor</value><value>
</value><value>Glenn Ricart</value><value>
</value><value>Robert Taylor</value><value>
</value><value>Stephen Wolff</value><value>
</value><value>Werner Zorn</value><value>
</value><value>2014</value><value>
</value><value>Douglas Engelbart</value><value>
</value><value>Susan Estrada</value><value>
</value><value>Frank Heart</value><value>
</value><value>Dennis Jennings</value><value>
</value><value>Rolf Nordhagen</value><value>
</value><value>Radia Perlman</value><value>
</value><value>Global connectors</value><value>2012</value><value>
</value><value>Randy Bush</value><value>
</value><value>Kilnam Chon</value><value>
</value><value>Al Gore</value><value>
</value><value>Nancy Hafkin</value><value>
</value><value>Geoff Huston</value><value>
</value><value>Brewster Kahle</value><value>
</value><value>Daniel Karrenberg</value><value>
</value><value>Toru Takahashi</value><value>
</value><value>Tan Tin Wee</value><value>
</value><value>2013</value><value>
</value><value>Karen Banks</value><value>
</value><value>Gihan Dias</value><value>
</value><value>Anriette Esterhuysen</value><value>
</value><value>Steve Goldstein</value><value>
</value><value>Teus Hagen</value><value>
</value><value>Ida Holz</value><value>
</value><value>Qiheng Hu</value><value>
</value><value>Haruhisa Ishida</value><value>
</value><value>Barry Leiner</value><value>
</value><value>George Sadowsky</value><value>
</value><value>2014</value><value>
</value><value>Dai Davies</value><value>
</value><value>Demi Getschko</value><value>
</value><value>Masaki Hirabaru</value><value>
</value><value>Erik Huizer</value><value>
</value><value>Steve Huter</value><value>
</value><value>Abhaya Induruwa</value><value>
</value><value>Dorcas Muthoni</value><value>
</value><value>Mahabir Pun</value><value>
</value><value>Srinivasan Ramani</value><value>
</value><value>Michael Roberts</value><value>
</value><value>Ben Segal</value><value>
</value><value>Douglas Van Houweling</value><value>
</value><value>2017</value><value>
</value><value>Nabil Bukhalid</value><value>
</value><value>Ira Fuchs</value><value>
</value><value>Shigeki Goto</value><value>
</value><value>Mike Jensen</value><value>
</value><value>Ermanno Pietrosemoli</value><value>
</value><value>Tadao Takahashi</value><value>
</value><value>Florencio Utreras</value><value>
</value><value>Jianping Wu</value><value>
</value><value>Innovators</value><value>2012</value><value>
</value><value>Mitchell Baker</value><value>
</value><value>Tim Berners-Lee</value><value>
</value><value>Robert Cailliau</value><value>
</value><value>Van Jacobson</value><value>
</value><value>Lawrence Landweber</value><value>
</value><value>Paul Mockapetris</value><value>
</value><value>Craig Newmark</value><value>
</value><value>Ray Tomlinson</value><value>
</value><value>Linus Torvalds</value><value>
</value><value>Phil Zimmermann</value><value>
</value><value>2013</value><value>
</value><value>Marc Andreessen</value><value>
</value><value>John Perry Barlow</value><value>
</value><value>Francois Fluckiger</value><value>
</value><value>Stephen Kent</value><value>
</value><value>Anne-Marie Eklund Löwinder</value><value>
</value><value>Henning Schulzrinne</value><value>
</value><value>Richard Stallman</value><value>
</value><value>Aaron Swartz</value><value>
</value><value>Jimmy Wales</value><value>
</value><value>2014</value><value>
</value><value>Eric Allman</value><value>
</value><value>Eric Bina</value><value>
</value><value>Karlheinz Brandenburg</value><value>
</value><value>John Cioffi</value><value>
</value><value>Hualin Qian</value><value>
</value><value>Paul Vixie</value><value>
</value><value>2017</value><value>
</value><value>Jaap Akkerhuis</value><value>
</value><value>Yvonne Marie Andres</value><value>
</value><value>Alan Emtage</value><value>
</value><value>Ed Krol</value><value>
</value><value>Tracy LaQuey Parker</value><value>
</value><value>Craig Partridge</value><value>
</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>ACM DL</value><value>: </value><value>81100018165</value><value>
</value><value>BIBSYS</value><value>: </value><value>90725877</value><value>
</value><value>BNF</value><value>: </value><value>cb134867725</value><value> </value><value>(data)</value><value>
</value><value>DBLP</value><value>: </value><value>71/1984</value><value>
</value><value>GND</value><value>: </value><value>1110996977</value><value>
</value><value>ISNI</value><value>: </value><value>0000 0001 1631 5849</value><value>
</value><value>LCCN</value><value>: </value><value>no94026112</value><value>
</value><value>NDL</value><value>: </value><value>00618775</value><value>
</value><value>SUDOC</value><value>: </value><value>035671580</value><value>
</value><value>VIAF</value><value>: </value><value>44451290</value><value>
</value><value> </value><value>WorldCat Identities</value><value>: </value><value>44451290</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 23 October 2018, at 18:34</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Ken_Manheimer</url><title>Ken Manheimer</title><text><value>Ken Manheimer</value><value> has been a prominent software developer of </value><value>Zope</value><value> and </value><value>GNU Mailman</value><value> who worked for </value><value>NIST</value><value>, </value><value>CNRI</value><value>, Digital Creations and </value><value>Zope Corporation</value><value>, and </value><value>SpiderOak</value><value>. He's been listed by </value><value>Guido van Rossum</value><value> together with </value><value>Barry Warsaw</value><value> as the probable inventor of the term </value><value>Benevolent Dictator For Life</value><value> (during his CNRI tenure).</value><value>[1]</value><value>
</value><value>
</value><value>Famous Quotes</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"computers usefulness is ridiculously improbable.  you can quote me."</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Origin of BDFL"</value><value>. </value><value>Archived</value><value> from the original on 2010-12-20.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>
</value><value>"Feasting on life with veteran programmer Ken Manheimer"</value><value>.</value><value>
</value><value>"An Interview with Paul Everitt and Ken Manheimer of Digital Creations, publishers of Zope"</value><value>.</value><value>
</value><value>This biographical article relating to a computer specialist is a </value><value>stub</value><value>. You can help Wikipedia by </value><value>expanding it</value><value>.</value><value>v</value><value>t</value><value>e</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 8 December 2017, at 10:45</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Fork_(system_call)</url><title>Fork (system call)</title><text><value>In </value><value>computing</value><value>, particularly in the context of the </value><value>Unix</value><value> operating system and its </value><value>workalikes</value><value>, </value><value>fork</value><value> is an operation whereby a </value><value>process</value><value> creates a copy of itself. It is usually a </value><value>system call</value><value>, implemented in the </value><value>kernel</value><value>. Fork is the primary (and historically, only) method of process creation on Unix-like operating systems.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Overview</value><value>
</value><value>2</value><value> </value><value>History</value><value>
</value><value>3</value><value> </value><value>Communication</value><value>
</value><value>4</value><value> </value><value>Variants</value><value>
</value><value>
</value><value>4.1</value><value> </value><value>Vfork</value><value>
</value><value>4.2</value><value> </value><value>Rfork</value><value>
</value><value>4.3</value><value> </value><value>Clone</value><value>
</value><value>
</value><value>
</value><value>5</value><value> </value><value>Forking in other operating systems</value><value>
</value><value>6</value><value> </value><value>Application usage</value><value>
</value><value>7</value><value> </value><value>See also</value><value>
</value><value>8</value><value> </value><value>References</value><value>
</value><value>
</value><value>

</value><value>Overview</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In multitasking operating systems, processes (running programs) need a way to create new processes, e.g. to run other programs. Fork and its variants are typically the only way of doing so in Unix-like systems. For a process to start the execution of a different program, it first forks to create a copy of itself. Then, the copy, called the "</value><value>child process</value><value>", calls the </value><value>exec</value><value> system call to overlay itself with the other program: it ceases execution of its former program in favor of the other.
</value><value>The fork operation creates a separate </value><value>address space</value><value> for the child. The child process has an exact copy of all the memory segments of the parent process. In modern UNIX variants that follow the </value><value>virtual memory</value><value> model from SunOS-4.0, </value><value>copy-on-write</value><value> semantics are implemented and the physical memory need not be actually copied. Instead, </value><value>virtual memory pages</value><value> in both processes may refer to the same pages of </value><value>physical memory</value><value> until one of them writes to such a page: then it is copied. This optimization is important in the common case where fork is used in conjunction with exec to execute a new program: typically, the child process performs only a small set of actions before it ceases execution of its program in favour of the program to be started, and it requires very few, if any, of its parent's </value><value>data structures</value><value>.
</value><value>When a process calls fork, it is deemed the </value><value>parent process</value><value> and the newly created process is its child. After the fork, both processes not only run the same program, but they resume execution as though both had called the system call. They can then inspect the call's </value><value>return value</value><value> to determine their status, child or parent, and act accordingly.
</value><value>
</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>One of the earliest references to a fork concept appeared in </value><value>A Multiprocessor System Design</value><value> by </value><value>Melvin Conway</value><value>, published in 1962</value><value>[1]</value><value>. Conway's paper motivated the implementation by </value><value>L. Peter Deutsch</value><value> of fork in the </value><value>GENIE time-sharing system</value><value>, where the concept was borrowed by </value><value>Ken Thompson</value><value> for its earliest appearance</value><value>[2]</value><value> in </value><value>Research Unix</value><value>[3]</value><value>[4]</value><value>. Fork later became a standard interface in </value><value>POSIX</value><value>.</value><value>[5]</value><value>
</value><value>
</value><value>Communication</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The child process starts off with a copy of its parent's </value><value>file descriptors</value><value>.</value><value>[5]</value><value> For interprocess communication, the parent process will often create a pipe or several pipes, and then after forking the processes will close the ends of the pipes that they don't need.</value><value>[6]</value><value>
</value><value>
</value><value>Variants</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Vfork</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Vfork is a variant of fork with the same </value><value>calling convention</value><value> and much the same semantics, but only to be used in restricted situations. It originated in the </value><value>3BSD</value><value> version of Unix,</value><value>[7]</value><value>[8]</value><value>[9]</value><value> the first Unix to support virtual memory. It was standardized by POSIX, which permitted vfork to have exactly the same behavior as fork, but was marked obsolescent in the 2004 edition</value><value>[10]</value><value> and was replaced by </value><value>posix_spawn</value><value>() (which is typically implemented via vfork) in subsequent editions.
</value><value>When a vfork system call is issued, the parent process will be suspended until the child process has either completed execution or been replaced with a new executable image via one of the "</value><value>exec</value><value>" family of system calls. The child borrows the MMU setup from the parent and memory pages are shared among the parent and child process with no copying done, and in particular with no </value><value>copy-on-write</value><value> semantics;</value><value>[10]</value><value> hence, if the child process makes a modification in any of the shared pages, no new page will be created and the modified pages are visible to the parent process too. Since there is absolutely no page copying involved (consuming additional memory), this technique is an optimization over plain fork in full-copy environments when used with exec. In POSIX, using vfork for any purpose except as a prelude to an immediate call to a function from the exec family (and a select few other operations) gives rise to </value><value>undefined behavior</value><value>.</value><value>[10]</value><value> As with vfork, the child borrows data structures rather than copying them, vfork is still faster than a fork that uses copy on write semantics.
</value><value>System V</value><value> did not support this function call before System VR4 was introduced,</value><value>[</value><value>citation needed</value><value>]</value><value> because the memory sharing that it causes is error-prone:
</value><value>
</value><value>.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}</value><value>Vfork</value><value> does not copy page tables so it is faster than the System V </value><value>fork</value><value> implementation. But the child process executes in the same physical address space as the parent process (until an </value><value>exec</value><value> or </value><value>exit</value><value>) and can thus overwrite the parent's data and stack. A dangerous situation could arise if a programmer uses </value><value>vfork</value><value> incorrectly, so the onus for calling </value><value>vfork</value><value> lies with the programmer. The difference between the System V approach and the BSD approach is philosophical: Should the kernel hide idiosyncrasies of its implementation from users, or should it allow sophisticated users the opportunity to take advantage of the implementation to do a logical function more efficiently?</value><value>— </value><value>Maurice J. Bach</value><value>[11]</value><value>
</value><value>
</value><value>Similarly, the Linux man page for vfork strongly discourages its use:</value><value>[7]</value><value>
</value><value>
</value><value>It is rather unfortunate that Linux revived this specter from the past. The BSD man page states: "This system call will be eliminated when proper system sharing mechanisms are  implemented. Users should not depend on the memory sharing semantics of vfork() as it will, in that case, be made synonymous to fork(2)."
</value><value>
</value><value>Other problems with </value><value>.mw-parser-output .monospaced{font-family:monospace,monospace}</value><value>vfork</value><value> include </value><value>deadlocks</value><value> that might occur in </value><value>multi-threaded</value><value> programs due to interactions with </value><value>dynamic linking</value><value>.</value><value>[12]</value><value> As a replacement for the </value><value>vfork</value><value> interface, POSIX introduced the </value><value>posix_spawn</value><value> family of functions that combine the actions of fork and exec. These functions may be implemented as library routines in terms of </value><value>fork</value><value>, as is done in Linux,</value><value>[12]</value><value> or in terms of </value><value>vfork</value><value> for better performance, as is done in Solaris,</value><value>[12]</value><value>[13]</value><value> but the POSIX specification notes that they were "designed as </value><value>kernel operations</value><value>", especially for operating systems running on constrained hardware and </value><value>real-time systems</value><value>.</value><value>[14]</value><value>
</value><value>While the 4.4BSD implementation got rid of the vfork implementation, causing vfork to have the same behavior as fork, it was later reinstated in the </value><value>NetBSD</value><value> operating system for performance reasons.</value><value>[8]</value><value>
</value><value>Some embedded operating systems such as </value><value>uClinux</value><value> omit fork and only implement vfork, because they need to operate on devices where copy-on-write is impossible to implement due to lack of an </value><value>MMU</value><value>.
</value><value>
</value><value>Rfork</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The </value><value>Plan 9</value><value> operating system, created by the designers of Unix, includes fork but also a variant called "rfork" that permits fine-grained sharing of resources between parent and child processes, including the address space (except for a </value><value>stack</value><value> segment, which is unique to each process), </value><value>environment variables</value><value> and the filesystem namespace;</value><value>[15]</value><value> this makes it a unified interface for the creation of both processes and </value><value>threads</value><value> within them.</value><value>[16]</value><value> Both </value><value>FreeBSD</value><value>[17]</value><value> and </value><value>IRIX</value><value> adopted the rfork system call from Plan 9, the latter renaming it "sproc".</value><value>[18]</value><value>
</value><value>
</value><value>
</value><value>Clone</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"clone" is a system call in the </value><value>Linux kernel</value><value> that creates a child process that may share parts of its execution </value><value>context</value><value> with the parent. Like FreeBSD's rfork and IRIX's sproc, Linux's clone was inspired by Plan 9's rfork and can be used to implement threads (though application programmers will typically use a higher-level interface such as </value><value>pthreads</value><value>, implemented on top of clone). The "separate stacks" feature from Plan 9 and IRIX has been omitted because (according to </value><value>Linus Torvalds</value><value>) it causes too much overhead.</value><value>[18]</value><value>
</value><value>
</value><value>Forking in other operating systems</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>This section </value><value>relies largely or entirely on a single </value><value>source</value><value>.</value><value> Relevant discussion may be found on the </value><value>talk page</value><value>. Please help </value><value>improve this article</value><value> by introducing </value><value>citations</value><value> to additional sources.</value><value>  </value><value>(February 2015)</value><value>
</value><value>In the original design of the </value><value>VMS</value><value> operating system (1977), a copy operation with subsequent mutation of the content of a few specific addresses for the new process as in forking was considered risky.</value><value>[</value><value>citation needed</value><value>]</value><value> Errors in the current process state may be copied to a child process. Here, the metaphor of process spawning is used: each component of the memory layout of the new process is newly constructed from scratch. The </value><value>spawn</value><value> metaphor was later adopted in Microsoft operating systems (1993).
</value><value>The POSIX-compatibility component of </value><value>VM/CMS</value><value> (OpenExtensions) provides a very limited implementation of fork, in which the parent is suspended while the child executes, and the child and the parent share the same address space.</value><value>[19]</value><value> This is essentially a </value><value>vfork</value><value> labelled as a </value><value>fork</value><value>. (Note this applies to the CMS guest operating system only; other VM guest operating systems, such as Linux, provide standard fork functionality.)
</value><value>
</value><value>Application usage</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The following variant of the </value><value>Hello World</value><value> program demonstrates the mechanics of the </value><value>fork</value><value> system call in the </value><value>C</value><value> programming language. The program forks into two processes, each deciding what functionality they perform based on the return value of the fork system call. </value><value>Boilerplate code</value><value> such as </value><value>header inclusions</value><value> has been omitted.
</value><value>
</value><value>int</value><value> </value><value>main</value><value>(</value><value>void</value><value>)</value><value>
</value><value>{</value><value>
   </value><value>pid_t</value><value> </value><value>pid</value><value> </value><value>=</value><value> </value><value>fork</value><value>();</value><value>

   </value><value>if</value><value> </value><value>(</value><value>pid</value><value> </value><value>==</value><value> </value><value>-</value><value>1</value><value>)</value><value> </value><value>{</value><value>
      </value><value>perror</value><value>(</value><value>"fork failed"</value><value>);</value><value>
      </value><value>exit</value><value>(</value><value>EXIT_FAILURE</value><value>);</value><value>
   </value><value>}</value><value>
   </value><value>else</value><value> </value><value>if</value><value> </value><value>(</value><value>pid</value><value> </value><value>==</value><value> </value><value>0</value><value>)</value><value> </value><value>{</value><value>
      </value><value>printf</value><value>(</value><value>"Hello from the child process!</value><value>\n</value><value>"</value><value>);</value><value>
      </value><value>_exit</value><value>(</value><value>EXIT_SUCCESS</value><value>);</value><value>
   </value><value>}</value><value>
   </value><value>else</value><value> </value><value>{</value><value>
      </value><value>int</value><value> </value><value>status</value><value>;</value><value>
      </value><value>(</value><value>void</value><value>)</value><value>waitpid</value><value>(</value><value>pid</value><value>,</value><value> </value><value>&amp;</value><value>status</value><value>,</value><value> </value><value>0</value><value>);</value><value>
   </value><value>}</value><value>
   </value><value>return</value><value> </value><value>EXIT_SUCCESS</value><value>;</value><value>
</value><value>}</value><value>
</value><value>
</value><value>What follows is a dissection of this program.
</value><value>
</value><value>   </value><value>pid_t</value><value> </value><value>pid</value><value> </value><value>=</value><value> </value><value>fork</value><value>();</value><value>
</value><value>
</value><value>The first statement in </value><value>main</value><value> calls the </value><value>fork</value><value> system call to split execution into two processes. The return value of </value><value>fork</value><value> is recorded in a variable of type </value><value>pid_t</value><value>, which is the POSIX type for process identifiers (PIDs).
</value><value>
</value><value>   </value><value>if</value><value> </value><value>(</value><value>pid</value><value> </value><value>==</value><value> </value><value>-</value><value>1</value><value>)</value><value> </value><value>{</value><value>
      </value><value>perror</value><value>(</value><value>"fork failed"</value><value>);</value><value>
      </value><value>exit</value><value>(</value><value>EXIT_FAILURE</value><value>);</value><value>
   </value><value>}</value><value>
</value><value>
</value><value>Minus one indicates an error in </value><value>fork</value><value>: no new process was created, so an error message is printed.
</value><value>If </value><value>fork</value><value> was successful, then there are now two processes, both executing the </value><value>main</value><value> function from the point where </value><value>fork</value><value> has returned. To make the processes perform different tasks, the program must </value><value>branch</value><value> on the return value of </value><value>fork</value><value> to determine whether it is executing as the </value><value>child</value><value> process or the </value><value>parent</value><value> process.
</value><value>
</value><value>   </value><value>else</value><value> </value><value>if</value><value> </value><value>(</value><value>pid</value><value> </value><value>==</value><value> </value><value>0</value><value>)</value><value> </value><value>{</value><value>
      </value><value>printf</value><value>(</value><value>"Hello from the child process!</value><value>\n</value><value>"</value><value>);</value><value>
      </value><value>_exit</value><value>(</value><value>EXIT_SUCCESS</value><value>);</value><value>
   </value><value>}</value><value>
</value><value>
</value><value>In the child process, the return value appears as zero (which is an invalid process identifier). The child process prints the desired greeting message, then exits. (For technical reasons, the POSIX </value><value>_exit</value><value> function must be used here instead of the C standard </value><value>exit</value><value> function.)
</value><value>
</value><value>   </value><value>else</value><value> </value><value>{</value><value>
      </value><value>int</value><value> </value><value>status</value><value>;</value><value>
      </value><value>(</value><value>void</value><value>)</value><value>waitpid</value><value>(</value><value>pid</value><value>,</value><value> </value><value>&amp;</value><value>status</value><value>,</value><value> </value><value>0</value><value>);</value><value>
   </value><value>}</value><value>
</value><value>
</value><value>The other process, the parent, receives from </value><value>fork</value><value> the process identifier of the child, which is always a positive number. The parent process passes this identifier to the </value><value>waitpid</value><value> system call to suspend execution until the child has exited. When this has happened, the parent resumes execution and exits by means of the </value><value>return</value><value> statement.
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Fork bomb</value><value>
</value><value>Fork–exec</value><value>
</value><value>exit (system call)</value><value>
</value><value>wait (system call)</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>Nyman, Linus (25 August 2016). </value><value>"Notes on the History of Fork and Join"</value><value>. </value><value>computer.org</value><value>. Retrieved </value><value>11 November</value><value> 2018</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"s3.s from Research UNIX"</value><value>. </value><value>GitHub</value><value>. 1970.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Ken Thompson</value><value> and </value><value>Dennis Ritchie</value><value> (3 November 1971). </value><value>"SYS FORK (II)"</value><value> </value><value>(PDF)</value><value>. </value><value>UNIX Programmer's Manual</value><value>. </value><value>Bell Laboratories</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Ritchie, Dennis M.</value><value>; Thompson, Ken (July 1978). </value><value>"The UNIX Time-Sharing System"</value><value> </value><value>(PDF)</value><value>. </value><value>Bell System Tech. J</value><value>. AT&amp;T. </value><value>57</value><value> (6): 1905–1929. </value><value>doi</value><value>:</value><value>10.1002/j.1538-7305.1978.tb02136.x</value><value>. Retrieved </value><value>22 April</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>fork</value><value> – System Interfaces Reference, </value><value>The Single UNIX Specification</value><value>, Issue 7 from </value><value>The Open Group</value><value>
</value><value>
</value><value>^</value><value> </value><value>pipe</value><value> – System Interfaces Reference, </value><value>The Single UNIX Specification</value><value>, Issue 7 from </value><value>The Open Group</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>vfork(2)</value><value> – </value><value>Linux</value><value> Programmer's </value><value>Manual</value><value> – System Calls</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"NetBSD Documentation: Why implement traditional vfork()"</value><value>. </value><value>NetBSD Project</value><value>. Retrieved </value><value>16 October</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"vfork(2)". </value><value>UNIX Programmer's Manual, Virtual VAX-11 Version</value><value>. University of California, Berkeley. December 1979.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>vfork</value><value> – System Interfaces Reference, </value><value>The Single UNIX® Specification</value><value>, Issue 6 from </value><value>The Open Group</value><value>
</value><value>
</value><value>^</value><value> </value><value>Bach, Maurice J. (1986). </value><value>The Design of The UNIX Operating System</value><value>. Prentice–Hall. pp. 291–292.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Nakhimovsky, Greg (2006). </value><value>"Minimizing Memory Usage for Creating Application Subprocesses"</value><value>. </value><value>Oracle Technology Network</value><value>. </value><value>Oracle Corporation</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>The OpenSolaris posix_spawn() implementation: </value><value>https://sourceforge.net/p/schillix-on/schillix-on/ci/default/tree/usr/src/lib/libc/port/threads/spawn.c</value><value>
</value><value>
</value><value>^</value><value> </value><value>posix_spawn</value><value> – System Interfaces Reference, </value><value>The Single UNIX Specification</value><value>, Issue 7 from </value><value>The Open Group</value><value>
</value><value>
</value><value>^</value><value> </value><value>fork(2)</value><value> – </value><value>Plan 9</value><value> Programmer's Manual, Volume 1</value><value>
</value><value>
</value><value>^</value><value> </value><value>intro(2)</value><value> – </value><value>Plan 9</value><value> Programmer's Manual, Volume 1</value><value>
</value><value>
</value><value>^</value><value> </value><value>rfork(2)</value><value> – </value><value>FreeBSD</value><value> System Calls </value><value>Manual</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Torvalds, Linus (1999). </value><value>"The Linux edge"</value><value>. </value><value>Open Sources: Voices from the Open Source Revolution</value><value>. O'Reilly. </value><value>ISBN</value><value> </value><value>1-56592-582-3</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"z/VM &gt; z/VM 6.2.0 &gt; Application Programming &gt; z/VM V6R2 OpenExtensions POSIX Conformance Document &gt; POSIX.1 Conformance Document &gt; Section 3. Process Primitives &gt; 3.1 Process Creation and Execution &gt; 3.1.1 Process Creation"</value><value>. IBM</value><value>. Retrieved </value><value>April 21,</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 30 November 2018, at 09:41</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Python_programming_language</url><title>Python (programming language)</title><text><value>
</value><value>
</value><value>Python</value><value>Paradigm</value><value>Multi-paradigm</value><value>: </value><value>functional</value><value>, </value><value>imperative</value><value>, </value><value>object-oriented</value><value>, </value><value>reflective</value><value>Designed by</value><value>Guido van Rossum</value><value>Developer</value><value>Python Software Foundation</value><value>First appeared</value><value>1990</value><value>; 28 years ago</value><value> (</value><value>1990</value><value>)</value><value>[1]</value><value>Stable release</value><value>3.7.1 / 20 October 2018</value><value>; 54 days ago</value><value> (</value><value>2018-10-20</value><value>)</value><value>[2]</value><value>2.7.15 / 1 May 2018</value><value>; 7 months ago</value><value> (</value><value>2018-05-01</value><value>)</value><value>[3]</value><value>
   </value><value>
</value><value>Typing discipline</value><value>Duck</value><value>, </value><value>dynamic</value><value>, </value><value>gradual</value><value> (since 3.5),</value><value>[4]</value><value> </value><value>strong</value><value>License</value><value>Python Software Foundation License</value><value>Filename extensions</value><value>.py, .pyc, .pyd, .pyo (prior to 3.5),</value><value>[5]</value><value> .pyw, .pyz (since 3.5)</value><value>[6]</value><value>Website</value><value>www</value><value>.python</value><value>.org</value><value>Major </value><value>implementations</value><value>CPython</value><value>, </value><value>IronPython</value><value>, </value><value>Jython</value><value>, </value><value>MicroPython</value><value>, </value><value>Numba</value><value>, </value><value>PyPy</value><value>, </value><value>Stackless Python</value><value>Dialects</value><value>Cython</value><value>, </value><value>RPython</value><value>Influenced by</value><value>ABC</value><value>,</value><value>[7]</value><value> </value><value>ALGOL 68</value><value>,</value><value>[8]</value><value> </value><value>APL</value><value>[9]</value><value> </value><value>C</value><value>,</value><value>[10]</value><value> </value><value>C++</value><value>,</value><value>[11]</value><value> </value><value>CLU</value><value>,</value><value>[12]</value><value> </value><value>Dylan</value><value>,</value><value>[13]</value><value> </value><value>Haskell</value><value>,</value><value>[14]</value><value> </value><value>Icon</value><value>,</value><value>[15]</value><value> </value><value>Java</value><value>,</value><value>[16]</value><value> </value><value>Lisp</value><value>,</value><value>[17]</value><value> </value><value>Modula-3</value><value>,</value><value>[11]</value><value> </value><value>Perl</value><value>, </value><value>Standard ML</value><value>[9]</value><value>Influenced</value><value>Boo</value><value>, </value><value>Cobra</value><value>, </value><value>CoffeeScript</value><value>,</value><value>[18]</value><value> </value><value>D</value><value>, </value><value>F#</value><value>, </value><value>Genie</value><value>,</value><value>[19]</value><value> </value><value>Go</value><value>, </value><value>Apache Groovy</value><value>, </value><value>JavaScript</value><value>,</value><value>[20]</value><value>[21]</value><value> </value><value>Julia</value><value>,</value><value>[22]</value><value> </value><value>Nim</value><value>, </value><value>Ring</value><value>,</value><value>[23]</value><value> </value><value>Ruby</value><value>,</value><value>[24]</value><value> </value><value>Swift</value><value>[25]</value><value>
</value><value> </value><value>Python Programming</value><value> at Wikibooks</value><value>
</value><value>
</value><value>Python</value><value> is an </value><value>interpreted</value><value>, </value><value>high-level</value><value>, </value><value>general-purpose programming language</value><value>. Created by </value><value>Guido van Rossum</value><value> and first released in 1991, Python has a design philosophy that emphasizes </value><value>code readability</value><value>, notably using </value><value>significant whitespace</value><value>. It provides constructs that enable clear programming on both small and large scales.</value><value>[26]</value><value> In July 2018, Van Rossum stepped down as the leader in the language community.</value><value>[27]</value><value>[28]</value><value>
</value><value>Python features a </value><value>dynamic type</value><value> system and automatic </value><value>memory management</value><value>. It supports multiple </value><value>programming paradigms</value><value>, including </value><value>object-oriented</value><value>, </value><value>imperative</value><value>, </value><value>functional</value><value> and </value><value>procedural</value><value>, and has a large and comprehensive </value><value>standard library</value><value>.</value><value>[29]</value><value>
</value><value>Python interpreters are available for many </value><value>operating systems</value><value>. </value><value>CPython</value><value>, the </value><value>reference implementation</value><value> of Python, is </value><value>open source</value><value> software</value><value>[30]</value><value> and has a community-based development model, as do nearly all of Python's other implementations. Python and CPython are managed by the non-profit </value><value>Python Software Foundation</value><value>.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Features and philosophy</value><value>
</value><value>3</value><value> </value><value>Syntax and semantics</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Indentation</value><value>
</value><value>3.2</value><value> </value><value>Statements and control flow</value><value>
</value><value>3.3</value><value> </value><value>Expressions</value><value>
</value><value>3.4</value><value> </value><value>Methods</value><value>
</value><value>3.5</value><value> </value><value>Typing</value><value>
</value><value>3.6</value><value> </value><value>Mathematics</value><value>
</value><value>
</value><value>
</value><value>4</value><value> </value><value>Libraries</value><value>
</value><value>5</value><value> </value><value>Development environments</value><value>
</value><value>6</value><value> </value><value>Implementations</value><value>
</value><value>
</value><value>6.1</value><value> </value><value>Reference implementation</value><value>
</value><value>6.2</value><value> </value><value>Other implementations</value><value>
</value><value>6.3</value><value> </value><value>Unsupported implementations</value><value>
</value><value>6.4</value><value> </value><value>Cross-compilers to other languages</value><value>
</value><value>6.5</value><value> </value><value>Performance</value><value>
</value><value>
</value><value>
</value><value>7</value><value> </value><value>Development</value><value>
</value><value>8</value><value> </value><value>Naming</value><value>
</value><value>9</value><value> </value><value>API documentation generators</value><value>
</value><value>10</value><value> </value><value>Uses</value><value>
</value><value>11</value><value> </value><value>Languages influenced by Python</value><value>
</value><value>12</value><value> </value><value>See also</value><value>
</value><value>13</value><value> </value><value>References</value><value>
</value><value>
</value><value>13.1</value><value> </value><value>Sources</value><value>
</value><value>
</value><value>
</value><value>14</value><value> </value><value>Further reading</value><value>
</value><value>15</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>Guido van Rossum OSCON 2006 cropped</value><value>
</value><value>Main article: </value><value>History of Python</value><value>
</value><value>Python was conceived in the late 1980s</value><value>[31]</value><value> by </value><value>Guido van Rossum</value><value> at </value><value>Centrum Wiskunde &amp; Informatica</value><value> (CWI) in the </value><value>Netherlands</value><value> as a successor to the </value><value>ABC language</value><value> (itself inspired by </value><value>SETL</value><value>)</value><value>[32]</value><value>, capable of </value><value>exception handling</value><value> and interfacing with the </value><value>Amoeba</value><value> operating system.</value><value>[7]</value><value> Its implementation began in December 1989.</value><value>[33]</value><value> Van Rossum's long influence on Python is reflected in the title given to him by the Python community: </value><value>Benevolent Dictator For Life</value><value> (BDFL) –  a post from which he gave himself permanent vacation on July 12, 2018.</value><value>[34]</value><value>
</value><value>Python 2.0 was released on 16 October 2000 with many major new features, including a </value><value>cycle-detecting</value><value> </value><value>garbage collector</value><value> and support for </value><value>Unicode</value><value>.</value><value>[35]</value><value>
</value><value>Python 3.0 was released on 3 December 2008. It was a major revision of the language that is not completely </value><value>backward-compatible</value><value>.</value><value>[36]</value><value> Many of its major features were </value><value>backported</value><value> to Python 2.6.x</value><value>[37]</value><value> and 2.7.x version series.  Releases of Python 3 include the </value><value>2to3</value><value> utility, which automates (at least partially) the translation of Python 2 code to Python 3.</value><value>[38]</value><value>
</value><value>Python 2.7's </value><value>end-of-life</value><value> date was initially set at 2015 then postponed to 2020 out of concern that a large body of existing code could not easily be forward-ported to Python 3.</value><value>[39]</value><value>[40]</value><value> In January 2017, Google announced work on a Python 2.7 to </value><value>Go</value><value> </value><value>transcompiler</value><value> to improve performance under concurrent workloads.</value><value>[41]</value><value>
</value><value>
</value><value>Features and philosophy</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python is a </value><value>multi-paradigm programming language</value><value>. </value><value>Object-oriented programming</value><value> and </value><value>structured programming</value><value> are fully supported, and many of its features support </value><value>functional programming</value><value> and </value><value>aspect-oriented programming</value><value> (including by </value><value>metaprogramming</value><value>[42]</value><value> and </value><value>metaobjects</value><value> (magic methods)).</value><value>[43]</value><value> Many other paradigms are supported via extensions, including </value><value>design by contract</value><value>[44]</value><value>[45]</value><value> and </value><value>logic programming</value><value>.</value><value>[46]</value><value>
</value><value>Python uses </value><value>dynamic typing</value><value>, and a combination of </value><value>reference counting</value><value> and a cycle-detecting garbage collector for </value><value>memory management</value><value>. It also features dynamic </value><value>name resolution</value><value> (</value><value>late binding</value><value>), which binds method and variable names during program execution.
</value><value>Python's design offers some support for </value><value>functional programming</value><value> in the </value><value>Lisp</value><value> tradition. It has </value><value>filter()</value><value>, </value><value>map()</value><value>, and </value><value>reduce()</value><value> functions; </value><value>list comprehensions</value><value>, </value><value>dictionaries</value><value>, and sets; and </value><value>generator</value><value> expressions.</value><value>[47]</value><value> The standard library has two modules (itertools and functools) that implement functional tools borrowed from </value><value>Haskell</value><value> and </value><value>Standard ML</value><value>.</value><value>[48]</value><value>
</value><value>The language's core philosophy is summarized in the document </value><value>The </value><value>Zen of Python</value><value> (</value><value>PEP 20</value><value>), which includes </value><value>aphorisms</value><value> such as:</value><value>[49]</value><value>
</value><value>
</value><value>Beautiful is better than ugly</value><value>
</value><value>Explicit is better than implicit</value><value>
</value><value>Simple is better than complex</value><value>
</value><value>Complex is better than complicated</value><value>
</value><value>Readability counts</value><value>
</value><value>Rather than having all of its functionality built into its core, Python was designed to be highly </value><value>extensible</value><value>. This compact modularity has made it particularly popular as a means of adding programmable interfaces to existing applications. Van Rossum's vision of a small core language with a large standard library and easily extensible interpreter stemmed from his frustrations with </value><value>ABC</value><value>, which espoused the opposite approach.</value><value>[31]</value><value>
</value><value>While offering choice in coding methodology, the Python philosophy rejects exuberant syntax (such as that of </value><value>Perl</value><value>) in favor of a simpler, less-cluttered grammar. As </value><value>Alex Martelli</value><value> put it: "To describe something as 'clever' is </value><value>not</value><value> considered a compliment in the Python culture."</value><value>[50]</value><value> Python's philosophy rejects the Perl "</value><value>there is more than one way to do it</value><value>" approach to language design in favor of "there should be one—and preferably only one—obvious way to do it".</value><value>[49]</value><value>
</value><value>Python's developers strive to avoid </value><value>premature optimization</value><value>, and reject patches to non-critical parts of CPython that would offer marginal increases in speed at the cost of clarity.</value><value>[51]</value><value> When speed is important, a Python programmer can move time-critical functions to extension modules written in languages such as C, or use </value><value>PyPy</value><value>, a </value><value>just-in-time compiler</value><value>. </value><value>Cython</value><value> is also available, which translates a Python script into C and makes direct C-level API calls into the Python interpreter.
</value><value>An important goal of Python's developers is keeping it fun to use. This is reflected in the language's name—a tribute to the British comedy group </value><value>Monty Python</value><value>[52]</value><value>—and in occasionally playful approaches to tutorials and reference materials, such as examples that refer to spam and eggs (from a </value><value>famous Monty Python sketch</value><value>) instead of the standard </value><value>foo and bar</value><value>.</value><value>[53]</value><value>[54]</value><value>
</value><value>A common </value><value>neologism</value><value> in the Python community is </value><value>pythonic</value><value>, which can have a wide range of meanings related to program style. To say that code is pythonic is to say that it uses Python idioms well, that it is natural or shows fluency in the language, that it conforms with Python's minimalist philosophy and emphasis on readability. In contrast, code that is difficult to understand or reads like a rough transcription from another programming language is called </value><value>unpythonic</value><value>.
</value><value>Users and admirers of Python, especially those considered knowledgeable or experienced, are often referred to as </value><value>Pythonists</value><value>, </value><value>Pythonistas</value><value>, and </value><value>Pythoneers</value><value>.</value><value>[55]</value><value>[56]</value><value>
</value><value>
</value><value>Syntax and semantics</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Python syntax and semantics</value><value>
</value><value>Python is meant to be an easily readable language. Its formatting is visually uncluttered, and it often uses English keywords where other languages use punctuation. Unlike many other languages, it does not use </value><value>curly brackets</value><value> to delimit blocks, and semicolons after statements are optional. It has fewer syntactic exceptions and special cases than </value><value>C</value><value> or </value><value>Pascal</value><value>.</value><value>[57]</value><value>
</value><value>
</value><value>Indentation</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Python syntax and semantics § Indentation</value><value>
</value><value>Python uses </value><value>whitespace</value><value> indentation, rather than </value><value>curly brackets</value><value> or keywords, to delimit </value><value>blocks</value><value>. An increase in indentation comes after certain statements; a decrease in indentation signifies the end of the current block.</value><value>[58]</value><value> Thus, the program's visual structure accurately represents the program's semantic structure.</value><value>[1]</value><value> This feature is also sometimes termed the </value><value>off-side rule</value><value>.
</value><value>
</value><value>Statements and control flow</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python's </value><value>statements</value><value> include (among others):
</value><value>
</value><value>The assignment statement (token '=', the equals sign). This operates differently than in traditional </value><value>imperative programming</value><value> languages, and this fundamental mechanism (including the nature of Python's version of </value><value>variables</value><value>) illuminates many other features of the language. Assignment in </value><value>C</value><value>, e.g., </value><value>x = 2</value><value>, translates to "typed variable name x receives a copy of numeric value 2". The (right-hand) value is copied into an </value><value>allocated storage location</value><value> for which the (left-hand) </value><value>variable name</value><value> is the symbolic address. The memory allocated to the variable is large enough (potentially quite large) for the declared </value><value>type</value><value>. In the simplest case of Python assignment, using the same example, </value><value>x = 2</value><value>, translates to "(generic) name x receives a </value><value>reference</value><value> to a separate, dynamically allocated </value><value>object</value><value> of numeric (int) type of value 2." This is termed </value><value>binding</value><value> the name to the object. Since the name's storage location doesn't </value><value>contain</value><value> the indicated value, it is improper to call it a </value><value>variable</value><value>. Names may be subsequently rebound at any time to objects of greatly varying types, including strings, procedures, complex objects with data and methods, etc. Successive assignments of a common value to multiple names, e.g., </value><value>x = 2</value><value>; </value><value>y = 2</value><value>; </value><value>z = 2</value><value> result in allocating storage to (at most) three names and one numeric object, to which all three names are bound. Since a name is a generic reference holder it is unreasonable to associate a fixed </value><value>data type</value><value> with it. However at a given time a name will be bound to </value><value>some</value><value> object, which </value><value>will</value><value> have a type; thus there is </value><value>dynamic typing</value><value>.</value><value>
</value><value>The </value><value>if</value><value> statement, which conditionally executes a block of code, along with </value><value>else</value><value> and </value><value>elif</value><value> (a contraction of else-if).</value><value>
</value><value>The </value><value>for</value><value> statement, which iterates over an iterable object, capturing each element to a local variable for use by the attached block.</value><value>
</value><value>The </value><value>while</value><value> statement, which executes a block of code as long as its condition is true.</value><value>
</value><value>The </value><value>try</value><value> statement, which allows exceptions raised in its attached code block to be caught and handled by </value><value>except</value><value> clauses; it also ensures that clean-up code in a </value><value>finally</value><value> block will always be run regardless of how the block exits.</value><value>
</value><value>The </value><value>raise</value><value> statement, used to raise a specified exception or re-raise a caught exception.</value><value>
</value><value>The </value><value>class</value><value> statement, which executes a block of code and attaches its local namespace to a </value><value>class</value><value>, for use in </value><value>object-oriented programming</value><value>.</value><value>
</value><value>The </value><value>def</value><value> statement, which defines a </value><value>function</value><value> or </value><value>method</value><value>.</value><value>
</value><value>The </value><value>with</value><value> statement, from Python 2.5 released on September 2006,</value><value>[59]</value><value> which encloses a code block within a context manager (for example, acquiring a </value><value>lock</value><value> before the block of code is run and releasing the lock afterwards, or opening a </value><value>file</value><value> and then closing it), allowing </value><value>Resource Acquisition Is Initialization</value><value> (RAII)-like behavior and replaces a common try/finally idiom.</value><value>[60]</value><value>
</value><value>The </value><value>pass</value><value> statement, which serves as a </value><value>NOP</value><value>. It is syntactically needed to create an empty code block.</value><value>
</value><value>The </value><value>assert</value><value> statement, used during debugging to check for conditions that ought to apply.</value><value>
</value><value>The </value><value>yield</value><value> statement, which returns a value from a </value><value>generator</value><value> function. From Python 2.5, </value><value>yield</value><value> is also an operator. This form is used to implement </value><value>coroutines</value><value>.</value><value>
</value><value>The </value><value>import</value><value> statement, which is used to import modules whose functions or variables can be used in the current program. There are three ways of using import: </value><value>import &lt;module name&gt; [as &lt;alias&gt;]</value><value> or </value><value>from &lt;module name&gt; import *</value><value> or </value><value>from &lt;module name&gt; import &lt;definition 1&gt; [as &lt;alias 1&gt;], &lt;definition 2&gt; [as &lt;alias 2&gt;], ...</value><value>.</value><value>
</value><value>The </value><value>print</value><value> statement was changed to the </value><value>print()</value><value> function in Python 3.</value><value>[61]</value><value>
</value><value>
Python does not support </value><value>tail call</value><value> optimization or </value><value>first-class continuations</value><value>, and, according to Guido van Rossum, it never will.</value><value>[62]</value><value>[63]</value><value> However, better support for </value><value>coroutine</value><value>-like functionality is provided in 2.5, by extending Python's </value><value>generators</value><value>.</value><value>[64]</value><value> Before 2.5, generators were </value><value>lazy</value><value> </value><value>iterators</value><value>; information was passed unidirectionally out of the generator. From Python 2.5, it is possible to pass information back into a generator function, and from Python 3.3, the information can be passed through multiple stack levels.</value><value>[65]</value><value>
</value><value>
</value><value>Expressions</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Some Python </value><value>expressions</value><value> are similar to languages such as </value><value>C</value><value> and </value><value>Java</value><value>, while some are not:
</value><value>
</value><value>Addition, subtraction, and multiplication are the same, but the behavior of division differs. There are two types of divisions in Python. They are floor division and integer division.</value><value>[66]</value><value> Python also added the </value><value>**</value><value> operator for exponentiation.</value><value>
</value><value>From Python 3.5, the new </value><value>@</value><value> infix operator was introduced. It is intended to be used by libraries such as NumPy for </value><value>matrix multiplication</value><value>.</value><value>[67]</value><value>[68]</value><value>
</value><value>In Python, </value><value>==</value><value> compares by value, versus Java, which compares numerics by value</value><value>[69]</value><value> and objects by reference.</value><value>[70]</value><value> (Value comparisons in Java on objects can be performed with the </value><value>equals()</value><value> method.) Python's </value><value>is</value><value> operator may be used to compare object identities (comparison by reference). In Python, comparisons may be chained, for example </value><value>a &lt;= b &lt;= c</value><value>.</value><value>
</value><value>Python uses the words </value><value>and</value><value>, </value><value>or</value><value>, </value><value>not</value><value> for its boolean operators rather than the symbolic </value><value>&amp;&amp;</value><value>, </value><value>||</value><value>, </value><value>!</value><value> used in Java and C.</value><value>
</value><value>Python has a type of expression termed a </value><value>list comprehension</value><value>. Python 2.4 extended list comprehensions into a more general expression termed a </value><value>generator</value><value> expression</value><value>.</value><value>[47]</value><value>
</value><value>Anonymous functions</value><value> are implemented using </value><value>lambda expressions</value><value>; however, these are limited in that the body can only be one expression.</value><value>
</value><value>Conditional expressions in Python are written as </value><value>x if c else y</value><value>[71]</value><value> (different in order of operands from the </value><value>c ? x : y</value><value> operator common to many other languages).</value><value>
</value><value>Python makes a distinction between </value><value>lists</value><value> and </value><value>tuples</value><value>. Lists are written as </value><value>[1, 2, 3]</value><value>, are mutable, and cannot be used as the keys of dictionaries (dictionary keys must be </value><value>immutable</value><value> in Python). Tuples are written as </value><value>(1, 2, 3)</value><value>, are immutable and thus can be used as the keys of dictionaries, provided all elements of the tuple are immutable. The </value><value>+</value><value> operator can be used to concatenate two tuples, which does not directly modify their contents, but rather produces a new tuple containing the elements of both provided tuples. Thus, given the variable </value><value>t</value><value> initially equal to </value><value>(1, 2, 3)</value><value>, executing </value><value>t = t + (4, 5)</value><value> first evaluates </value><value>t + (4, 5)</value><value>, which yields </value><value>(1, 2, 3, 4, 5)</value><value>, which is then assigned back to </value><value>t</value><value>, thereby effectively "modifying the contents" of </value><value>t</value><value>, while conforming to the immutable nature of tuple objects. Parentheses are optional for tuples in unambiguous contexts.</value><value>[72]</value><value>
</value><value>Python features </value><value>sequence unpacking</value><value> where multiple expressions, each evaluating to anything that can be assigned to (a variable, a writable property, etc.), are associated in the identical manner to that forming tuple literals and, as a whole, are put on the left hand side of the equal sign in an assignment statement. The statement expects an </value><value>iterable</value><value> object on the right hand side of the equal sign that produces the same number of values as the provided writable expressions when iterated through, and will iterate through it, assigning each of the produced values to the corresponding expression on the left.</value><value>[73]</value><value>
</value><value>Python has a "string format" operator </value><value>%</value><value>. This functions analogous to </value><value>printf</value><value> format strings in </value><value>C</value><value>, e.g. </value><value>"spam=%s eggs=%d" % ("blah", 2)</value><value> evaluates to </value><value>"spam=blah eggs=2"</value><value>. In Python 3 and 2.6+, this was supplemented by the </value><value>format()</value><value> method of the </value><value>str</value><value> class, e.g. </value><value>"spam={0} eggs={1}".format("blah", 2)</value><value>. Python 3.6 added "f-strings": </value><value>blah = "blah"; eggs = 2; f'spam={blah} eggs={eggs}'</value><value>.</value><value>[74]</value><value>
</value><value>Python has various kinds of </value><value>string literals</value><value>:
</value><value>Strings delimited by single or double quote marks. Unlike in </value><value>Unix shells</value><value>, </value><value>Perl</value><value> and Perl-influenced languages, single quote marks and double quote marks function identically. Both kinds of string use the backslash (</value><value>\</value><value>) as an </value><value>escape character</value><value>. </value><value>String interpolation</value><value> became available in Python 3.6 as "formatted string literals".</value><value>[74]</value><value>
</value><value>Triple-quoted strings, which begin and end with a series of three single or double quote marks. They may span multiple lines and function like </value><value>here documents</value><value> in shells, Perl and </value><value>Ruby</value><value>.</value><value>
</value><value>Raw string</value><value> varieties, denoted by prefixing the string literal with an </value><value>r</value><value>. Escape sequences are not interpreted; hence raw strings are useful where literal backslashes are common, such as </value><value>regular expressions</value><value> and </value><value>Windows</value><value>-style paths. Compare "</value><value>@</value><value>-quoting" in </value><value>C#</value><value>.</value><value>
</value><value>Python has </value><value>array index</value><value> and </value><value>array slicing</value><value> expressions on lists, denoted as </value><value>a[key]</value><value>, </value><value>a[start:stop]</value><value> or </value><value>a[start:stop:step]</value><value>. Indexes are </value><value>zero-based</value><value>, and negative indexes are relative to the end. Slices take elements from the </value><value>start</value><value> index up to, but not including, the </value><value>stop</value><value> index. The third slice parameter, called </value><value>step</value><value> or </value><value>stride</value><value>, allows elements to be skipped and reversed. Slice indexes may be omitted, for example </value><value>a[:]</value><value> returns a copy of the entire list. Each element of a slice is a </value><value>shallow copy</value><value>.</value><value>
</value><value>In Python, a distinction between expressions and statements is rigidly enforced, in contrast to languages such as </value><value>Common Lisp</value><value>, </value><value>Scheme</value><value>, or </value><value>Ruby</value><value>. This leads to duplicating some functionality. For example:
</value><value>
</value><value>List comprehensions</value><value> vs. </value><value>for</value><value>-loops</value><value>
</value><value>Conditional</value><value> expressions vs. </value><value>if</value><value> blocks</value><value>
</value><value>The </value><value>eval()</value><value> vs. </value><value>exec()</value><value> built-in functions (in Python 2, </value><value>exec</value><value> is a statement); the former is for expressions, the latter is for statements.</value><value>
</value><value>Statements cannot be a part of an expression, so list and other comprehensions or </value><value>lambda expressions</value><value>, all being expressions, cannot contain statements. A particular case of this is that an assignment statement such as </value><value>a = 1</value><value> cannot form part of the conditional expression of a conditional statement. This has the advantage of avoiding a classic C error of mistaking an assignment operator </value><value>=</value><value> for an equality operator </value><value>==</value><value> in conditions: </value><value>if (c = 1) { ... }</value><value> is syntactically valid (but probably unintended) C code but </value><value>if c = 1: ...</value><value> causes a syntax error in Python.
</value><value>
</value><value>Methods</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Methods</value><value> on objects are </value><value>functions</value><value> attached to the object's class; the syntax </value><value>instance.method(argument)</value><value> is, for normal methods and functions, </value><value>syntactic sugar</value><value> for </value><value>Class.method(instance, argument)</value><value>. Python methods have an explicit </value><value>self</value><value> parameter to access </value><value>instance data</value><value>, in contrast to the implicit </value><value>self</value><value> (or </value><value>this</value><value>) in some other object-oriented programming languages (e.g., </value><value>C++</value><value>, </value><value>Java</value><value>, </value><value>Objective-C</value><value>, or </value><value>Ruby</value><value>).</value><value>[75]</value><value>
</value><value>
</value><value>Typing</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>
</value><value>Python uses </value><value>duck typing</value><value> and has typed objects but untyped variable names. Type constraints are not checked at </value><value>compile time</value><value>; rather, operations on an object may fail, signifying that the given object is not of a suitable type. Despite being </value><value>dynamically typed</value><value>, Python is </value><value>strongly typed</value><value>, forbidding operations that are not well-defined (for example, adding a number to a string) rather than silently attempting to make sense of them.
</value><value>Python allows programmers to define their own types using </value><value>classes</value><value>, which are most often used for </value><value>object-oriented programming</value><value>. New </value><value>instances</value><value> of classes are constructed by calling the class (for example, </value><value>SpamClass()</value><value> or </value><value>EggsClass()</value><value>), and the classes are instances of the </value><value>metaclass</value><value> </value><value>type</value><value> (itself an instance of itself), allowing </value><value>metaprogramming</value><value> and </value><value>reflection</value><value>.
</value><value>Before version 3.0, Python had two kinds of classes: </value><value>old-style</value><value> and </value><value>new-style</value><value>.</value><value>[76]</value><value> The syntax of both styles is the same, the difference being whether the class </value><value>object</value><value> is inherited from, directly or indirectly (all new-style classes inherit from </value><value>object</value><value> and are instances of </value><value>type</value><value>). In versions of Python 2 from Python 2.2 onwards, both kinds of classes can be used. Old-style classes were eliminated in Python 3.0.
</value><value>The long term plan is to support </value><value>gradual typing</value><value>[77]</value><value> and from Python 3.5, the syntax of the language allows specifying static types but they are not checked in the default implementation, CPython. An experimental optional static type checker named </value><value>mypy</value><value> supports compile-time type checking.</value><value>[78]</value><value>
</value><value>
</value><value>
</value><value>Summary of Python 3's built-in types
</value><value>
</value><value>
</value><value>Type
</value><value>
</value><value>mutable
</value><value>
</value><value>Description
</value><value>
</value><value>Syntax example
</value><value>
</value><value>
</value><value>bool</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Boolean value</value><value>
</value><value>
</value><value>True</value><value>False</value><value>
</value><value>
</value><value>
</value><value>bytearray</value><value>
</value><value>
</value><value>mutable
</value><value>
</value><value>Sequence of </value><value>bytes</value><value>
</value><value>
</value><value>bytearray(b'Some ASCII')</value><value>bytearray(b"Some ASCII")</value><value>bytearray([119, 105, 107, 105])</value><value>
</value><value>
</value><value>
</value><value>bytes</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Sequence of bytes
</value><value>
</value><value>b'Some ASCII'</value><value>b"Some ASCII"</value><value>bytes([119, 105, 107, 105])</value><value>
</value><value>
</value><value>
</value><value>complex</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Complex number</value><value> with real and imaginary parts
</value><value>
</value><value>3+2.7j</value><value>
</value><value>
</value><value>
</value><value>dict</value><value>
</value><value>
</value><value>mutable
</value><value>
</value><value>Associative array</value><value> (or dictionary) of key and value pairs; can contain mixed types (keys and values), keys must be a hashable type
</value><value>
</value><value>{'key1': 1.0, 3: False}</value><value>
</value><value>
</value><value>
</value><value>ellipsis</value><value>
</value><value>
</value><value>
</value><value>
</value><value>An </value><value>ellipsis</value><value> placeholder to be used as an index in </value><value>NumPy</value><value> arrays
</value><value>
</value><value>...</value><value>
</value><value>
</value><value>
</value><value>float</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Floating point</value><value> number, system-defined precision
</value><value>
</value><value>3.1415927</value><value>
</value><value>
</value><value>
</value><value>frozenset</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Unordered </value><value>set</value><value>, contains no duplicates; can contain mixed types, if hashable
</value><value>
</value><value>frozenset([4.0, 'string', True])</value><value>
</value><value>
</value><value>
</value><value>int</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Integer</value><value> of unlimited magnitude</value><value>[79]</value><value>
</value><value>
</value><value>42</value><value>
</value><value>
</value><value>
</value><value>list</value><value>
</value><value>
</value><value>mutable
</value><value>
</value><value>List</value><value>, can contain mixed types
</value><value>
</value><value>[4.0, 'string', True]</value><value>
</value><value>
</value><value>
</value><value>set</value><value>
</value><value>
</value><value>mutable
</value><value>
</value><value>Unordered </value><value>set</value><value>, contains no duplicates; can contain mixed types, if hashable
</value><value>
</value><value>{4.0, 'string', True}</value><value>
</value><value>
</value><value>
</value><value>str</value><value>
</value><value>
</value><value>immutable</value><value>
</value><value>
</value><value>A </value><value>character string</value><value>: sequence of Unicode codepoints
</value><value>
</value><value>'Wikipedia'</value><value>"Wikipedia"</value><value>"""Spanning</value><value>multiple</value><value>lines"""</value><value>
</value><value>
</value><value>
</value><value>tuple</value><value>
</value><value>
</value><value>immutable
</value><value>
</value><value>Can contain mixed types
</value><value>
</value><value>(4.0, 'string', True)</value><value>
</value><value>
</value><value>Mathematics</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python has the usual C language arithmetic operators (</value><value>+</value><value>, </value><value>-</value><value>, </value><value>*</value><value>, </value><value>/</value><value>, </value><value>%</value><value>). It also has </value><value>**</value><value> for exponentiation, e.g. </value><value>5**3 == 125</value><value> and </value><value>9**0.5 == 3.0</value><value>, and a new matrix multiply </value><value>@</value><value> operator is included in version 3.5.</value><value>[80]</value><value> Additionally, it has a unary operator (</value><value>~</value><value>), which essentially inverts all the bits of its one argument. For integers, this means </value><value>~x=-x-1</value><value>.</value><value>[81]</value><value> Other operators include bitwise shift operators </value><value>x &lt;&lt; y</value><value>, which shifts </value><value>x</value><value> to the left </value><value>y</value><value> places, the same as </value><value>x*(2**y) </value><value>, and </value><value>x &gt;&gt; y</value><value>, which shifts </value><value>x</value><value> to the right </value><value>y</value><value> places, the same as </value><value>x//(2**y) </value><value>.</value><value>[82]</value><value>
</value><value>The behavior of division has changed significantly over time:</value><value>[83]</value><value>[</value><value>why?</value><value>]</value><value>
</value><value>
</value><value>Python 2.1 and earlier use the C division behavior. The </value><value>/</value><value> operator is integer division if both operands are integers, and floating-point division otherwise. Integer division rounds towards 0, e.g. </value><value>7/3 == 2</value><value> and </value><value>-7/3 == -2</value><value>.</value><value>
</value><value>Python 2.2 changes integer division to round towards negative infinity, e.g. </value><value>7/3 == 2</value><value> and </value><value>-7/3 == -3</value><value>. The floor division </value><value>//</value><value> operator is introduced. So </value><value>7//3 == 2</value><value>, </value><value>-7//3 == -3</value><value>, </value><value>7.5//3 == 2.0</value><value> and </value><value>-7.5//3 == -3.0</value><value>. Adding </value><value>from __future__ import division</value><value> causes a module to use Python 3.0 rules for division (see next).</value><value>
</value><value>Python 3.0 changes </value><value>/</value><value> to be always floating-point division. In Python terms, the pre-3.0 </value><value>/</value><value> is </value><value>classic division</value><value>, the version-3.0 </value><value>/</value><value> is </value><value>real division</value><value>, and </value><value>//</value><value> is </value><value>floor division</value><value>.</value><value>
</value><value>Rounding towards negative infinity, though different from most languages, adds consistency. For instance, it means that the equation </value><value>(a + b)//b == a//b + 1</value><value> is always true. It also means that the equation </value><value>b*(a//b) + a%b == a</value><value> is valid for both positive and negative values of </value><value>a</value><value>. However, maintaining the validity of this equation means that while the result of </value><value>a%b</value><value> is, as expected, in the </value><value>half-open interval</value><value> [0, </value><value>b</value><value>), where </value><value>b</value><value> is a positive integer, it has to lie in the interval (</value><value>b</value><value>, 0] when </value><value>b</value><value> is negative.</value><value>[84]</value><value>
</value><value>Python provides a </value><value>round</value><value> function for </value><value>rounding</value><value> a float to the nearest integer. For </value><value>tie-breaking</value><value>, versions before 3 use round-away-from-zero: </value><value>round(0.5)</value><value> is 1.0, </value><value>round(-0.5)</value><value> is −1.0.</value><value>[85]</value><value> Python 3 uses </value><value>round to even</value><value>: </value><value>round(1.5)</value><value> is 2, </value><value>round(2.5)</value><value> is 2.</value><value>[86]</value><value>
</value><value>Python allows boolean expressions with multiple equality relations in a manner that is consistent with general use in mathematics. For example, the expression </value><value>a &lt; b &lt; c</value><value> tests whether </value><value>a</value><value> is less than </value><value>b</value><value> and </value><value>b</value><value> is less than </value><value>c</value><value>.</value><value>[87]</value><value>  C-derived languages interpret this expression differently: in C, the expression would first evaluate </value><value>a &lt; b</value><value>, resulting in 0 or 1, and that result would then be compared with </value><value>c</value><value>.</value><value>[88]</value><value>
</value><value>Python has extensive built-in support for </value><value>arbitrary precision arithmetic</value><value>. Integers are transparently switched from the machine-supported maximum fixed-precision (usually 32 or 64 bits), belonging to the python type </value><value>int</value><value>, to arbitrary precision, belonging to the Python type </value><value>long</value><value>, where needed. The latter have an "L" suffix in their textual representation.</value><value>[89]</value><value> (In Python 3, the distinction between the </value><value>int</value><value> and </value><value>long</value><value> types was eliminated; this behavior is now entirely contained by the </value><value>int</value><value> class.) The </value><value>Decimal</value><value> type/class in module </value><value>decimal</value><value> (since version 2.4) provides decimal floating point numbers to arbitrary precision and several rounding modes.</value><value>[90]</value><value> The </value><value>Fraction</value><value> type in module </value><value>fractions</value><value> (since version 2.6) provides arbitrary precision for rational numbers.</value><value>[91]</value><value>
</value><value>Due to Python's extensive mathematics library, and the third-party library </value><value>NumPy</value><value> that further extends the native capabilities, it is frequently used as a scientific scripting language to aid in problems such as numerical data processing and manipulation.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>
</value><value>Libraries</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python's large </value><value>standard library</value><value>, commonly cited as one of its greatest strengths,</value><value>[92]</value><value> provides tools suited to many tasks. For Internet-facing applications, many standard formats and protocols such as </value><value>MIME</value><value> and </value><value>HTTP</value><value> are supported. It includes modules for creating </value><value>graphical user interfaces</value><value>, connecting to </value><value>relational databases</value><value>, </value><value>generating pseudorandom numbers</value><value>, arithmetic with arbitrary precision decimals,</value><value>[93]</value><value> manipulating </value><value>regular expressions</value><value>, and </value><value>unit testing</value><value>.
</value><value>Some parts of the standard library are covered by specifications (for example, the </value><value>Web Server Gateway Interface</value><value> (WSGI) implementation </value><value>wsgiref</value><value> follows PEP 333</value><value>[94]</value><value>), but most modules are not. They are specified by their code, internal documentation, and test suites (if supplied). However, because most of the standard library is cross-platform Python code, only a few modules need altering or rewriting for variant implementations.
</value><value>As of  March 2018,</value><value>[update]</value><value> the </value><value>Python Package Index</value><value> (PyPI), the official repository for third-party Python software, contains over 130,000</value><value>[95]</value><value> packages with a wide range of functionality, including:
</value><value>
</value><value>Graphical user interfaces</value><value>
</value><value>Web frameworks</value><value>
</value><value>Multimedia</value><value>
</value><value>Databases</value><value>
</value><value>Networking</value><value>
</value><value>Test frameworks</value><value>
</value><value>Automation</value><value>
</value><value>Web scraping</value><value>[96]</value><value>
</value><value>Documentation</value><value>
</value><value>System administration</value><value>
</value><value>Scientific computing</value><value>
</value><value>Text processing</value><value>
</value><value>Image processing</value><value>
</value><value>Development environments</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>See also: </value><value>Comparison of integrated development environments § Python</value><value>
</value><value>Most Python implementations (including CPython) include a </value><value>read–eval–print loop</value><value> (REPL), permitting them to function as a </value><value>command line interpreter</value><value> for which the user enters statements sequentially and receives results immediately.
</value><value>Other shells, including </value><value>IDLE</value><value> and </value><value>IPython</value><value>, add further abilities such as auto-completion, session state retention and </value><value>syntax highlighting</value><value>.
</value><value>As well as standard desktop </value><value>integrated development environments</value><value>, there are </value><value>Web browser</value><value>-based IDEs; </value><value>SageMath</value><value> (intended for developing science and math-related Python programs); </value><value>PythonAnywhere</value><value>, a browser-based IDE and hosting environment; and Canopy IDE, a commercial Python IDE emphasizing scientific computing.</value><value>[97]</value><value>
</value><value>
</value><value>Implementations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>See also: </value><value>List of Python software § Python implementations</value><value>
</value><value>Reference implementation</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>CPython</value><value> is the </value><value>reference implementation</value><value> of Python. It is written in </value><value>C</value><value>, meeting the </value><value>C89</value><value> standard with several select </value><value>C99</value><value> features.</value><value>[98]</value><value> It compiles Python programs into an intermediate </value><value>bytecode</value><value>[99]</value><value> which is then executed by its </value><value>virtual machine</value><value>.</value><value>[100]</value><value> CPython is distributed with a large standard library written in a mixture of C and native Python. It is available for many platforms, including </value><value>Windows</value><value> and most modern </value><value>Unix-like</value><value> systems. Platform portability was one of its earliest priorities.</value><value>[101]</value><value>
</value><value>
</value><value>Other implementations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>PyPy</value><value> is a fast, compliant</value><value>[102]</value><value> interpreter of Python 2.7 and 3.5. Its </value><value>just-in-time compiler</value><value> brings a significant speed improvement over CPython.</value><value>[103]</value><value>
</value><value>Stackless Python</value><value> is a significant fork of CPython that implements </value><value>microthreads</value><value>; it does not use the C memory stack, thus allowing massively concurrent programs. PyPy also has a stackless version.</value><value>[104]</value><value>
</value><value>MicroPython</value><value> and </value><value>CircuitPython</value><value> are Python 3 variants optimised for </value><value>microcontrollers</value><value>.
</value><value>
</value><value>Unsupported implementations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Other just-in-time Python compilers have been developed, but are now unsupported:
</value><value>
</value><value>Google began a project named </value><value>Unladen Swallow</value><value> in 2009 with the aim of speeding up the Python interpreter fivefold by using the </value><value>LLVM</value><value>, and of improving its multithreading ability to scale to thousands of cores.</value><value>[105]</value><value>
</value><value>Psyco</value><value> is a </value><value>just-in-time</value><value> </value><value>specialising</value><value> compiler that integrates with CPython and transforms bytecode to machine code at runtime. The emitted code is specialised for certain </value><value>data types</value><value> and is faster than standard Python code.</value><value>
</value><value>In 2005, </value><value>Nokia</value><value> released a Python interpreter for the </value><value>Series 60</value><value> mobile phones named </value><value>PyS60</value><value>. It includes many of the modules from the CPython implementations and some additional modules to integrate with the </value><value>Symbian</value><value> operating system. The project has been kept up-to-date to run on all variants of the S60 platform, and several third-party modules are available. The Nokia </value><value>N900</value><value> also supports Python with </value><value>GTK</value><value> widget libraries, enabling programs to be written and run on the target device.</value><value>[106]</value><value>
</value><value>
</value><value>Cross-compilers to other languages</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>There are several compilers to high-level </value><value>object languages</value><value>, with either unrestricted Python, a restricted subset of Python, or a language similar to Python as the source language:
</value><value>
</value><value>Jython</value><value> compiles into Java byte code, which can then be executed by every </value><value>Java virtual machine</value><value> implementation. This also enables the use of Java class library functions from the Python program.</value><value>
</value><value>IronPython</value><value> follows a similar approach in order to run Python programs on the .NET </value><value>Common Language Runtime</value><value>.</value><value>
</value><value>The </value><value>RPython</value><value> language can be compiled to </value><value>C</value><value>, </value><value>Java bytecode</value><value>, or </value><value>Common Intermediate Language</value><value>, and is used to build the PyPy interpreter of Python.</value><value>
</value><value>Pyjs</value><value> compiles Python to </value><value>JavaScript</value><value>.</value><value>
</value><value>Cython</value><value> compiles Python to </value><value>C</value><value> and </value><value>C++</value><value>.</value><value>
</value><value>Pythran compiles Python to </value><value>C++</value><value>.</value><value>
</value><value>Somewhat dated </value><value>Pyrex</value><value> (latest release in 2010) and </value><value>Shed Skin</value><value> (latest release in 2013) compile to C and C++ respectively.</value><value>
</value><value>Google's Grumpy compiles Python to </value><value>Go</value><value>.</value><value>
</value><value>MyHDL</value><value> compiles Python to </value><value>VHDL</value><value>.</value><value>
</value><value>Nuitka</value><value> compiles Python into C++.</value><value>[107]</value><value>
</value><value>Performance</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>A performance comparison of various Python implementations on a non-numerical (combinatorial) workload was presented at EuroSciPy '13.</value><value>[108]</value><value>
</value><value>
</value><value>Development</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python's development is conducted largely through the </value><value>Python Enhancement Proposal</value><value> (PEP) process, the primary mechanism for proposing major new features, collecting community input on issues and documenting Python design decisions.</value><value>[109]</value><value> Outstanding PEPs are reviewed and commented on by the Python community and Guido Van Rossum, Python's </value><value>Benevolent Dictator For Life</value><value>.</value><value>[109]</value><value>
</value><value>Enhancement of the language corresponds with development of the CPython reference implementation. The mailing list python-dev is the primary forum for the language's development. Specific issues are discussed in the </value><value>Roundup</value><value> </value><value>bug tracker</value><value> maintained at python.org.</value><value>[110]</value><value> Development originally took place on a </value><value>self-hosted</value><value> source-code repository running </value><value>Mercurial</value><value>, until Python moved to </value><value>GitHub</value><value> in January 2017.</value><value>[111]</value><value>
</value><value>CPython's public releases come in three types, distinguished by which part of the version number is incremented:
</value><value>
</value><value>Backward-incompatible versions, where code is expected to break and need to be manually </value><value>ported</value><value>. The first part of the version number is incremented. These releases happen infrequently—for example, version 3.0 was released 8 years after 2.0.</value><value>
</value><value>Major or "feature" releases, about every 18 months, are largely compatible but introduce new features. The second part of the version number is incremented. Each major version is supported by bugfixes for several years after its release.</value><value>[112]</value><value>
</value><value>Bugfix releases, which introduce no new features, occur about every 3 months and are made when a sufficient number of bugs have been fixed upstream since the last release. Security vulnerabilities are also patched in these releases. The third and final part of the version number is incremented.</value><value>[113]</value><value>
</value><value>Many </value><value>alpha, beta, and release-candidates</value><value> are also released as previews and for testing before final releases. Although there is a rough schedule for each release, they are often delayed if the code is not ready. Python's development team monitors the state of the code by running the large </value><value>unit test</value><value> suite during development, and using the </value><value>BuildBot</value><value> </value><value>continuous integration</value><value> system.</value><value>[114]</value><value>
</value><value>The community of Python developers has also contributed over 86,000</value><value>[115]</value><value> software modules (as of  20 August 2016</value><value>[update]</value><value>) to the </value><value>Python Package Index</value><value> (PyPI), the official repository of third-party Python libraries.
</value><value>The major </value><value>academic conference</value><value> on Python is </value><value>PyCon</value><value>. There are also special Python mentoring programmes, such as </value><value>Pyladies</value><value>.
</value><value>
</value><value>Naming</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python's name is derived from the British comedy group </value><value>Monty Python</value><value>, whom Python creator Guido van Rossum enjoyed while developing the language. Monty Python references appear frequently in Python code and culture;</value><value>[116]</value><value> for example, the </value><value>metasyntactic variables</value><value> often used in Python literature are </value><value>spam</value><value> and </value><value>eggs</value><value> instead of the traditional </value><value>foo</value><value> and </value><value>bar</value><value>.</value><value>[116]</value><value>[117]</value><value> The official Python documentation also contains various references to Monty Python routines.</value><value>[118]</value><value>[119]</value><value>
</value><value>The prefix </value><value>Py-</value><value> is used to show that something is related to Python. Examples of the use of this prefix in names of Python applications or libraries include </value><value>Pygame</value><value>, a </value><value>binding</value><value> of </value><value>SDL</value><value> to Python (commonly used to create games); </value><value>PyQt</value><value> and </value><value>PyGTK</value><value>, which bind </value><value>Qt</value><value> and </value><value>GTK</value><value> to Python respectively; and </value><value>PyPy</value><value>, a Python implementation originally written in Python.
</value><value>
</value><value>API documentation generators</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python API documentation generators include:
</value><value>
</value><value>Sphinx</value><value>
</value><value>Epydoc</value><value>
</value><value>HeaderDoc</value><value>
</value><value>pydoc</value><value>
</value><value>Uses</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>List of Python software</value><value>
</value><value>Since 2003, Python has consistently ranked in the top ten most popular programming languages in the </value><value>TIOBE Programming Community Index</value><value> where, as of  January 2018</value><value>[update]</value><value>, it is the fourth most popular language (behind </value><value>Java</value><value>, </value><value>C</value><value>, and </value><value>C++</value><value>).</value><value>[120]</value><value> It was selected Programming Language of the Year in 2007 and 2010.</value><value>[121]</value><value>
</value><value>An empirical study found that scripting languages, such as Python, are more productive than conventional languages, such as C and Java, for programming problems involving string manipulation and search in a dictionary, and determined that memory consumption was often "better than Java and not much worse than C or C++".</value><value>[122]</value><value>
</value><value>Large organizations that use Python include </value><value>Wikipedia</value><value>, </value><value>Google</value><value>,</value><value>[123]</value><value> </value><value>Yahoo!</value><value>,</value><value>[124]</value><value> </value><value>CERN</value><value>,</value><value>[125]</value><value> </value><value>NASA</value><value>,</value><value>[126]</value><value> </value><value>Facebook</value><value>,</value><value>[127]</value><value> </value><value>Amazon</value><value>, </value><value>Instagram</value><value>, </value><value>Spotify</value><value>[128]</value><value> and some smaller entities like </value><value>ILM</value><value>[129]</value><value> and </value><value>ITA</value><value>.</value><value>[130]</value><value> The social news networking site </value><value>Reddit</value><value> is written entirely in Python.
</value><value>Python can serve as a </value><value>scripting language</value><value> for </value><value>web applications</value><value>, e.g., via </value><value>mod_wsgi</value><value> for the </value><value>Apache web server</value><value>.</value><value>[131]</value><value> With </value><value>Web Server Gateway Interface</value><value>, a standard API has evolved to facilitate these applications. </value><value>Web frameworks</value><value> like </value><value>Django</value><value>, </value><value>Pylons</value><value>, </value><value>Pyramid</value><value>, </value><value>TurboGears</value><value>, </value><value>web2py</value><value>, </value><value>Tornado</value><value>, </value><value>Flask</value><value>, </value><value>Bottle</value><value> and </value><value>Zope</value><value> support developers in the design and maintenance of complex applications. </value><value>Pyjs</value><value> and </value><value>IronPython</value><value> can be used to develop the client-side of Ajax-based applications. </value><value>SQLAlchemy</value><value> can be used as </value><value>data mapper</value><value> to a relational database. </value><value>Twisted</value><value> is a framework to program communications between computers, and is used (for example) by </value><value>Dropbox</value><value>.
</value><value>Libraries such as </value><value>NumPy</value><value>, </value><value>SciPy</value><value> and </value><value>Matplotlib</value><value> allow the effective use of Python in scientific computing,</value><value>[132]</value><value>[133]</value><value> with specialized libraries such as </value><value>Biopython</value><value> and </value><value>Astropy</value><value> providing domain-specific functionality. </value><value>SageMath</value><value> is a </value><value>mathematical software</value><value> with a </value><value>notebook interface</value><value> programmable in Python: its library covers many aspects of </value><value>mathematics</value><value>, including </value><value>algebra</value><value>, </value><value>combinatorics</value><value>, </value><value>numerical mathematics</value><value>, </value><value>number theory</value><value>, and </value><value>calculus</value><value>.
</value><value>Python has been successfully embedded in many software products as a scripting language, including in </value><value>finite element method</value><value> software such as </value><value>Abaqus</value><value>, 3D parametric modeler like </value><value>FreeCAD</value><value>, 3D animation packages such as </value><value>3ds Max</value><value>, </value><value>Blender</value><value>, </value><value>Cinema 4D</value><value>, </value><value>Lightwave</value><value>, </value><value>Houdini</value><value>, </value><value>Maya</value><value>, </value><value>modo</value><value>, </value><value>MotionBuilder</value><value>, </value><value>Softimage</value><value>, the visual effects compositor </value><value>Nuke</value><value>, 2D imaging programs like </value><value>GIMP</value><value>,</value><value>[134]</value><value> </value><value>Inkscape</value><value>, </value><value>Scribus</value><value> and </value><value>Paint Shop Pro</value><value>,</value><value>[135]</value><value> and </value><value>musical notation</value><value> programs like </value><value>scorewriter</value><value> and </value><value>capella</value><value>. </value><value>GNU Debugger</value><value> uses Python as a </value><value>pretty printer</value><value> to show complex structures such as C++ containers. </value><value>Esri</value><value> promotes Python as the best choice for writing scripts in </value><value>ArcGIS</value><value>.</value><value>[136]</value><value> It has also been used in several video games,</value><value>[137]</value><value>[138]</value><value> and has been adopted as first of the three available </value><value>programming languages</value><value> in </value><value>Google App Engine</value><value>, the other two being </value><value>Java</value><value> and </value><value>Go</value><value>.</value><value>[139]</value><value> Python is also used in </value><value>algorithmic trading</value><value> and quantitative finance.</value><value>[140]</value><value> Python can also be implemented in APIs of online brokerages that run on other languages by using wrappers.</value><value>[141]</value><value>
</value><value>Python is commonly used in </value><value>artificial intelligence</value><value> projects with the help of libraries like </value><value>TensorFlow</value><value>, </value><value>Keras</value><value> and </value><value>Scikit-learn</value><value>.</value><value>[142]</value><value>[143]</value><value>[144]</value><value>[145]</value><value> As a scripting language with </value><value>modular architecture</value><value>, simple syntax and rich text processing tools, Python is often used for </value><value>natural language processing</value><value>.</value><value>[146]</value><value>
</value><value>Many operating systems include Python as a standard component. It ships with most </value><value>Linux distributions</value><value>, </value><value>AmigaOS 4</value><value>, </value><value>FreeBSD</value><value>, </value><value>NetBSD</value><value>, </value><value>OpenBSD</value><value> and </value><value>macOS</value><value>, and can be used from the command line (terminal). Many Linux distributions use installers written in Python: </value><value>Ubuntu</value><value> uses the </value><value>Ubiquity</value><value> installer, while </value><value>Red Hat Linux</value><value> and </value><value>Fedora</value><value> use the </value><value>Anaconda</value><value> installer. </value><value>Gentoo Linux</value><value> uses Python in its </value><value>package management system</value><value>, </value><value>Portage</value><value>.
</value><value>Python is used extensively in the </value><value>information security</value><value> industry, including in exploit development.</value><value>[147]</value><value>[148]</value><value>
</value><value>Most of the </value><value>Sugar</value><value> software for the </value><value>One Laptop per Child</value><value> XO, now developed at </value><value>Sugar Labs</value><value>, is written in Python.</value><value>[149]</value><value> The </value><value>Raspberry Pi</value><value> </value><value>single-board computer</value><value> project has adopted Python as its main user-programming language.
</value><value>LibreOffice</value><value> includes Python, and intends to replace Java with Python. Its Python Scripting Provider is a core feature</value><value>[150]</value><value> since Version 4.0 from 7 February 2013.
</value><value>
</value><value>Languages influenced by Python</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Python's design and philosophy have influenced many other programming languages:
</value><value>
</value><value>Boo</value><value> uses indentation, a similar syntax, and a similar object model.</value><value>[151]</value><value>
</value><value>Cobra</value><value> uses indentation and a similar syntax, and its "Acknowledgements" document lists Python first among languages that influenced it.</value><value>[152]</value><value> However, Cobra directly supports </value><value>design-by-contract</value><value>, </value><value>unit tests</value><value>, and optional </value><value>static typing</value><value>.</value><value>[153]</value><value>
</value><value>CoffeeScript</value><value>, a programming language that cross-compiles to JavaScript, has Python-inspired syntax.</value><value>
</value><value>ECMAScript</value><value> borrowed </value><value>iterators</value><value> and </value><value>generators</value><value> from Python.</value><value>[154]</value><value>
</value><value>Go</value><value> is designed for the "speed of working in a dynamic language like Python"</value><value>[155]</value><value> and shares the same syntax for slicing arrays.</value><value>
</value><value>Groovy</value><value> was motivated by the desire to bring the Python design philosophy to </value><value>Java</value><value>.</value><value>[156]</value><value>
</value><value>Julia</value><value> was designed "with </value><value>true macros</value><value> [.. and to be] as usable for general programming as Python [and] should be as fast as C".</value><value>[22]</value><value> Calling to or from Julia is possible; to with PyCall.jl and a Python package pyjulia allows calling, in the other direction, from Python.</value><value>
</value><value>Kotlin</value><value> is a functional programming language with an interactive shell similar to Python. However, Kotlin is strongly typed with access to standard Java libraries.</value><value>[157]</value><value>
</value><value>Ruby</value><value>'s creator, </value><value>Yukihiro Matsumoto</value><value>, has said: "I wanted a scripting language that was more powerful than Perl, and more object-oriented than Python. That's why I decided to design my own language."</value><value>[158]</value><value>
</value><value>Swift</value><value>, a programming language developed by Apple, has some Python-inspired syntax.</value><value>[159]</value><value>
</value><value>GDScript</value><value>, dynamically typed programming language used to create video-games. It is extremely similar to Python with a few minor differences.</value><value>
</value><value>Python's development practices have also been emulated by other languages. For example, the practice of requiring a document describing the rationale for, and issues surrounding, a change to the language (in Python, a PEP) is also used in </value><value>Tcl</value><value>[160]</value><value> and </value><value>Erlang</value><value>.</value><value>[161]</value><value>
</value><value>Python received TIOBE's Programming Language of the Year awards in 2007 and 2010. The award is given to the language with the greatest growth in popularity over the year, as measured by the </value><value>TIOBE index</value><value>.</value><value>[162]</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Python programming portal</value><value>
</value><value>History of Python</value><value>
</value><value>Comparison of integrated development environments for Python</value><value>
</value><value>Comparison of programming languages</value><value>
</value><value>List of programming languages</value><value>
</value><value>pip (package manager)</value><value>
</value><value>Off-side rule</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Guttag, John V. (2016-08-12). </value><value>Introduction to Computation and Programming Using Python: With Application to Understanding Data</value><value>. MIT Press. </value><value>ISBN</value><value> </value><value>978-0-262-52962-4</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>Deily, Ned (20 October 2018). </value><value>"Python 3.7.1 and 3.6.7 are now available"</value><value>. </value><value>Python Insider</value><value>. The Python Core Developers</value><value>. Retrieved </value><value>20 October</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Peterson, Benjamin (1 May 2018). </value><value>"Python 2.7.15 released"</value><value>. </value><value>Python Insider</value><value>. The Python Core Developers</value><value>. Retrieved </value><value>1 May</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PEP 483 -- The Theory of Type Hints"</value><value>. </value><value>Python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>File extension .pyo was removed in Python 3.5. See </value><value>PEP 0488</value><value>
</value><value>
</value><value>^</value><value> </value><value>Holth, Moore (30 March 2014). </value><value>"PEP 0441 -- Improving Python ZIP Application Support"</value><value>. Retrieved </value><value>12 November</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Why was Python created in the first place?"</value><value>. </value><value>General Python FAQ</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>22 March</value><value> 2007</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kuchling, Andrew M. (22 December 2006). </value><value>"Interview with Guido van Rossum (July 1998)"</value><value>. </value><value>amk.ca</value><value>. Archived from </value><value>the original</value><value> on 1 May 2007</value><value>. Retrieved </value><value>12 March</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"itertools — Functions creating iterators for efficient looping — Python 3.7.1 documentation"</value><value>. </value><value>docs.python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido (1993). </value><value>"An Introduction to Python for UNIX/C Programmers"</value><value>. </value><value>Proceedings of the NLUUG najaarsconferentie (Dutch UNIX users group)</value><value>. </value><value>even though the design of C is far from ideal, its influence on Python is considerable.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Classes"</value><value>. </value><value>The Python Tutorial</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>20 February</value><value> 2012</value><value>. </value><value>It is a mixture of the class mechanisms found in C++ and Modula-3</value><value>
</value><value>
</value><value>^</value><value> </value><value>Lundh, Fredrik. </value><value>"Call By Object"</value><value>. </value><value>effbot.org</value><value>. Retrieved </value><value>21 November</value><value> 2017</value><value>. </value><value>replace "CLU" with "Python", "record" with "instance", and "procedure" with "function or method", and you get a pretty accurate description of Python's object model.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Simionato, Michele. </value><value>"The Python 2.3 Method Resolution Order"</value><value>. Python Software Foundation. </value><value>The C3 method itself has nothing to do with Python, since it was invented by people working on Dylan and it is described in a paper intended for lispers</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kuchling, A. M. </value><value>"Functional Programming HOWTO"</value><value>. </value><value>Python v2.7.2 documentation</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>9 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Schemenauer, Neil; Peters, Tim; Hetland, Magnus Lie (18 May 2001). </value><value>"PEP 255 – Simple Generators"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>9 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Smith, Kevin D.; Jewett, Jim J.; Montanaro, Skip; Baxter, Anthony (2 September 2004). </value><value>"PEP 318 – Decorators for Functions and Methods"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"More Control Flow Tools"</value><value>. </value><value>Python 3 documentation</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 July</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"CoffeeScript borrows chained comparisons from Python"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Genie Language - A brief guide"</value><value>. Retrieved </value><value>28 December</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Perl and Python influences in JavaScript"</value><value>. </value><value>www.2ality.com</value><value>. 24 February 2013</value><value>. Retrieved </value><value>15 May</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Rauschmayer, Axel. </value><value>"Chapter 3: The Nature of JavaScript; Influences"</value><value>. </value><value>O'Reilly, Speaking JavaScript</value><value>. Retrieved </value><value>15 May</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Why We Created Julia"</value><value>. </value><value>Julia website</value><value>. February 2012</value><value>. Retrieved </value><value>5 June</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Ring Team (4 December 2017). </value><value>"Ring and other languages"</value><value>. </value><value>ring-lang.net</value><value>. </value><value>ring-lang</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Bini, Ola (2007). </value><value>Practical JRuby on Rails Web 2.0 Projects: bringing Ruby on Rails to the Java platform</value><value>. Berkeley: APress. p. 3. </value><value>ISBN</value><value> </value><value>978-1-59059-881-8</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Lattner, Chris (3 June 2014). </value><value>"Chris Lattner's Homepage"</value><value>. Chris Lattner</value><value>. Retrieved </value><value>3 June</value><value> 2014</value><value>. </value><value>The Swift language is the product of tireless effort from a team of language experts, documentation gurus, compiler optimization ninjas, and an incredibly important internal dogfooding group who provided feedback to help refine and battle-test ideas. Of course, it also greatly benefited from the experiences hard-won by many other languages in the field, drawing ideas from Objective-C, Rust, Haskell, Ruby, Python, C#, CLU, and far too many others to list.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kuhlman, Dave. </value><value>"A Python Book: Beginning Python, Advanced Python, and Python Exercises"</value><value>. Archived from </value><value>the original</value><value> on 23 June 2012.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Guido van Rossum Stepping Down from Role as Python's Benevolent Dictator For Life | Linux Journal"</value><value>. </value><value>www.linuxjournal.com</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python boss Guido van Rossum steps down after 30 years"</value><value>. </value><value>The Inquirer</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"About Python"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 April</value><value> 2012</value><value>.</value><value>, second section "Fans of Python use the phrase "batteries included" to describe the standard library, which covers everything from asynchronous processing to zip files."</value><value>
</value><value>
</value><value>^</value><value> </value><value>"History and License"</value><value>. Retrieved </value><value>5 December</value><value> 2016</value><value>.</value><value> "All Python releases are Open Source"</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Venners, Bill (13 January 2003). </value><value>"The Making of Python"</value><value>. </value><value>Artima Developer</value><value>. Artima</value><value>. Retrieved </value><value>22 March</value><value> 2007</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido</value><value> (29 August 2000). </value><value>"SETL (was: Lukewarm about range literals)"</value><value>. </value><value>Python-Dev</value><value> (Mailing list)</value><value>. Retrieved </value><value>13 March</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido (20 January 2009). </value><value>"A Brief Timeline of Python"</value><value>. </value><value>The History of Python</value><value>. Google</value><value>. Retrieved </value><value>20 January</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Fairchild, Carlie (12 July 2018). </value><value>"Guido van Rossum Stepping Down from Role as Python's Benevolent Dictator For Life"</value><value>. Linux Journal</value><value>. Retrieved </value><value>13 July</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kuchling, A. M.; Zadka, Moshe (16 October 2000). </value><value>"What's New in Python 2.0"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python 3.0 Release"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>8 July</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido (5 April 2006). </value><value>"PEP 3000 – Python 3000"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>27 June</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Automated Python 2 to 3 code translation — Python Documentation"</value><value>. Retrieved </value><value>11 February</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PEP 373 -- Python 2.7 Release Schedule"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>9 January</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PEP 466 -- Network Security Enhancements for Python 2.7.x"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>9 January</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Google Open Source Blog: Grumpy: Go running Python!"</value><value>. 4 January 2017</value><value>. Retrieved </value><value>7 March</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>The Cain Gang Ltd. </value><value>"Python Metaclasses: Who? Why? When?"</value><value> </value><value>(PDF)</value><value>. Archived from </value><value>the original</value><value> </value><value>(PDF)</value><value> on 10 December 2009</value><value>. Retrieved </value><value>27 June</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"3.3. Special method names"</value><value>. </value><value>The Python Language Reference</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>27 June</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PyDBC: method preconditions, method postconditions and class invariants for Python"</value><value>. Retrieved </value><value>24 September</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Contracts for Python"</value><value>. Retrieved </value><value>24 September</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PyDatalog"</value><value>. Retrieved </value><value>22 July</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Hettinger, Raymond (30 January 2002). </value><value>"PEP 289 – Generator Expressions"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>19 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"6.5 itertools – Functions creating iterators for efficient looping"</value><value>. Docs.python.org</value><value>. Retrieved </value><value>22 November</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Peters, Tim (19 August 2004). </value><value>"PEP 20 – The Zen of Python"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Martelli, Alex; Ravenscroft, Anna; Ascher, David (2005). </value><value>Python Cookbook, 2nd Edition</value><value>. </value><value>O'Reilly Media</value><value>. p. 230. </value><value>ISBN</value><value> </value><value>978-0-596-00797-3</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python Culture"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"General Python FAQ"</value><value>. </value><value>Python v2.7.3 documentation</value><value>. Docs.python.org</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"15 Ways Python Is a Powerful Force on the Web"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"pprint - Data pretty printer - Python Documentation"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Goodger, David. </value><value>"Code Like a Pythonista: Idiomatic Python"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"How to think like a Pythonista"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Is Python a good language for beginning programmers?"</value><value>. </value><value>General Python FAQ</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>21 March</value><value> 2007</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Myths about indentation in Python"</value><value>. Secnetix.de</value><value>. Retrieved </value><value>19 April</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python 2.5 Release"</value><value>. </value><value>Python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Highlights: Python 2.5"</value><value>. </value><value>Python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Sweigart, Al (2010). "Appendix A: Differences Between Python 2 and 3". </value><value>Invent Your Own Computer Games with Python</value><value> (2 ed.). </value><value>ISBN</value><value> </value><value>978-0-9821060-1-3</value><value>. Retrieved </value><value>20 February</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido (22 April 2009). </value><value>"Tail Recursion Elimination"</value><value>. Neopythonic.blogspot.be</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido (9 February 2006). </value><value>"Language Design Is Not Just Solving Puzzles"</value><value>. </value><value>Artima forums</value><value>. Artima</value><value>. Retrieved </value><value>21 March</value><value> 2007</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido; Eby, Phillip J. (10 May 2005). </value><value>"PEP 342 – Coroutines via Enhanced Generators"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>19 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PEP 380"</value><value>. Python.org</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"division"</value><value>. </value><value>python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PEP 0465 -- A dedicated infix operator for matrix multiplication"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>1 January</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python 3.5.1 Release and Changelog"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>1 January</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Chapter 15. Expressions - 15.21.1. Numerical Equality Operators == and !="</value><value>. </value><value>Oracle Corporation</value><value>. Retrieved </value><value>28 August</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Chapter 15. Expressions - 15.21.3. Reference Equality Operators == and !="</value><value>. Oracle Corporation</value><value>. Retrieved </value><value>28 August</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido; Hettinger, Raymond (7 February 2003). </value><value>"PEP 308 – Conditional Expressions"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>13 July</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"4. Built-in Types — Python 3.6.3rc1 documentation"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>1 October</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"5.3. Tuples and Sequences — Python 3.7.1rc2 documentation"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>17 October</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"PEP 498 -- Literal String Interpolation"</value><value>. </value><value>python.org</value><value>. Retrieved </value><value>8 March</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Why must 'self' be used explicitly in method definitions and calls?"</value><value>. </value><value>Design and History FAQ</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>19 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Python Language Reference, section 3.3. New-style and classic classes, for release 2.7.1"</value><value>. Retrieved </value><value>12 January</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Type hinting for Python"</value><value>. LWN.net. 24 December 2014</value><value>. Retrieved </value><value>5 May</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"mypy - Optional Static Typing for Python"</value><value>. Retrieved </value><value>28 January</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zadka, Moshe; van Rossum, Guido (11 March 2001). </value><value>"PEP 237 – Unifying Long Integers and Integers"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 September</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PEP 465 -- A dedicated infix operator for matrix multiplication"</value><value>. </value><value>python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The tilde operator in Python - Stackoverflow"</value><value>. </value><value>stackoverflow.com</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"BitwiseOperators - Python Wiki"</value><value>. </value><value>wiki.python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zadka, Moshe; van Rossum, Guido (11 March 2001). </value><value>"PEP 238 – Changing the Division Operator"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>23 October</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Why Python's Integer Division Floors"</value><value>. Retrieved </value><value>25 August</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"round"</value><value>, </value><value>The Python standard library, release 2.7, §2: Built-in functions</value><value>, retrieved </value><value>14 August</value><value> 2011</value><value>
</value><value>
</value><value>^</value><value> </value><value>"round"</value><value>, </value><value>The Python standard library, release 3.2, §2: Built-in functions</value><value>, retrieved </value><value>14 August</value><value> 2011</value><value>
</value><value>
</value><value>^</value><value> </value><value>Beazley, David M. (2009). </value><value>Python Essential Reference</value><value> (4th ed.). p. 66.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kernighan, Brian W.; Ritchie, Dennis M. (1988). </value><value>The C Programming Language</value><value> (2nd ed.). p. 206.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Built-in Type"</value><value>. </value><value>docs.python.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Batista, Facundo. </value><value>"PEP 0327 -- Decimal Data Type"</value><value>. </value><value>Python.org</value><value>. Retrieved </value><value>26 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"What's New in Python 2.6 — Python v2.6.9 documentation"</value><value>. </value><value>docs.python.org</value><value>. Retrieved </value><value>26 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Piotrowski, Przemyslaw (July 2006). </value><value>"Build a Rapid Web Development Environment for Python Server Pages and Oracle"</value><value>. </value><value>Oracle Technology Network</value><value>. Oracle</value><value>. Retrieved </value><value>12 March</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Batista, Facundo (17 October 2003). </value><value>"PEP 327 – Decimal Data Type"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Eby, Phillip J. (7 December 2003). </value><value>"PEP 333 – Python Web Server Gateway Interface v1.0"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>19 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Debill, Erik. </value><value>"Module Counts"</value><value>. </value><value>ModuleCounts</value><value>. Retrieved </value><value>20 September</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"20+ Python Web Scraping Examples (Beautiful Soup &amp; Selenium) - Like Geeks"</value><value>. </value><value>likegeeks.com</value><value>. 5 December 2017</value><value>. Retrieved </value><value>12 March</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Enthought, Canopy. </value><value>"Canopy"</value><value>. </value><value>www.enthought.com</value><value>. Retrieved </value><value>20 August</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>van Rossum, Guido (5 June 2001). </value><value>"PEP 7 – Style Guide for C Code"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"CPython byte code"</value><value>. Docs.python.org</value><value>. Retrieved </value><value>16 February</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python 2.5 internals"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>19 April</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"An Interview with Guido van Rossum"</value><value>. Oreilly.com</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PyPy compatibility"</value><value>. Pypy.org</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"speed comparison between CPython and Pypy"</value><value>. Speed.pypy.org</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Application-level Stackless features — PyPy 2.0.2 documentation"</value><value>. Doc.pypy.org</value><value>. Retrieved </value><value>17 July</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Plans for optimizing Python"</value><value>. </value><value>Google Project Hosting</value><value>. Google. 15 December 2009</value><value>. Retrieved </value><value>24 September</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python on the Nokia N900"</value><value>. </value><value>Stochastic Geometry</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Nuitka Home | Nuitka Home"</value><value>. </value><value>nuitka.net</value><value>. Retrieved </value><value>18 August</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Murri, Riccardo (2013). </value><value>Performance of Python runtimes on a non-numeric scientific code</value><value>. European Conference on Python in Science (EuroSciPy). </value><value>arXiv</value><value>:</value><value>1404.6388</value><value>. </value><value>Bibcode</value><value>:</value><value>2014arXiv1404.6388M</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Warsaw, Barry; Hylton, Jeremy; Goodger, David (13 June 2000). </value><value>"PEP 1 – PEP Purpose and Guidelines"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>19 April</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Cannon, Brett. </value><value>"Guido, Some Guys, and a Mailing List: How Python is Developed"</value><value>. </value><value>python.org</value><value>. Python Software Foundation. Archived from </value><value>the original</value><value> on 1 June 2009</value><value>. Retrieved </value><value>27 June</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python Developer's Guide"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Norwitz, Neal (8 April 2002). </value><value>"[Python-Dev] Release Schedules (was Stability &amp; change)"</value><value>. Retrieved </value><value>27 June</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Aahz; Baxter, Anthony (15 March 2001). </value><value>"PEP 6 – Bug Fix Releases"</value><value>. </value><value>Python Enhancement Proposals</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>27 June</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python Buildbot"</value><value>. </value><value>Python Developer’s Guide</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 September</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>DeBill, Erik. </value><value>"Module Counts"</value><value>. </value><value>www.modulecounts.com</value><value>. Retrieved </value><value>20 August</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Whetting Your Appetite"</value><value>. </value><value>The Python Tutorial</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>20 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"In Python, should I use else after a return in an if block?"</value><value>. </value><value>Stack Overflow</value><value>. Stack Exchange. 17 February 2011</value><value>. Retrieved </value><value>6 May</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Lutz, Mark (2009). </value><value>Learning Python: Powerful Object-Oriented Programming</value><value>. O'Reilly Media, Inc. p. 17. </value><value>ISBN</value><value> </value><value>9781449379322</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Fehily, Chris (2002). </value><value>Python</value><value>. Peachpit Press. p. xv. </value><value>ISBN</value><value> </value><value>9780201748840</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"TIOBE Index"</value><value>. TIOBE - The Software Quality Company</value><value>. Retrieved </value><value>7 March</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>TIOBE Software Index (2015). </value><value>"TIOBE Programming Community Index Python"</value><value>. Retrieved </value><value>10 September</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Prechelt, Lutz (14 March 2000). </value><value>"An empirical comparison of C, C++, Java, Perl, Python, Rexx, and Tcl"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>30 August</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Quotes about Python"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>8 January</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Organizations Using Python"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>15 January</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python : the holy grail of programming"</value><value>. </value><value>CERN Bulletin</value><value>. CERN Publications (31/2006). 31 July 2006</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Shafer, Daniel G. (17 January 2003). </value><value>"Python Streamlines Space Shuttle Mission Design"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Tornado: Facebook's Real-Time Web Framework for Python - Facebook for Developers"</value><value>. </value><value>Facebook for Developers</value><value>. Retrieved </value><value>2018-06-19</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"How we use Python at Spotify"</value><value>. </value><value>Spotify Labs</value><value>. Retrieved </value><value>2018-07-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Fortenberry, Tim (17 January 2003). </value><value>"Industrial Light &amp; Magic Runs on Python"</value><value>. Python Software Foundation</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Taft, Darryl K. (5 March 2007). </value><value>"Python Slithers into Systems"</value><value>. </value><value>eWeek.com</value><value>. Ziff Davis Holdings</value><value>. Retrieved </value><value>24 September</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Usage statistics and market share of Python for websites"</value><value>. 2012</value><value>. Retrieved </value><value>18 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Oliphant, Travis (2007). </value><value>"Python for Scientific Computing"</value><value>. </value><value>Computing in Science and Engineering</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Millman, K. Jarrod; Aivazis, Michael (2011). </value><value>"Python for Scientists and Engineers"</value><value>. </value><value>Computing in Science and Engineering</value><value>. </value><value>13</value><value> (2): 9–12.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Installers for GIMP for Windows - Frequently Asked Questions"</value><value>. 26 July 2013. Archived from </value><value>the original</value><value> on 17 July 2013</value><value>. Retrieved </value><value>26 July</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"jasc psp9components"</value><value>. Archived from </value><value>the original</value><value> on 19 March 2008.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"About getting started with writing geoprocessing scripts"</value><value>. </value><value>ArcGIS Desktop Help 9.2</value><value>. Environmental Systems Research Institute. 17 November 2006</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>CCP porkbelly (24 August 2010). </value><value>"Stackless Python 2.7"</value><value>. </value><value>EVE Community Dev Blogs</value><value>. </value><value>CCP Games</value><value>. </value><value>As you may know, EVE has at its core the programming language known as Stackless Python.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Caudill, Barry (20 September 2005). </value><value>"Modding Sid Meier's Civilization IV"</value><value>. </value><value>Sid Meier's Civilization IV Developer Blog</value><value>. </value><value>Firaxis Games</value><value>. Archived from </value><value>the original</value><value> on 11 August 2010. </value><value>we created three levels of tools ... The next level offers Python and XML support, letting modders with more experience manipulate the game world and everything in it.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python Language Guide (v1.0)"</value><value>. </value><value>Google Documents List Data API v1.0</value><value>. Google. Archived from </value><value>the original</value><value> on 11 August 2010.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Python - Best Programming Language for Algorithmic Trading Systems"</value><value>. 9 March 2016</value><value>. Retrieved </value><value>3 October</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Trading with Interactive Brokers using Python: An IBPy Tutorial"</value><value>. 19 September 2016</value><value>. Retrieved </value><value>3 October</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Dean, Jeff</value><value>; Monga, Rajat;  et al. (November 9, 2015). </value><value>"TensorFlow: Large-scale machine learning on heterogeneous systems"</value><value> </value><value>(PDF)</value><value>. </value><value>TensorFlow.org</value><value>. Google Research</value><value>. Retrieved </value><value>November 10,</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Piatetsky, Gregory. </value><value>"Python eats away at R: Top Software for Analytics, Data Science, Machine Learning in 2018: Trends and Analysis"</value><value>. </value><value>KDnuggets</value><value>. KDnuggets</value><value>. Retrieved </value><value>30 May</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Who is using scikit-learn? — scikit-learn 0.20.1 documentation"</value><value>. </value><value>scikit-learn.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Jouppi, Norm. </value><value>"Google supercharges machine learning tasks with TPU custom chip"</value><value>. </value><value>Google Cloud Platform Blog</value><value>. Retrieved </value><value>May 19,</value><value> 2016</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Natural Language Toolkit"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Immunity: Knowing You're Secure"</value><value>. Archived from </value><value>the original</value><value> on 16 February 2009.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Corelabs site"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"What is Sugar?"</value><value>. Sugar Labs</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"4.0 New Features and Fixes"</value><value>. </value><value>LibreOffice.org</value><value>. </value><value>The Document Foundation</value><value>. 2013</value><value>. Retrieved </value><value>25 February</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Gotchas for Python Users"</value><value>. </value><value>boo.codehaus.org</value><value>. Codehaus Foundation. Archived from </value><value>the original</value><value> on 11 December 2008</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Esterbrook, Charles. </value><value>"Acknowledgements"</value><value>. </value><value>cobra-language.com</value><value>. Cobra Language</value><value>. Retrieved </value><value>7 April</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Esterbrook, Charles. </value><value>"Comparison to Python"</value><value>. </value><value>cobra-language.com</value><value>. Cobra Language</value><value>. Retrieved </value><value>7 April</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Proposals: iterators and generators [ES4 Wiki]"</value><value>. wiki.ecmascript.org. Archived from </value><value>the original</value><value> on 20 October 2007</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kincaid, Jason (10 November 2009). </value><value>"Google's Go: A New Programming Language That's Python Meets C++"</value><value>. TechCrunch</value><value>. Retrieved </value><value>29 January</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Strachan, James (29 August 2003). </value><value>"Groovy – the birth of a new dynamic language for the Java platform"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Working with the Command Line Compiler - Kotlin Programming Language"</value><value>. </value><value>Kotlin</value><value>. Retrieved </value><value>12 March</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"An Interview with the Creator of Ruby"</value><value>. Linuxdevcenter.com</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Lattner, Chris</value><value> (3 June 2014). </value><value>"Chris Lattner's Homepage"</value><value>. Chris Lattner</value><value>. Retrieved </value><value>3 June</value><value> 2014</value><value>. </value><value>I started work on the Swift Programming Language in July of 2010. I implemented much of the basic language structure, with only a few people knowing of its existence. A few other (amazing) people started contributing in earnest late in 2011, and it became a major focus for the Apple Developer Tools group in July 2013 [...] drawing ideas from Objective-C, Rust, Haskell, Ruby, Python, C#, CLU, and far too many others to list.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kupries, Andreas; Fellows, Donal K. (14 September 2000). </value><value>"TIP #3: TIP Format"</value><value>. </value><value>tcl.tk</value><value>. Tcl Developer Xchange</value><value>. Retrieved </value><value>24 November</value><value> 2008</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Gustafsson, Per; Niskanen, Raimo (29 January 2007). </value><value>"EEP 1: EEP Purpose and Guidelines"</value><value>. erlang.org</value><value>. Retrieved </value><value>19 April</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"TIOBE Programming Community Index for March 2012"</value><value>. TIOBE Software. March 2012</value><value>. Retrieved </value><value>25 March</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>
</value><value>Sources</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"Python for Artificial Intelligence"</value><value>. Wiki.python.org. 19 July 2012. Archived from </value><value>the original</value><value> on 1 November 2012</value><value>. Retrieved </value><value>3 December</value><value> 2012</value><value>.</value><value>
</value><value>Paine, Jocelyn, ed. (August 2005). </value><value>"AI in Python"</value><value>. </value><value>AI Expert Newsletter</value><value>. Amzi!</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>"PyAIML 0.8.5 : Python Package Index"</value><value>. Pypi.python.org</value><value>. Retrieved </value><value>17 July</value><value> 2013</value><value>.</value><value>
</value><value>Russell, Stuart J.</value><value> &amp; </value><value>Norvig, Peter</value><value> (2009). </value><value>Artificial Intelligence: A Modern Approach</value><value> (3rd ed.). Upper Saddle River, NJ: Prentice Hall. p. 1062. </value><value>ISBN</value><value> </value><value>978-0-13-604259-4</value><value>. Retrieved </value><value>11 February</value><value> 2012</value><value>.</value><value>
</value><value>Further reading</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Downey, Allen B. (May 2012). </value><value>Think Python: How to Think Like a Computer Scientist</value><value> (Version 1.6.6 ed.). </value><value>ISBN</value><value> </value><value>978-0-521-72596-5</value><value>.</value><value>
</value><value>Hamilton, Naomi (5 August 2008). </value><value>"The A-Z of Programming Languages: Python"</value><value>. </value><value>Computerworld</value><value>. Archived from </value><value>the original</value><value> on 29 December 2008</value><value>. Retrieved </value><value>31 March</value><value> 2010</value><value>.</value><value>
</value><value>Lutz, Mark (2013). </value><value>Learning Python</value><value> (5th ed.). O'Reilly Media. </value><value>ISBN</value><value> </value><value>978-0-596-15806-4</value><value>.</value><value>
</value><value>Pilgrim, Mark (2004). </value><value>Dive Into Python</value><value>. Apress. </value><value>ISBN</value><value> </value><value>978-1-59059-356-1</value><value>.</value><value>
</value><value>Pilgrim, Mark (2009). </value><value>Dive Into Python 3</value><value>. Apress. </value><value>ISBN</value><value> </value><value>978-1-4302-2415-0</value><value>. Archived from </value><value>the original</value><value> on 2011-10-17.</value><value>
</value><value>Summerfield, Mark (2009). </value><value>Programming in Python 3</value><value> (2nd ed.). Addison-Wesley Professional. </value><value>ISBN</value><value> </value><value>978-0-321-68056-3</value><value>.</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
    </value><value>Python (programming language)</value><value>at Wikipedia's </value><value>sister projects</value><value>
    </value><value>
    </value><value>
        </value><value>Media</value><value> from Wikimedia Commons</value><value>
            </value><value>Quotations</value><value> from Wikiquote</value><value>
            </value><value>Textbooks</value><value> from Wikibooks</value><value>
            </value><value>Resources</value><value> from Wikiversity</value><value>
            </value><value>
    </value><value>
</value><value>
</value><value>Official website</value><value> </value><value>
</value><value>Python</value><value> at </value><value>Curlie</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Programming languages</value><value>
</value><value>Comparison</value><value>
</value><value>Timeline</value><value>
</value><value>History</value><value>
</value><value>
</value><value>APL</value><value>
</value><value>Assembly</value><value>
</value><value>BASIC</value><value>
</value><value>C</value><value>
</value><value>C++</value><value>
</value><value>C#</value><value>
</value><value>COBOL</value><value>
</value><value>Fortran</value><value>
</value><value>Go</value><value>
</value><value>Groovy</value><value>
</value><value>Haskell</value><value>
</value><value>Java</value><value>
</value><value>JavaScript</value><value> (JS)</value><value>
</value><value>Kotlin</value><value>
</value><value>Lisp</value><value>
</value><value>Lua</value><value>
</value><value>Objective-C</value><value>
</value><value>OCaml</value><value>
</value><value>Pascal</value><value>
</value><value>Perl</value><value>
</value><value>PHP</value><value>
</value><value>Python</value><value>
</value><value>Ruby</value><value>
</value><value>Rust</value><value>
</value><value>Shell</value><value>
</value><value>Smalltalk</value><value>
</value><value>Swift</value><value>
</value><value>Visual Basic .NET</value><value> (VB.NET)</value><value>
</value><value>more...</value><value>
</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Lists</value><value>
</value><value>Alphabetical</value><value>
</value><value>Categorical</value><value>
</value><value>Generational</value><value>
</value><value>Non-English-based</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Python</value><value>Implementations</value><value>
</value><value>CircuitPython</value><value>
</value><value>CLPython</value><value>
</value><value>CPython</value><value>
</value><value>Cython</value><value>
</value><value>MicroPython</value><value>
</value><value>Numba</value><value>
</value><value>IronPython</value><value>
</value><value>Jython</value><value>
</value><value>Psyco</value><value>
</value><value>PyPy</value><value>
</value><value>Python for S60</value><value>
</value><value>Shed Skin</value><value>
</value><value>Stackless Python</value><value>
</value><value>Unladen Swallow</value><value>
</value><value>more</value><value>...</value><value>
</value><value>IDE</value><value>
</value><value>Boa</value><value>
</value><value>Eric Python IDE</value><value>
</value><value>IDLE</value><value>
</value><value>PyCharm</value><value>
</value><value>PyDev</value><value>
</value><value>SPE</value><value>
</value><value>Ninja-IDE</value><value>
</value><value>more</value><value>...</value><value>
</value><value>Topics</value><value>
</value><value>WSGI</value><value>
</value><value>
</value><value>software (list)</value><value>
</value><value>Python Software Foundation</value><value>
</value><value>PyCon</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Python</value><value> </value><value>web frameworks</value><value>
</value><value>BlueBream</value><value>
</value><value>Bottle</value><value>
</value><value>CherryPy</value><value>
</value><value>Django</value><value>
</value><value>Flask</value><value>
</value><value>Grok</value><value>
</value><value>Nagare</value><value>
</value><value>Nevow</value><value>
</value><value>Pyjs</value><value>
</value><value>Pylons</value><value>
</value><value>Pyramid</value><value>
</value><value>Quixote</value><value>
</value><value>Spyce</value><value>
</value><value>TACTIC</value><value>
</value><value>Tornado</value><value>
</value><value>TurboGears</value><value>
</value><value>TwistedWeb</value><value>
</value><value>Webware</value><value>
</value><value>web2py</value><value>
</value><value>Zope 2</value><value>
</value><value>more</value><value>...</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Free and open-source software</value><value>General</value><value>
</value><value>Alternative terms for free software</value><value>
</value><value>Comparison of open-source and closed-source software</value><value>
</value><value>Comparison of source code hosting facilities</value><value>
</value><value>Free software</value><value>
</value><value>Free software project directories</value><value>
</value><value>Gratis versus libre</value><value>
</value><value>Long-term support</value><value>
</value><value>Open-source software</value><value>
</value><value>Open-source software development</value><value>
</value><value>Outline</value><value>
</value><value>Software</value><value>packages</value><value>
</value><value>Audio</value><value>
</value><value>Bioinformatics</value><value>
</value><value>Codecs</value><value>
</value><value>Collaboration</value><value>
</value><value>Configuration management</value><value>
</value><value>Device drivers</value><value>
</value><value>Graphics</value><value>
</value><value>Wireless</value><value>
</value><value>Geophysics</value><value>
</value><value>Health</value><value>
</value><value>Mathematics</value><value>
</value><value>Operating systems</value><value>
</value><value>Programming languages</value><value>
</value><value>Routing</value><value>
</value><value>Statistics</value><value>
</value><value>Television</value><value>
</value><value>Video games</value><value>
</value><value>Web applications</value><value>
</value><value>Content management systems</value><value>
</value><value>E-commerce</value><value>
</value><value>Word processors</value><value>
</value><value>Android apps</value><value>
</value><value>iOS apps</value><value>
</value><value>Commercial</value><value>
</value><value>Trademarked</value><value>
</value><value>Formerly proprietary</value><value>
</value><value>Community</value><value>
</value><value>Free software movement</value><value>
</value><value>History</value><value>
</value><value>Open-source software movement</value><value>
</value><value>Organizations</value><value>
</value><value>Events</value><value>
</value><value>Licenses</value><value>
</value><value>AFL</value><value>
</value><value>Apache</value><value>
</value><value>APSL</value><value>
</value><value>Artistic</value><value>
</value><value>Beerware</value><value>
</value><value>Boost</value><value>
</value><value>BSD</value><value>
</value><value>CC0</value><value>
</value><value>CDDL</value><value>
</value><value>EPL</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>GNU GPL</value><value>
</value><value>GNU LGPL</value><value>
</value><value>ISC</value><value>
</value><value>MIT</value><value>
</value><value>MPL</value><value>
</value><value>Ms-PL/RL</value><value>
</value><value>Python</value><value>
</value><value>Python Software Foundation License</value><value>
</value><value>Sleepycat</value><value>
</value><value>Unlicense</value><value>
</value><value>WTFPL</value><value>
</value><value>zlib</value><value>
</value><value>Types and</value><value> standards</value><value>
</value><value>Comparison of free and open-source software licenses</value><value>
</value><value>Contributor License Agreement</value><value>
</value><value>Copyleft</value><value>
</value><value>Debian Free Software Guidelines</value><value>
</value><value>Definition of Free Cultural Works</value><value>
</value><value>Free license</value><value>
</value><value>The Free Software Definition</value><value>
</value><value>The Open Source Definition</value><value>
</value><value>Open-source license</value><value>
</value><value>Permissive software licence</value><value>
</value><value>Public domain</value><value>
</value><value>Viral license</value><value>
</value><value>
</value><value>Challenges</value><value>
</value><value>Binary blob</value><value>
</value><value>Digital rights management</value><value>
</value><value>Hardware restrictions</value><value>
</value><value>License proliferation</value><value>
</value><value>Mozilla software rebranding</value><value>
</value><value>Proprietary software</value><value>
</value><value>SCO/Linux controversies</value><value>
</value><value>Secure boot</value><value>
</value><value>Software patents</value><value>
</value><value>Software security</value><value>
</value><value>Trusted Computing</value><value>
</value><value>Related topics</value><value>
</value><value>Forking</value><value>
</value><value>GNU Manifesto</value><value>
</value><value>Microsoft Open Specification Promise</value><value>
</value><value>Open-core model</value><value>
</value><value>Open-source hardware</value><value>
</value><value>Shared Source Initiative</value><value>
</value><value>Source-available software</value><value>
</value><value>The Cathedral and the Bazaar</value><value>
</value><value>Revolution OS</value><value>
</value><value>
</value><value> </value><value>Book</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>Portal</value><value>
</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>BNF</value><value>: </value><value>cb13560465c</value><value> </value><value>(data)</value><value>
</value><value>GND</value><value>: </value><value>4434275-5</value><value>
</value><value>LCCN</value><value>: </value><value>sh96008834</value><value>
</value><value>SUDOC</value><value>: </value><value>051626225</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 13 December 2018, at 19:31</lastUpdated></item>
<item><url>https://zh.wikipedia.org/wiki/%E7%BB%88%E8%BA%AB%E4%BB%81%E6%85%88%E7%8B%AC%E8%A3%81%E8%80%85</url><title>终身仁慈独裁者</title><text><value>终身仁慈独裁者</value><value>（</value><value>英语：</value><value>Benevolent Dictator For Life</value><value>，缩写</value><value>BDFL</value><value>）是少数</value><value>开源软件</value><value>开发者所拥有的头衔。他们通常是某一项目的创始人，并在该项目社区出现争议时拥有最终的决定权。这一称号诞生于1995年，最初用来指</value><value>Python语言</value><value>的创始人</value><value>吉多·范罗苏姆</value><value>。</value><value>[1]</value><value>[2]</value><value>当时在范罗苏姆刚加入</value><value>全国研究创新联合会</value><value>（</value><value>英语</value><value>：</value><value>Corporation for National Research Initiatives</value><value>）</value><value>后，</value><value>肯马·内梅尔</value><value>（</value><value>英语</value><value>：</value><value>Ken Manheimer</value><value>）</value><value>在一封邮件中试图创立一个监管Python语言开发的半正式团体。他在该邮件中首次使用了BDFL这一称呼，并戏称范罗苏姆为“首任临时BDFL”。</value><value>[1]</value><value>2018年7月12日，范罗苏姆宣布不再出任Python语言的BDFL。</value><value>[3]</value><value>
</value><value>值得一提的是，BDFL与另一个用来指开源运动领导人的称呼“仁慈的独裁者”（benevolent dictator）的含义并不一致。后者因</value><value>埃里克·雷蒙</value><value>的《</value><value>开拓智域</value><value>》（Homesteading the Noosphere）一文而广为人知。雷蒙在文中提到，开源软件运动的本质会促使“独裁者”保持仁慈，否则巨大的分歧会导致项目被</value><value>复刻</value><value>并由新的领导所掌管。</value><value>[4]</value><value> 
</value><value>
</value><value>被称为BDFL的人物列表</value><value>[</value><value>编辑</value><value>]</value><value>
</value><value>

</value><value>
</value><value>姓名
</value><value>
</value><value>项目
</value><value>
</value><value>参考
</value><value>
</value><value>
</value><value>Juan Benet
</value><value>
</value><value>星际文件系统</value><value>
</value><value>
</value><value>[5]</value><value>
</value><value>
</value><value>
</value><value>Sylvain Benner
</value><value>
</value><value>Spacemacs</value><value>
</value><value>
</value><value>[6]</value><value>
</value><value>
</value><value>
</value><value>维塔利克·布特林</value><value>
</value><value>
</value><value>以太坊</value><value>
</value><value>
</value><value>[7]</value><value>
</value><value>
</value><value>
</value><value>Dries Buytaert
</value><value>
</value><value>content management framework
</value><value>
</value><value>[8]</value><value>
</value><value>
</value><value>
</value><value>Evan Czaplicki
</value><value>
</value><value>Elm</value><value>
</value><value>
</value><value>[9]</value><value>[10]</value><value>
</value><value>
</value><value>
</value><value>大卫·汉森</value><value>
</value><value>
</value><value>Ruby on Rails</value><value>
</value><value>
</value><value>[11]</value><value>
</value><value>
</value><value>
</value><value>Rich Hickey
</value><value>
</value><value>Clojure</value><value>
</value><value>
</value><value>[12]</value><value>
</value><value>
</value><value>
</value><value>Adrian Holovaty </value><value>Jacob Kaplan-Moss
</value><value>
</value><value>Django</value><value>
</value><value>
</value><value>[13]</value><value>
</value><value>
</value><value>
</value><value>克里斯·拉特納</value><value>
</value><value>
</value><value>Swift</value><value>
</value><value>
</value><value>[14]</value><value>
</value><value>
</value><value>
</value><value>Xavier Leroy
</value><value>
</value><value>OCaml</value><value>
</value><value>
</value><value>[15]</value><value>[16]</value><value>
</value><value>
</value><value>
</value><value>松本行弘</value><value>
</value><value>
</value><value>Ruby</value><value>
</value><value>
</value><value>[17]</value><value>
</value><value>
</value><value>
</value><value>Wes McKinney
</value><value>
</value><value>Pandas</value><value>
</value><value>
</value><value>[18]</value><value>
</value><value>
</value><value>
</value><value>布萊姆·米勒</value><value>
</value><value>
</value><value>Vim</value><value>
</value><value>
</value><value>[19]</value><value>
</value><value>
</value><value>
</value><value>马特·查尔斯·穆伦维格</value><value>
</value><value>
</value><value>WordPress</value><value>
</value><value>
</value><value>[20]</value><value>
</value><value>
</value><value>
</value><value>Martin Odersky
</value><value>
</value><value>Scala</value><value>
</value><value>
</value><value>[21]</value><value>
</value><value>
</value><value>
</value><value>Taylor Otwell
</value><value>
</value><value>Laravel</value><value>
</value><value>
</value><value>[22]</value><value>[23]</value><value>
</value><value>
</value><value>
</value><value>西奧·德·若特</value><value>
</value><value>
</value><value>OpenBSD</value><value>
</value><value>
</value><value>[24]</value><value>
</value><value>
</value><value>
</value><value>Daniel Robbins
</value><value>
</value><value>Funtoo Linux</value><value>
</value><value>
</value><value>[25]</value><value>
</value><value>
</value><value>
</value><value>彤·羅森達爾</value><value>
</value><value>
</value><value>Blender</value><value>
</value><value>
</value><value>[26]</value><value>
</value><value>
</value><value>
</value><value>Sébastien Ros
</value><value>
</value><value>Orchard计划</value><value>
</value><value>
</value><value>[27]</value><value>
</value><value>
</value><value>
</value><value>吉多·范罗苏姆</value><value>
</value><value>
</value><value>Python</value><value>
</value><value>
</value><value>[11]</value><value>[28]</value><value>[3]</value><value>
</value><value>
</value><value>
</value><value>马克·沙特尔沃思</value><value>
</value><value>
</value><value>Ubuntu</value><value>
</value><value>
</value><value>[29]</value><value>
</value><value>
</value><value>
</value><value>Don Syme
</value><value>
</value><value>F♯</value><value>
</value><value>
</value><value>[30]</value><value>
</value><value>
</value><value>
</value><value>林纳斯·托瓦兹</value><value>
</value><value>
</value><value>Linux</value><value>
</value><value>
</value><value>[11]</value><value>[31]</value><value>
</value><value>
</value><value>
</value><value>José Valim
</value><value>
</value><value>Elixir</value><value>
</value><value>
</value><value>[32]</value><value>
</value><value>
</value><value>
</value><value>Pauli Virtanen
</value><value>
</value><value>SciPy</value><value>
</value><value>
</value><value>[33]</value><value>[34]</value><value>
</value><value>
</value><value>
</value><value>Patrick Volkerding
</value><value>
</value><value>Slackware</value><value>
</value><value>
</value><value>[35]</value><value>
</value><value>
</value><value>
</value><value>Nathan Voxland
</value><value>
</value><value>Liquibase</value><value>
</value><value>
</value><value>[36]</value><value>
</value><value>
</value><value>
</value><value>Shaun Walker
</value><value>
</value><value>DotNetNuke</value><value>
</value><value>
</value><value>[37]</value><value>
</value><value>
</value><value>
</value><value>拉里·沃尔</value><value>
</value><value>
</value><value>Perl</value><value>
</value><value>
</value><value>[38]</value><value>
</value><value>
</value><value>
</value><value>Jemery Soller
</value><value>
</value><value>Redox</value><value>
</value><value>
</value><value>[39]</value><value>
</value><value>
</value><value>参考文献</value><value>[</value><value>编辑</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>1.0</value><value> </value><value>1.1</value><value> </value><value>Guido van Rossum. </value><value>Origin of BDFL</value><value>. July 31, 2008 </value><value> [</value><value>August 1,</value><value> 2008]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Python Creator Scripts Inside Google</value><value>. www.eweek.com.  </value><value> [</value><value>May 13,</value><value> 2008]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^ </value><value>3.0</value><value> </value><value>3.1</value><value> </value><value>Guido  steps down as BDFL</value><value>. Python.org. 2018-07-12.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Eric S. Raymond. </value><value>Homesteading the Noosphere</value><value>.  </value><value> [</value><value>August 1,</value><value> 2008]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Understanding the IPFS White Paper part 2</value><value>.  </value><value> [</value><value>2017-08-21</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Spacemacs COMMUNITY.org</value><value>.  </value><value> [</value><value>2017-08-24</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>"</value><value>Ethereum's Boy King Is Thinking About Giving Up the Mantle</value><value>"</value><value>
</value><value>
</value><value>^</value><value> </value><value>Randy Fay, "</value><value>How Do Open Source Communities Govern Themselves?</value><value>"</value><value>
</value><value>
</value><value>^</value><value> </value><value>56: Ember vs. Elm: The Showdown with Philip Poots | The Frontside Podcast</value><value>. The Frontside Podcast.  </value><value> [</value><value>2017-08-14</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>elm-conf, </value><value>"Code is the Easy Part" by Evan Czaplicki</value><value>, 2016-09-19 </value><value> [</value><value>2017-08-14</value><value>]</value><value> </value><value>
</value><value>
</value><value>^ </value><value>11.0</value><value> </value><value>11.1</value><value> </value><value>11.2</value><value> </value><value>Constine, Josh. </value><value>Dropbox Hires Away Google’s Guido Van Rossum, The Father Of Python</value><value>. TechCrunch. December 7, 2012 </value><value> [</value><value>June 1,</value><value> 2015]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Clojure JIRA Workflow</value><value>.  </value><value> [</value><value>3 October</value><value> 2015]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Adrian and Jacob retiring as Django BDFLs</value><value>. Adrian Holovaty. January 12, 2014 </value><value> [</value><value>June 14,</value><value> 2015]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Apple Launches Swift, A New Programming Language For Writing iOS And OS X Apps</value><value>.  </value><value> [</value><value>2018-04-10</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>A History of OCaml | OCaml.org</value><value>.  </value><value> [</value><value>2015-09-18</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>OCaml Infrastructure mailing list</value><value>.  </value><value> [</value><value>2015-09-18</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>A Ruby Design Process</value><value>.  </value><value> [</value><value>2016-04-17</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>pandas 0.20.3 documentation: Tutorials</value><value>.  </value><value> [</value><value>2017-07-24</value><value>]</value><value>.</value><value> </value><value> "Wes McKinney’s (pandas BDFL) blog"</value><value>
</value><value>
</value><value>^</value><value> </value><value>Why Neovim is Better than Vim</value><value>.  </value><value> [</value><value>30 September</value><value> 2015]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Thesis, Automattic, and WordPress | Post Status</value><value>.  </value><value> [</value><value>2015-07-24</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Programming in Scala Leaps onto the World Stage!</value><value>.  </value><value> [</value><value>2015-11-25</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Taylor Otwell, Twitter</value><value>. Taylor Otwell. October 9, 2014 </value><value> [</value><value>October 9,</value><value> 2014]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Taylor Otwell, Creator of the Laravel PHP Framework</value><value>. August 5, 2014 </value><value> [</value><value>August 5,</value><value> 2014]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Hildebrand, Matthew. </value><value>Interview: Theo de Raadt on Industry and Free Software</value><value>. The Epoch Times. The Epoch Times. 5 July 2005 </value><value> [</value><value>20 June</value><value> 2015]</value><value>. （</value><value>原始内容</value><value>存档于June 21, 2015）.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Welcome to Funtoo Linux</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>New Developer Info</value><value>.  </value><value> [</value><value>21 September</value><value> 2015]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Orchard Project Steering Committee</value><value>. （</value><value>原始内容</value><value>存档于August 12, 2015）.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>The Four Hundred—Next Up on the System i: Python</value><value>. www.itjungle.com.  </value><value> [</value><value>May 13,</value><value> 2008]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Ubuntu carves niche in Linux landscape</value><value>. </value><value>CNET</value><value>. （</value><value>原始内容</value><value>存档于6 November 2015）.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Contributing to the F# Language and Compiler</value><value>.  </value><value> [</value><value>29 September</value><value> 2015]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Dee-Ann LeBlanc. </value><value>Linux For Dummies</value><value> 7th. John Wiley &amp; Sons. 31 July 2006: 15. </value><value>ISBN</value><value> 978-0-470-04793-4</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Elixir Companies</value><value>.  </value><value> [</value><value>2017-11-01</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>SciPy 1.0.0</value><value>.  </value><value> [</value><value>2017-10-27</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>SciPy project governance</value><value>.  </value><value> [</value><value>2017-10-27</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Stories of Linux: A Look at Slackware Linux</value><value>. </value><value>linux.com</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>User and Developer Community | Post Status</value><value>.  </value><value> [</value><value>2015-08-13</value><value>]</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Book: Building Websites with DotNetNuke 5, Michael Washington and Ian Lackey, Packt Publishing. Page 14 "The core team comprises individuals invited to join the team by Shaun Walker, whom they affectionately call the "Benevolent Dictator"."</value><value>
</value><value>
</value><value>^</value><value> </value><value>The Art of Ballistic Programming</value><value>. （</value><value>原始内容</value><value>存档于June 17, 2013）.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>CONTRIBUTING.md · master · redox-os / redox</value><value>.</value><value> </value><value>
</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> 本页面最后修订于2018年7月13日 (星期五) 18:40。</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/David_A._Wheeler</url><title>David A. Wheeler</title><text><value>Not to be confused with </value><value>David Wheeler</value><value>, also a computer scientist.</value><value>
</value><value>David A. Wheeler</value><value>Born</value><value>1965 (age 52–53)</value><value>Alma mater</value><value>George Mason University</value><value>Scientific career</value><value>Thesis</value><value>Fully Countering Trusting Trust through Diverse Double-Compiling</value><value> </value><value>(2009)</value><value>Doctoral advisor</value><value>Daniel A. Menascé, Ravi Sandhu</value><value>
</value><value>
</value><value>David A. Wheeler</value><value> (born 1965) is a </value><value>computer scientist</value><value>.</value><value>[1]</value><value>[2]</value><value>  He works on </value><value>open source software</value><value>, </value><value>free-libre software</value><value>, and </value><value>computer security</value><value>.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Open Source Software</value><value>
</value><value>2</value><value> </value><value>External Publications</value><value>
</value><value>3</value><value> </value><value>References</value><value>
</value><value>4</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Open Source Software</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In 2000, Wheeler </value><value>self-published</value><value> "</value><value>Why Open Source Software / Free Software? Look at the Numbers!</value><value>",</value><value>[3]</value><value> a text where he argued that considering FLOSS is justified. According to Google Scholar, this article has been cited over 400 times in other scholarly works </value><value>[4]</value><value> and in the 2004 report of the California Performance Review.</value><value>[5]</value><value> Wheeler was </value><value>interviewed</value><value> about his webpage by </value><value>Linux.com</value><value>.</value><value>[6]</value><value>
</value><value>In 2001, Wheeler published a webpage</value><value>[7]</value><value> where he measured the </value><value>source lines of code</value><value> of the </value><value>Red Hat</value><value> </value><value>Linux distribution</value><value> version 7.1. By applying conventional cost-estimating techniques, he concluded that it would cost more than a billion </value><value>United States dollars</value><value> to develop this distribution by conventional proprietary means. This work has inspired one person to measure other FLOSS systems, the </value><value>Debian</value><value> distribution.</value><value>[8]</value><value>
</value><value>In 2006, Wheeler posted "</value><value>Nearly all FLOSS is Commercial</value><value>"</value><value>[9]</value><value> on his webpage. This is a critical issue in </value><value>U.S. federal government</value><value> acquisitions, because the U.S. government has laws and policies that prefer the acquisition of commercial items.  He argues that FLOSS is defined as commercial software by the government's own rules, and believes that no one else had clearly articulated that before him.
</value><value>
</value><value>External Publications</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Besides posting writings on his webpage, Wheeler has had some work published in at least two occasions (none of those related to open source software):
</value><value>
</value><value>Wheeler David A.; Brykczynski Bill; Meeson Reginald N.; Meeson Jr. Reginald N. (1996). </value><value>Software Inspection: An Industry Best Practice</value><value>. IEEE Computer Society Press. p. 293. </value><value>ISBN</value><value> </value><value>0-8186-7340-0</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>Wheeler, David A. (1997). </value><value>Ada 95: The Lovelace Tutorial</value><value>. Springer. p. 292. </value><value>ISBN</value><value> </value><value>0-387-94801-5</value><value>.</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>Wheeler, David A. (2009). </value><value>Fully Countering Trusting Trust through Diverse Double-Compiling</value><value> (Ph.D.). George Mason University. p. 184.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Raphaël Bauduin (2001). </value><value>"A 'Secure Programming' interview"</value><value>. Archived from </value><value>the original</value><value> on 2002-06-05.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Wheeler, David A. (2000). </value><value>"Why Open Source Software / Free Software (OSS/FS, FOSS, or FLOSS)?  Look at the Numbers!"</value><value>. Self-published on David's own webpage.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Google Scholar, Wheeler: Why Open Source Software/Free Software (OSS/FS)? Look at the Numbers!"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Explore Open Source Alternatives"</value><value>. </value><value>The California Performance Review</value><value>. State of California. 2004. Archived from </value><value>the original</value><value> on 2006-09-23.</value><value>
</value><value>
</value><value>^</value><value> </value><value>'Roblimo', Robin (2004-04-07). </value><value>"How useful are 'proprietary vs. open source' TCO studies?"</value><value>. Retrieved </value><value>2008-09-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Wheeler, David A. (2001). </value><value>"More than a Gigabuck: Estimating GNU/Linux's Size"</value><value>. Self-published on David's own webpage.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Amor-Iglesias, Juan-José; Jesús M. González-Barahona; Gregorio Robles-Martínez; Israel Herráiz-Tabernero (June 2005). </value><value>"Measuring Libre Software Using Debian 3.1 (Sarge) as A Case Study: Preliminary Results"</value><value> </value><value>(PDF)</value><value>. </value><value>Upgrade</value><value>. Novática on behalf of CEPIS (Council of European Professional Informatics Societies). </value><value>VI</value><value> (3): 13–16. </value><value>ISSN</value><value> </value><value>1684-5285</value><value>. Archived from </value><value>the original</value><value> </value><value>(PDF)</value><value> on 2007-04-28</value><value>. Retrieved </value><value>2008-09-14</value><value>.</value><value> </value><value>
</value><value>
</value><value>^</value><value> </value><value>Wheeler, David A. (2006–2008). </value><value>"Commercial” is not the opposite of Free-Libre / Open Source Software (FLOSS)"</value><value>. Self-published on David's own webpage.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Personal homepage</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>ISNI</value><value>: </value><value>0000 0000 3534 8630</value><value>
</value><value>LCCN</value><value>: </value><value>n95089850</value><value>
</value><value>VIAF</value><value>: </value><value>27798245</value><value>
</value><value> </value><value>WorldCat Identities</value><value>: </value><value>27798245</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 20 July 2018, at 11:57</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/386BSD</url><title>386BSD</title><text><value>Not to be confused with </value><value>BSD/386</value><value>, the commercial Unix sold by BSDi.</value><value>
</value><value>This article has multiple issues.</value><value> Please help </value><value>improve it</value><value> or discuss these issues on the </value><value>talk page</value><value>. </value><value>(</value><value>Learn how and when to remove these template messages</value><value>)</value><value>
</value><value>
      </value><value>This article </value><value>needs additional citations for </value><value>verification</value><value>.</value><value> Please help </value><value>improve this article</value><value> by </value><value>adding citations to reliable sources</value><value>. Unsourced material may be challenged and removed.</value><value>  </value><value>(June 2012)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>This article's </value><value>lead section</value><value> does not adequately </value><value>summarize</value><value> key points of its contents</value><value>.</value><value> Please consider expanding the lead to </value><value>provide an accessible overview</value><value> of all important aspects of the article. Please discuss this issue on the article's </value><value>talk page</value><value>.</value><value>  </value><value>(December 2012)</value><value>
    </value><value>
</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>386BSD</value><value>386BSD Release 0.1 installer ("Tiny 386BSD")</value><value>Developer</value><value>William Jolitz</value><value>Lynne Jolitz</value><value>OS family</value><value>Unix-like</value><value> (</value><value>BSD</value><value>)</value><value>Working state</value><value>Historical</value><value>Source model</value><value>Open source</value><value>Initial release</value><value>0.0</value><value>[1]</value><value> March 12, 1992</value><value>; 26 years ago</value><value> (</value><value>1992-03-12</value><value>)</value><value>Latest release</value><value>2.0 / August 2016</value><value>; 2 years ago</value><value> (</value><value>2016-08</value><value>)</value><value>Platforms</value><value>x86</value><value>License</value><value>BSD license</value><value>Official website</value><value>www</value><value>.386bsd</value><value>.org</value><value>
</value><value>386BSD</value><value>, sometimes called "</value><value>Jolix</value><value>",</value><value>[2]</value><value> is a discontinued </value><value>free</value><value> </value><value>Unix-like</value><value> </value><value>operating system</value><value> based on </value><value>BSD</value><value>, first released in 1992. It ran on </value><value>PC-compatible</value><value> computer systems based on the </value><value>32-bit</value><value> </value><value>Intel 80386</value><value> </value><value>microprocessor</value><value>. 386BSD innovations include </value><value>role-based security</value><value>, </value><value>ring buffers</value><value>, self-ordered configuration and </value><value>modular kernel</value><value> design. The BSDs for PC descend from it.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>
</value><value>1.1</value><value> </value><value>FreeBSD and NetBSD</value><value>
</value><value>1.2</value><value> </value><value>Lawsuit</value><value>
</value><value>
</value><value>
</value><value>2</value><value> </value><value>Release 1.0</value><value>
</value><value>3</value><value> </value><value>Release 2.0</value><value>
</value><value>4</value><value> </value><value>Relationship with BSD/386</value><value>
</value><value>5</value><value> </value><value>Copyright and use of the code</value><value>
</value><value>6</value><value> </value><value>Further reading</value><value>
</value><value>7</value><value> </value><value>References</value><value>
</value><value>8</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>386BSD was written mainly by Berkeley alumni </value><value>Lynne Jolitz</value><value> and </value><value>William Jolitz</value><value>. William Jolitz had considerable experience with prior BSD releases while at the University of California at Berkeley (2.8 and 2.9BSD) and both contributed code developed at </value><value>Symmetric Computer Systems</value><value> during the 1980s, to Berkeley. Work on porting 4.3BSD-Reno and later 4.3BSD Net/2 to the Intel 80386 was done for the University of California by William Jolitz at Berkeley. 4.3BSD Net/2 was an incomplete non-operational release, with portions withheld by the University of California as </value><value>encumbered</value><value> (i.e. subject to an </value><value>AT&amp;T UNIX</value><value> </value><value>source code</value><value> license). The 386BSD releases made to the public beginning in 1992 were based on portions of the 4.3BSD Net/2 release coupled with additional code (see "Missing Pieces I and II", </value><value>Dr. Dobb's Journal</value><value>, May–June 1992) written by William and Lynne Jolitz to make a complete operational release.
</value><value>The port began in 1989 and the first, incomplete traces of the port can be found in 4.3BSD Net/2 of 1991. The port was made possible as </value><value>Keith Bostic</value><value>, partly influenced by </value><value>Richard Stallman</value><value>, had started to remove proprietary AT&amp;T out of BSD in 1988.</value><value>[3]</value><value> The port was first released in March 1992 (version 0.0</value><value>[1]</value><value>) and in a much more usable version on July 14, 1992 (version 0.1</value><value>[4]</value><value>). The porting process with code was extensively documented in an 18-part series written by Lynne Jolitz and William Jolitz in </value><value>Dr. Dobb's Journal</value><value> beginning in January 1991.
</value><value>
</value><value>FreeBSD and NetBSD</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>After the release of 386BSD 0.1,</value><value>[4]</value><value> a group of users began collecting bug fixes and enhancements, releasing them as an unofficial </value><value>patchkit</value><value>. Due to differences of opinion between the Jolitzes and the patchkit maintainers over the future direction and release schedule of 386BSD,</value><value>[5]</value><value> the maintainers of the patchkit founded the </value><value>FreeBSD</value><value> project in 1993 to continue their work.</value><value>[6]</value><value> Around the same time, the </value><value>NetBSD</value><value> project was founded by a different group of 386BSD users, with the aim of unifying 386BSD with other strands of BSD development into one multi-platform system. Both projects continue to this day.
</value><value>
</value><value>Lawsuit</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Due to a lawsuit (</value><value>USL</value><value> v. Regents of the University of California), some potentially so-called </value><value>encumbered</value><value> source was agreed to have been distributed within the </value><value>Berkeley Software Distribution</value><value> Net/2 from the University of California, and a subsequent release (1993, 4.4BSD-Lite) was made by the University to correct this issue. However, 386BSD, </value><value>Dr. Dobb's Journal</value><value>, and William Jolitz and Lynne Jolitz were never parties to these or subsequent lawsuits or settlements arising from this dispute with the University of California, and continued to publish and work on the 386BSD code base before, during, and after these lawsuits without limitation. There has never been any legal filings or claims from the University, USL, or other responsible parties with respect to 386BSD. Finally, no code developed for 386BSD done by William Jolitz and Lynne Jolitz was at issue in any of these lawsuits.
</value><value>
</value><value>Release 1.0</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In late 1994, a finished version 386BSD Release 1.0 was distributed by </value><value>Dr. Dobb's Journal</value><value> on CDROM only due to the immense size (600 </value><value>MB</value><value>) of the release (the </value><value>"386BSD Reference CD-ROM"</value><value>) and was a best-selling CDROM for three years (1994–1997). 386BSD Release 1.0 contained a completely new kernel design and implementation, and began the process to incorporate recommendations made by earlier Berkeley designers that had never been attempted in BSD.
</value><value>
</value><value>Release 2.0</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>On August 5, 2016 an update was pushed to the 386BSD </value><value>github</value><value> by developer Ben Jolitz, named version 2.0.</value><value>[7]</value><value>[8]</value><value> Release 2.0 built upon the modular framework to create self-healing components. However, as of  March 16, 2017</value><value>[update]</value><value>, almost all of the documentation remains the same as version 1.0, and a change log was not available.
</value><value>
</value><value>Relationship with BSD/386</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>386BSD is often confused with </value><value>BSD/386</value><value> which was a different project developed by </value><value>BSDi</value><value>, a Berkeley </value><value>spinout</value><value>, starting in 1991. BSD/386 used the same 386BSD code contributed to the University of California on </value><value>4.3BSD NET/2</value><value>. Although Jolitz worked briefly for </value><value>UUNET</value><value> (which later spun out BSDi) in 1991, the work he did for them diverged from that contributed to the University of California and did not appear in 386BSD. Instead, William Jolitz gave regular code updates to Donn Seeley of BSDi for packaging and testing, and returned all materials when William Jolitz left that company following fundamental disagreements on company direction and goals.
</value><value>
</value><value>Copyright and use of the code</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>All rights with respect to 386BSD and JOLIX are now held exclusively by William Jolitz and Lynne Jolitz.</value><value>[</value><value>dubious</value><value> </value><value> – </value><value>discuss</value><value>]</value><value> 386BSD public releases ended in 1997 since code is now available from the many 386BSD-derived </value><value>operating systems</value><value> today, along with several derivatives thereof (such as </value><value>Apple</value><value>'s </value><value>Darwin</value><value> and </value><value>OpenBSD</value><value>). Portions of 386BSD may be found in other open systems such as </value><value>OpenSolaris</value><value>.
</value><value>
</value><value>Further reading</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Jolitz, William F. and Jolitz, Lynne Greer: Porting UNIX to the 386: A Practical Approach, 18-part series in </value><value>Dr. Dobb's Journal</value><value>, January 1991 – July 1992:</value><value>[9]</value><value>[10]</value><value>
</value><value>1/91: DDJ "Designing a Software Specification"
2/91: DDJ "Three Initial PC Utilities"
3/91: DDJ "The Standalone System"
4/91: DDJ "Copyright, Copyleft, and Competitive Advantage"
4/91: DDJ "Language Tools Cross-Support"
5/91: DDJ "The Initial Root Filesystem"
6/91: DDJ "Research and the Commercial Sector: Where Does BSD Fit In?"
7/91: DDJ "A Stripped-Down Kernel"
8/91: DDJ "The Basic Kernel"
9/91: DDJ "Multiprogramming and Multiprocessing, Part I"
10/91: DDJ "Multiprogramming and Multiprocessing, Part II"
11/91: DDJ "Device Autoconfiguration"
2/92: DDJ "UNIX Device Drivers, Part I"
3/92: DDJ "UNIX Device Drivers, Part II"
4/92: DDJ "UNIX Device Drivers, Part III"
5/92: DDJ "Missing Pieces, Part I"
6/92: DDJ "Missing Pieces, Part II"
7/92: DDJ "The Final Step: Running Light with 386BSD"
</value><value>
</value><value>Jolitz, William F. and Jolitz, Lynne Greer: Operating System Source Code Secrets Vol 1 The Basic Kernel, 1996, </value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>ISBN</value><value> </value><value>1-57398-026-9</value><value>
</value><value>Jolitz, William F. and Jolitz, Lynne Greer: Operating System Source Code Secrets Vol 2 Virtual Memory, 2000, </value><value>ISBN</value><value> </value><value>1-57398-027-7</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"386BSD 0.0 Release Notes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"386BSD"</value><value>. </value><value>Free On-line Dictionary of Computing</value><value>. 2006-06-08</value><value>. Retrieved </value><value>2009-11-17</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Eric S. Raymond. 2003. </value><value>Origins and History of Unix, 1969-1995</value><value> The Art of Unix Programming. Chapter 2. History.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"386BSD 0.1 Release Notes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"386BSD FAQ"</value><value>. </value><value>William Jolitz, Lynne Jolitz</value><value>. 2006–2011</value><value>. Retrieved </value><value>12 January</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>About the FreeBSD Project</value><value>
</value><value>
</value><value>^</value><value> </value><value>"After 22 Years, 386BSD Gets An Update - Slashdot"</value><value>. </value><value>bsd.slashdot.org</value><value>. Retrieved </value><value>2017-03-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"386bsd/386bsd"</value><value>. </value><value>GitHub</value><value>. Retrieved </value><value>2017-03-14</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"DDJ articles for 386BSD"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Porting Unix to the 386"</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value>
</value><value>Jolix.com</value><value>
</value><value>Porting UNIX to the 386: A Practical Approach</value><value>
</value><value>Memories of 386BSD releases by Lynne Jolitz</value><value>
</value><value>The unknown hackers - Salon.com</value><value>
</value><value>386BSD Design Notes Professional Video Series</value><value>
</value><value>Frequently asked questions of 386BSD - active Q/A by authors</value><value>
</value><value>Remarks and papers on USL v UC Berkeley by Dennis M. Ritchie.</value><value> at the </value><value>Wayback Machine</value><value> (archived February 5, 2015)</value><value>
</value><value>Remarks on the history of 386BSD by Lynne Jolitz</value><value>
</value><value>Remarks on the history of 386BSD by Greg Lehey</value><value>
</value><value>More information on the various releases of 386BSD</value><value>
</value><value>Browsable 386BSD kernel sources</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Berkeley Software Distribution</value><value>People</value><value>
</value><value>Bob Fabry</value><value>
</value><value>Keith Bostic</value><value>
</value><value>Marshall Kirk McKusick</value><value>
</value><value>Michael J. Karels</value><value>
</value><value>Bill Joy</value><value>
</value><value>Samuel Leffler</value><value>
</value><value>Jordan Hubbard</value><value>
</value><value>Theo de Raadt</value><value>
</value><value>Poul-Henning Kamp</value><value>
</value><value>Lynne</value><value> and </value><value>William Jolitz</value><value>
</value><value>Derivatives</value><value>Active</value><value>
</value><value>FreeBSD</value><value>
</value><value>OpenBSD</value><value>
</value><value>NetBSD</value><value>
</value><value>DragonFly BSD</value><value>
</value><value>TrueOS</value><value>
</value><value>Junos OS</value><value>
</value><value>Darwin</value><value>
</value><value>PS3</value><value>/</value><value>PS4</value><value>/</value><value>PSP</value><value>/</value><value>PS Vita operating system</value><value>
</value><value>Nintendo Switch operating system</value><value>
</value><value>Full list</value><value>
</value><value>Discontinued</value><value>
</value><value>386BSD</value><value>
</value><value>BSD/OS</value><value>
</value><value>SunOS</value><value>
</value><value>Ultrix</value><value>
</value><value>Companies</value><value>
</value><value>Sleepycat Software</value><value>
</value><value>Walnut Creek CDROM</value><value>
</value><value>Berkeley Software Design</value><value>
</value><value>iXsystems</value><value>
</value><value>Other topics</value><value>
</value><value>Comparison</value><value>
</value><value>History</value><value>
</value><value>Licensing</value><value>
</value><value>BSD Daemon</value><value>
</value><value>Computer Systems Research Group</value><value>
</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>Portal</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Unix</value><value> and </value><value>Unix-like</value><value> </value><value>operating systems</value><value>
</value><value>BSD</value><value>
</value><value>386BSD</value><value>
</value><value>FreeBSD</value><value>
</value><value>NetBSD</value><value>
</value><value>OpenBSD</value><value>
</value><value>DragonFly BSD</value><value>
</value><value>NeXTSTEP</value><value>
</value><value>Darwin</value><value>
</value><value>macOS</value><value>
</value><value>iOS</value><value>
</value><value>watchOS</value><value>
</value><value>tvOS</value><value>
</value><value>audioOS</value><value>
</value><value>SunOS</value><value>
</value><value>Ultrix</value><value>
</value><value>Coherent</value><value>
</value><value>GNU</value><value>
</value><value>Linux</value><value>
</value><value>Android</value><value>
</value><value>Chrome OS</value><value>
</value><value>LynxOS</value><value>
</value><value>MINIX</value><value>
</value><value>QNX</value><value>
</value><value>BlackBerry 10</value><value>
</value><value>Research Unix</value><value>
</value><value>System V</value><value>
</value><value>A/UX</value><value>
</value><value>AIX</value><value>
</value><value>HP-UX</value><value>
</value><value>illumos</value><value>
</value><value>IRIX</value><value>
</value><value>OpenServer</value><value>
</value><value>Solaris</value><value>
</value><value>Tru64 UNIX</value><value>
</value><value>UnixWare</value><value>
</value><value>Xenix</value><value>
</value><value>more...</value><value>
</value><value>
</value><value>Italics</value><value> indicate discontinued branches. </value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>Book</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 18 November 2018, at 21:49</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/GNU_Emacs</url><title>GNU Emacs</title><text><value>GNU Emacs</value><value>GNU Emacs 25 running on </value><value>GNOME 3</value><value>Original author(s)</value><value>Richard Stallman</value><value>Developer(s)</value><value>GNU Project</value><value>Initial release</value><value>20 March 1985</value><value>; 33 years ago</value><value> (</value><value>1985-03-20</value><value>)</value><value>Stable release</value><value>26.1
   / 28 May 2018</value><value>; 6 months ago</value><value> (</value><value>2018-05-28</value><value>)</value><value>Preview release</value><value>26.1-RC1
   / 9 April 2018</value><value>; 8 months ago</value><value> (</value><value>2018-04-09</value><value>)</value><value>
</value><value>Repository</value><value>git</value><value>.savannah</value><value>.gnu</value><value>.org</value><value>/cgit</value><value>/emacs</value><value>.git</value><value>
</value><value> </value><value>Written in</value><value>Emacs Lisp</value><value>, </value><value>C</value><value>[1]</value><value>Operating system</value><value>Unix-like</value><value> (</value><value>GNU</value><value>, </value><value>Linux</value><value>, </value><value>macOS</value><value>, </value><value>BSDs</value><value>, </value><value>Solaris</value><value>), </value><value>Windows</value><value>, </value><value>MS-DOS</value><value>[2]</value><value>Available in</value><value>English</value><value>Type</value><value>Text editor</value><value>License</value><value>GNU </value><value>GPLv3</value><value>+</value><value>Website</value><value>www</value><value>.gnu</value><value>.org</value><value>/software</value><value>/emacs</value><value>/</value><value>
</value><value>GNU Emacs</value><value> is the most popular and most ported </value><value>Emacs</value><value> </value><value>text editor</value><value>. It was created by </value><value>GNU Project</value><value> founder </value><value>Richard Stallman</value><value>. In common with other varieties of Emacs, GNU Emacs is extensible using a </value><value>Turing complete</value><value> programming language. GNU Emacs has been called "the most powerful text editor available today".</value><value>[3]</value><value> With proper support from the underlying system, GNU Emacs is able to display files in multiple character sets, and has been able to simultaneously display most human languages since at least 1999.</value><value>[4]</value><value> Throughout its history, GNU Emacs has been a central component of the </value><value>GNU</value><value> project, and a flagship of the </value><value>free software</value><value> movement.</value><value>[5]</value><value>[6]</value><value> GNU Emacs is sometimes abbreviated as </value><value>GNUMACS</value><value>, especially to differentiate it from other EMACS variants.</value><value>[7]</value><value> The tag line for GNU Emacs is "the extensible self-documenting text editor".</value><value>[8]</value><value>
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Licensing</value><value>
</value><value>3</value><value> </value><value>Using GNU Emacs</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Commands</value><value>
</value><value>3.2</value><value> </value><value>Minibuffer</value><value>
</value><value>3.3</value><value> </value><value>File management and display</value><value>
</value><value>3.4</value><value> </value><value>Major modes</value><value>
</value><value>3.5</value><value> </value><value>Minor modes</value><value>
</value><value>3.6</value><value> </value><value>"Batch mode"</value><value>
</value><value>
</value><value>
</value><value>4</value><value> </value><value>Manuals</value><value>
</value><value>5</value><value> </value><value>Internationalization</value><value>
</value><value>6</value><value> </value><value>Extensibility</value><value>
</value><value>7</value><value> </value><value>Performance</value><value>
</value><value>8</value><value> </value><value>Platforms</value><value>
</value><value>9</value><value> </value><value>Forks</value><value>
</value><value>
</value><value>9.1</value><value> </value><value>XEmacs</value><value>
</value><value>9.2</value><value> </value><value>Other forks of GNU Emacs</value><value>
</value><value>
</value><value>
</value><value>10</value><value> </value><value>Release history</value><value>
</value><value>11</value><value> </value><value>References</value><value>
</value><value>12</value><value> </value><value>Further reading</value><value>
</value><value>13</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>Richard Stallman</value><value>, founder of the </value><value>GNU Project</value><value> and author of GNU Emacs</value><value>
</value><value>In 1976, Stallman wrote the first Emacs (“Editor MACroS”), and in 1984, began work on GNU Emacs, to produce a </value><value>free software</value><value> alternative to the proprietary </value><value>Gosling Emacs</value><value>. GNU Emacs was initially based on Gosling Emacs, but Stallman's replacement of its Mocklisp interpreter with a true Lisp interpreter required that nearly all of its code be rewritten. This became the first program released by the nascent GNU Project. GNU Emacs is written in C and provides </value><value>Emacs Lisp</value><value>, also implemented in C, as an extension language. Version 13, the first public release, was made on March 20, 1985. The first widely distributed version of GNU Emacs was version 15.34, released later in 1985. Early versions of GNU Emacs were numbered as "1.x.x," with the initial digit denoting the version of the C core. The "1" was dropped after version 1.12 as it was thought that the major number would never change, and thus the major version skipped from "1" to "13". A new third version number was added to represent changes made by user sites.</value><value>[9]</value><value> In the current numbering scheme, a number with two components signifies a release version, with development versions having three components.</value><value>[10]</value><value>
</value><value>GNU Emacs was later ported to Unix. It offered more features than Gosling Emacs, in particular a full-featured Lisp as its extension language, and soon replaced Gosling Emacs as the </value><value>de facto</value><value> Unix Emacs editor. </value><value>Markus Hess</value><value> exploited a security flaw in GNU Emacs' email subsystem in his 1986 cracking spree, in which he gained </value><value>superuser</value><value> access to Unix computers.</value><value>[11]</value><value>
</value><value>Although users commonly submitted patches and Elisp code to the net.emacs </value><value>newsgroup</value><value>, participation in GNU Emacs development was relatively restricted until 1999, and was used as an example of the "Cathedral" development style in </value><value>The Cathedral and the Bazaar</value><value>. The project has since adopted a public development mailing list and anonymous </value><value>CVS</value><value> access. Development took place in a single CVS trunk until 2008, and today uses the </value><value>Git</value><value>[12]</value><value> </value><value>DVCS</value><value>.
</value><value>Richard Stallman has remained the principal maintainer of GNU Emacs, but he has stepped back from the role at times. Stefan Monnier and Chong Yidong have overseen maintenance since 2008.</value><value>[13]</value><value> On September 21, 2015 Monnier announced that he would be stepping down as maintainer effective with the feature freeze of Emacs 25.</value><value>[14]</value><value> Longtime contributor John Wiegley was announced as the new maintainer on November 5, 2015.</value><value>[15]</value><value>
</value><value>
</value><value>Licensing</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The terms of the </value><value>GNU General Public License</value><value> (GPL) state that the Emacs source code, including both the C and Emacs Lisp components, are freely available for examination, modification, and redistribution.
</value><value>Older versions of the GNU Emacs documentation appeared under an ad-hoc license that required the inclusion of certain text in any modified copy. In the GNU Emacs user's manual, for example, this included instructions for obtaining GNU Emacs and Richard Stallman's essay </value><value>The GNU Manifesto</value><value>. The XEmacs manuals, which were inherited from older GNU Emacs manuals when the fork occurred, have the same license. Newer versions of the documentation use the </value><value>GNU Free Documentation License</value><value> with "invariant sections" that require the inclusion of the same documents and that the manuals proclaim themselves as </value><value>GNU Manuals</value><value>.
</value><value>For GNU Emacs, like many other GNU packages, it remains policy to accept significant code contributions only if the </value><value>copyright</value><value> holder executes a suitable disclaimer or assignment of their copyright interest to the </value><value>Free Software Foundation</value><value>. Bug fixes and minor code contributions of fewer than 10 lines are exempt. This policy is in place so that the FSF can defend the software in court if its </value><value>copyleft</value><value> license is violated.
</value><value>In 2011, it was noticed that GNU Emacs had been accidentally releasing some binaries without corresponding source code for two years, in opposition to the intended spirit of the </value><value>GPL</value><value>, resulting in a </value><value>copyright violation</value><value>.</value><value>[16]</value><value>[17]</value><value>[18]</value><value> Richard Stallman described this incident as </value><value>"a very bad mistake"</value><value>,</value><value>[19]</value><value> which was promptly fixed. Naturally, the FSF didn't sue any downstream redistributors who also unknowingly violated the GPL by distributing these binaries.
</value><value>
</value><value>Using GNU Emacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>Editing multiple </value><value>Dired</value><value> buffers in GNU Emacs</value><value>
</value><value>  </value><value>Editing </value><value>C</value><value> </value><value>source code</value><value> in GNU Emacs</value><value>
</value><value>  </value><value>Editing and compiling </value><value>C++</value><value> code from GNU Emacs</value><value>
</value><value>Commands</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In its normal editing mode, GNU Emacs behaves like other text editors and allows the user to insert characters with the corresponding keys and to move the editing point with the arrow keys. </value><value>Escape key</value><value> sequences or pressing the </value><value>control key</value><value> and/or the </value><value>meta key</value><value>, </value><value>alt key</value><value> or </value><value>super keys</value><value> in conjunction with a regular key produces </value><value>modified keystrokes</value><value> that invoke functions from the Emacs Lisp environment. Commands such as </value><value>save-buffer</value><value> and </value><value>save-buffers-kill-emacs</value><value> combine multiple modified keystrokes.
</value><value>Some GNU Emacs commands work by invoking an external program, such as ispell for spell-checking or </value><value>GNU Compiler Collection</value><value> (gcc) for program compilation, parsing the program's output, and displaying the result in GNU Emacs. Emacs also supports "inferior processes"—long-lived processes that interact with an Emacs buffer. This is used to implement </value><value>shell-mode</value><value>, running a </value><value>Unix shell</value><value> as inferior process, as well as </value><value>read–eval–print loop</value><value> (REPL) modes for various programming languages. Emacs' support for external processes makes it an attractive environment for interactive programming along the lines of </value><value>Interlisp</value><value> or </value><value>Smalltalk</value><value>.</value><value>[20]</value><value>
</value><value>Users who prefer </value><value>IBM Common User Access</value><value>-style keys can use </value><value>cua-mode</value><value>, a package that originally was a third-party add-on but has been included in GNU Emacs since version 22.
</value><value>
</value><value>Minibuffer</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Emacs uses the "minibuffer," normally the bottommost line, to present status and request information—the functions that would typically be performed by </value><value>dialog boxes</value><value> in most GUIs. The minibuffer holds information such as text to target in a search or the name of a file to read or save. When applicable, </value><value>command line completion</value><value> is available using the tab and space keys.
</value><value>
</value><value>File management and display</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Emacs keeps text in </value><value>data structures</value><value> known as </value><value>buffers</value><value>. Buffers may or may not be displayed onscreen, and all buffer features are accessible to both an </value><value>Emacs Lisp</value><value> program and to the user interface.</value><value>[21]</value><value> The user can create new buffers and dismiss unwanted ones, and many buffers can exist at the same time. There is no upper limit on the number of buffers Emacs allows, other than hardware memory limits. Advanced users may amass hundreds of open buffers of various types relating to their current work.</value><value>[22]</value><value> Emacs can be configured to save the list of open buffers on exit, and reopen this list when it is restarted.</value><value>[23]</value><value>
</value><value>Some buffers contain text loaded from </value><value>text files</value><value>, which the user can edit and save back to permanent storage. These buffers are said to be "visiting" files. Buffers also serve to display other data, such as the output of Emacs commands, </value><value>dired</value><value> directory listings,  documentation strings displayed by the "help" library and notification messages that in other editors would be displayed in a </value><value>dialog box</value><value>. Some of these notifications are displayed briefly in the minubuffer, and GNU Emacs provides a </value><value>*Messages*</value><value> buffer that keeps a history of the most recent notifications of this type. When the minibuffer is used for output from Emacs, it is called the "echo area".</value><value>[24]</value><value> Longer notifications are displayed in buffers of their own. The maximum length of messages that will be displayed in the minibuffer is, of course, configurable. 
</value><value>Buffers can also serve as input and output areas for an external process such as a </value><value>shell</value><value> or </value><value>REPL</value><value>. Buffers which Emacs creates on its own are typically named with </value><value>asterisks</value><value> on each end, to distinguish from user buffers. The list of open buffers is itself displayed in this type of buffer.
</value><value>Most Emacs key sequences remain functional in any buffer. For example, the standard Ctrl-s </value><value>isearch</value><value> function can be used to search filenames in dired buffers, and the file list can be saved to a text file just as any other buffer. dired buffers can be switched to a writable mode, in which filenames and attributes can be edited textually; when the buffer is saved, the changes are written to the filesystem. This allows multiple files to be renamed using the search and replace features of  Emacs. When so equipped, Emacs displays </value><value>image files</value><value> in buffers. Emacs is binary safe and 8-bit clean.</value><value>[25]</value><value>
</value><value>Emacs can split the editing area into separate sections called "windows," a feature that has been available since 1975, predating the graphical user interface in common use. In Emacs terminology, "Windows" are similar to what other systems call "</value><value>frames</value><value>" or "</value><value>panes</value><value>" –  a rectangular portion of the program's display that can be updated and interacted with independently. Each Emacs window has a </value><value>status bar</value><value> called the "mode line" displayed by default at the bottom edge of the window. Emacs windows are available both in text-terminal and graphical modes and allow more than one buffer, or several parts of a buffer, to be displayed at once. Common applications are to display a </value><value>dired</value><value> buffer along with the contents of files in the current directory (there are special modes to make the file buffer follow the file  highlighted in dired), to display the </value><value>source code</value><value> of a program in one window while another displays a </value><value>shell</value><value> buffer with the results of compiling the program, to run a debugger along with a shell buffer running the program, to work on code while displaying a </value><value>man page</value><value> or other documentation (possibly loaded over the </value><value>World Wide Web</value><value> using one of Emacs' built-in web browsers) or simply to display multiple files for editing at once such as a header along with its implementation file for C-based languages. In addition, there is </value><value>follow-mode</value><value>, a minor mode that chains windows to display non-overlapping portions of a buffer. Using </value><value>follow-mode</value><value>, a single file can be displayed in multiple side-by-side windows that update appropriately when scrolled. Emacs windows are </value><value>tiled</value><value> and cannot appear "above" or "below" their companions. Emacs can launch multiple "frames", which are displayed as individual </value><value>windows</value><value> in a graphical environment. On a text terminal, multiple frames are displayed stacked filling the entire terminal, and can be switched using the standard Emacs commands.</value><value>[26]</value><value>
</value><value>
</value><value>Major modes</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GNU Emacs can display or edit a variety of different types of text and adapts its behavior by entering </value><value>add-on</value><value> modes called "major modes". There are major modes for many different purposes including editing ordinary text files, the </value><value>source code</value><value> of many </value><value>markup</value><value> and </value><value>programming languages</value><value>, as well as displaying </value><value>web pages</value><value>, </value><value>directory listings</value><value> and other system info. Each major mode involves an Emacs Lisp program that extends the editor to behave more conveniently for the specified type of text. Major modes typically provide some or all of the following common features:
</value><value>
</value><value>Syntax highlighting ("font lock"): combinations of fonts and colors, termed "faces,"</value><value>[27]</value><value> that differentiate between document elements such as </value><value>keywords</value><value> and </value><value>comments</value><value>.</value><value>
</value><value>Automatic indentation to maintain consistent formatting within a file.</value><value>
</value><value>The automatic insertion of elements required by the structure of the document, such as spaces, newlines, and parentheses.</value><value>
</value><value>Special editing commands, such as commands to jump to the beginning or the end of a function while editing a programming file or commands to validate documents or insert closing tags while working with markup languages such as </value><value>XML</value><value>.</value><value>
</value><value>Minor modes</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The use of "minor modes" enables further customization. A GNU Emacs editing buffer can use only one major mode at a time, but multiple minor modes can operate simultaneously. These may operate directly on documents, as in the way the major mode for the C programming language defines a separate minor mode for each of its popular </value><value>indent styles</value><value>, or they may alter the editing environment. Examples of the latter include a mode that adds the ability to undo changes to the window configuration and one that performs on-the-fly syntax checking. There is also a minor mode that allows multiple major modes to be used in a single file, for convenience when editing a document in which multiple programming languages are embedded.
</value><value>
</value><value>"Batch mode"</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GNU Emacs supports the capability to use it as an interpreter for the </value><value>Emacs Lisp</value><value> language without displaying the text editor user interface. In batch mode, user configuration is not loaded and the terminal </value><value>interrupt</value><value> characters C-c and C-z will have their usual effect of exiting the program or suspending execution instead of invoking Emacs keybindings. GNU Emacs has </value><value>command line options</value><value> to specify either a file to load and execute, or an Emacs Lisp function may be passed in from the command line. Emacs will start up, execute the passed-in file or function, print the results, then exit.</value><value>[28]</value><value> The </value><value>shebang</value><value> line </value><value>#!/usr/bin/emacs --script</value><value> allows the creation of standalone scripts in Emacs Lisp.</value><value>[29]</value><value>
Batch mode is not an Emacs mode </value><value>per se</value><value>, but describes an alternate execution mode for the Emacs program.
</value><value>
</value><value>Manuals</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>GNU Emacs Manual</value><value> (cover art by Etienne Suvasa; cover design by </value><value>Matt Lee</value><value>)</value><value>
</value><value>Apart from the built-in documentation, GNU Emacs has an unusually long and detailed </value><value>manual</value><value>.</value><value>[</value><value>citation needed</value><value>]</value><value> An electronic copy of the </value><value>GNU Emacs Manual</value><value>, written by Richard Stallman, is bundled with GNU Emacs and can be viewed with the built-in </value><value>info</value><value> browser. Two additional manuals, the </value><value>Emacs Lisp Reference Manual</value><value> by Bil Lewis, Richard Stallman, and Dan Laliberte and </value><value>An Introduction to Programming in Emacs Lisp</value><value> by </value><value>Robert Chassell</value><value>, are included. All three manuals are also published in book form by the </value><value>Free Software Foundation</value><value>. The XEmacs manual is similar to the </value><value>GNU Emacs Manual</value><value>, from which it forked at the same time that the XEmacs software forked from GNU Emacs.
</value><value>
</value><value>Internationalization</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GNU Emacs has support for many alphabets, scripts, writing systems, and cultural conventions and provides </value><value>spell-checking</value><value> for many languages by calling external programs such as </value><value>ispell</value><value>. Version 24 added support for bidirectional text and left-to-right and right-to-left </value><value>writing direction</value><value> for languages such as Arabic, Persian and Hebrew.
</value><value>Many </value><value>character encoding</value><value> systems, including </value><value>UTF-8</value><value>, are supported. GNU Emacs uses UTF-8 for its encoding as of GNU 23, while prior versions used their own encoding internally and performed conversion upon load and save. The internal encoding used by XEmacs is similar to that of GNU Emacs but differs in details.
</value><value>The GNU Emacs user interface originated in English and, with the exception of the beginners' tutorial, has not been translated into any other language.
</value><value>A subsystem called </value><value>Emacspeak</value><value> enables visually impaired and blind users to control the editor through audio feedback.
</value><value>
</value><value>Extensibility</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>GNU Emacs with </value><value>AUCTeX</value><value>, a set of tools for editing </value><value>TeX</value><value> and </value><value>LaTeX</value><value> documents</value><value>
</value><value>The behavior of GNU Emacs can be modified and extended almost without limit by incorporating Emacs Lisp programs that define new commands, new buffer modes, new keymaps, add command-line options,</value><value>[30]</value><value> and so on. Many extensions providing user-facing functionality define a major mode (either for a new file type or to build a non-text-editing user interface); others define only commands or minor modes, or provide functions that enhance another extension.
</value><value>Many extensions are bundled with the GNU Emacs installation; others used to be downloaded as loose files (the </value><value>Usenet</value><value> </value><value>newsgroup</value><value> gnu.emacs.sources was a traditional source) but there has been a development of managed packages and package download sites since version 24, with a built-in package manager (itself an extension) to download, install, and keep them up to date.
</value><value>A few examples include:
</value><value>
</value><value>AUCTeX</value><value>, tools to edit and process </value><value>TeX</value><value> and </value><value>LaTeX</value><value> documents</value><value>
</value><value>Calc, a powerful </value><value>RPN</value><value> numerical </value><value>calculator</value><value>
</value><value>Calendar-mode, for keeping appointment calendars and diaries</value><value>
</value><value>dired</value><value>, a file manager</value><value>
</value><value>Dissociated press</value><value>, a </value><value>Racter</value><value>-like text generator</value><value>
</value><value>Doctor, a </value><value>psychoanalysis</value><value> simulation inspired by </value><value>ELIZA</value><value>
</value><value>Dunnet</value><value>, a </value><value>text adventure</value><value>
</value><value>Ediff and Emerge, for comparing and combining files interactively.</value><value>
</value><value>Emacs/W3, a </value><value>text-based</value><value> </value><value>web browser</value><value> written in Emacs Lisp, primarily by </value><value>William M. Perry</value><value>. Emacs/W3 is part of the Sumo package for XEmacs, and the submodule for fetching a </value><value>URL</value><value> is currently part of the GNU Emacs </value><value>CVS</value><value> </value><value>repository</value><value>. </value><value>Dave Raggett</value><value> was supported by Emacs/W3 and by </value><value>tkWWW</value><value> while working on a successor to </value><value>HTML 2</value><value> called </value><value>HTML+</value><value>.</value><value>[31]</value><value>
</value><value>Emacs Speaks Statistics</value><value> (ESS) modes for editing statistical languages like R and SAS</value><value>
</value><value>Emacs Web Wowser</value><value> (EWW), a built-in web browser</value><value>
</value><value>ERC</value><value> and </value><value>rcirc</value><value> and Circe, </value><value>IRC</value><value> clients</value><value>[32]</value><value>
</value><value>Eshell</value><value>, a command line </value><value>shell</value><value> written in Emacs Lisp. This allows closer integration with the Emacs environment than standard shells such as </value><value>bash</value><value> or </value><value>PowerShell</value><value>, which are also available from within Emacs. For example, in Eshell, Elisp functions are available as shell commands and output from </value><value>Unix commands</value><value> can be redirected to an Emacs buffer.</value><value>
</value><value>Exwm</value><value>, an </value><value>X window manager</value><value> allowing </value><value>X11</value><value> apps to be run in an Emacs window.</value><value>[33]</value><value>
</value><value>Gnus</value><value>, a full-featured </value><value>news client</value><value> (newsreader) and </value><value>email client</value><value> and early evidence for </value><value>Zawinski's Law</value><value>
</value><value>Magit, for working with the version control system </value><value>Git</value><value>[34]</value><value>[35]</value><value>
</value><value>Mediawiki-mode</value><value> for editing pages on </value><value>MediaWiki</value><value> projects</value><value>
</value><value>MULtilingual Enhancement to Emacs (</value><value>MULE</value><value>) allows editing of text in multiple languages in a manner somewhat analogous to Unicode</value><value>
</value><value>Org-mode</value><value> for keeping notes, maintaining various types of lists, planning and measuring projects, and composing documents in many formats (such as </value><value>PDF</value><value>, </value><value>HTML</value><value>, or </value><value>OpenDocument</value><value> formats). There are </value><value>static site generators</value><value> using org mode, as well as an extension, Babel, allowing it to be used for </value><value>literate programming</value><value>.</value><value>[36]</value><value>
</value><value>Planner</value><value>, a </value><value>personal information manager</value><value>
</value><value>Simple Emacs Spreadsheet (SES), a standard mode providing a </value><value>spreadsheet</value><value>
</value><value>SQL Interaction Mode, a mode for interacting with various flavours of </value><value>SQL</value><value> </value><value>database servers</value><value>.</value><value>
</value><value>Superior Lisp Interaction Mode for Emacs (</value><value>SLIME</value><value>)</value><value>[37]</value><value> extends GNU Emacs into a development environment for </value><value>Common Lisp</value><value>. With SLIME (written in Emacs Lisp) the GNU Emacs editor communicates with a Common Lisp system (using the SWANK backend) over a special communication protocol and provides such tools as a </value><value>read–eval–print loop</value><value>, a data inspector and a </value><value>debugger</value><value>.</value><value>
</value><value>Texinfo</value><value> (Info), an online help-browser</value><value>
</value><value>View Mail (VM), another full-featured email client</value><value>
</value><value>Viper, a vi emulation layer;</value><value>[38]</value><value>  also, Evil, a Vim emulation layer</value><value>[39]</value><value>
</value><value>W3M, another web browser, this based on and using the </value><value>w3m</value><value> standalone browser.</value><value>
</value><value>Wanderlust, a versatile email and news client</value><value>
</value><value>Zone, a </value><value>display hack</value><value> mode incorporating various text effects.</value><value>
</value><value>Performance</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GNU Emacs often ran noticeably slower than rival text editors on the systems in which it was first implemented, because the loading and </value><value>interpreting</value><value> of its Lisp-based code incurs a performance overhead. Modern computers are powerful enough to run GNU Emacs without slowdowns, but versions prior to 19.29 (released in 1995) couldn't edit files larger than 8 MB. The file size limit was raised in successive versions, and </value><value>32 bit</value><value> versions after GNU Emacs 23.2 can edit files up to 512 MB in size. Emacs compiled on a 64-bit machine can handle much larger buffers.</value><value>[40]</value><value>
</value><value>
</value><value>Platforms</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GNU Emacs has become one of the most-</value><value>ported</value><value> non-trivial computer programs and runs on a wide variety of </value><value>operating systems</value><value>, including </value><value>DOS</value><value>, </value><value>Windows</value><value>[41]</value><value>[42]</value><value>[43]</value><value> and </value><value>OpenVMS</value><value>. Support for some "obsolete platforms was removed in Emacs 23.1", such as VMS and most Unix variants (except those based on Linux).</value><value>[2]</value><value> It is available for most </value><value>Unix-like</value><value> operating systems, such as </value><value>Linux</value><value>, the various </value><value>BSDs</value><value>, </value><value>Solaris</value><value>, </value><value>AIX</value><value>, </value><value>HP-UX</value><value> and </value><value>macOS</value><value>,</value><value>[44]</value><value>[45]</value><value> and is often included with their system installation packages. Native ports of GNU Emacs exist for </value><value>Android</value><value>[46]</value><value>[</value><value>better source needed</value><value>]</value><value> and Nokia's </value><value>Maemo</value><value>.</value><value>[47]</value><value>[</value><value>better source needed</value><value>]</value><value>
</value><value>GNU Emacs runs both on </value><value>text terminals</value><value> and in </value><value>graphical user interface</value><value> (GUI) environments. On Unix-like operating systems, GNU Emacs can use the </value><value>X Window System</value><value> to produce its GUI either directly using </value><value>Athena widgets</value><value> or by using a "widget toolkit" such as </value><value>Motif</value><value>, </value><value>LessTif</value><value>, or </value><value>GTK+</value><value>. GNU Emacs can also use the graphics systems native to macOS and Windows to provide </value><value>menubars</value><value>, </value><value>toolbars</value><value>, </value><value>scrollbars</value><value> and </value><value>context menus</value><value> conforming more closely to each platform's </value><value>look and feel</value><value>.
</value><value>
</value><value>Forks</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>XEmacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>XEmacs</value><value>
</value><value>  </value><value>XEmacs 21.5 on </value><value>GNU</value><value>/</value><value>Linux</value><value>
</value><value>Lucid Emacs, based on an early version of GNU Emacs 19, was developed beginning in 1991 by </value><value>Jamie Zawinski</value><value> and others at Lucid Inc. One of the best-known forks in </value><value>free software</value><value> development occurred when the codebases of the two Emacs versions diverged and the separate development teams ceased efforts to merge them back into a single program.</value><value>[48]</value><value> After Lucid filed for bankruptcy, Lucid Emacs was renamed </value><value>XEmacs</value><value> and remains the second most popular variety of Emacs, after GNU Emacs.</value><value>[</value><value>citation needed</value><value>]</value><value> XEmacs development has slowed, with the most recent stable version 21.4.22 released in January 2009, while GNU Emacs has implemented many formerly XEmacs-only features. This has led some users to proclaim XEmacs' death.</value><value>[49]</value><value>
</value><value>
</value><value>Other forks of GNU Emacs</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Other forks, less known than XEmacs, include:
</value><value>
</value><value>Meadow</value><value> –  a Japanese version for Microsoft Windows</value><value>[50]</value><value>
</value><value>SXEmacs</value><value> –  Steve Youngs' fork of XEmacs</value><value>[51]</value><value>
</value><value>Aquamacs</value><value> –  a version which focuses on integrating with the Apple Macintosh user interface</value><value>
</value><value>Remacs –  a port of GNU Emacs to the </value><value>Rust</value><value> programming language.</value><value>[52]</value><value>
</value><value>Release history</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Changes in each Emacs release are listed in a NEWS file distributed with Emacs.</value><value>[53]</value><value> Changes brought about by </value><value>downgrading</value><value> to the previous release are listed in an "Antinews" file</value><value>[54]</value><value>
</value><value>
</value><value>

</value><value>
</value><value>Version
</value><value>
</value><value>Release date
</value><value>
</value><value>Significant changes</value><value>[55]</value><value>
</value><value>
</value><value>
</value><value>26.1
</value><value>
</value><value>May 28, 2018
</value><value>
</value><value>Limited form of concurrency with Lisp threads. Support for optional display of line numbers in the buffer. Emacs now uses double buffering to reduce flicker on the X Window System. Flymake has been completely redesigned. TRAMP has a new connection method for Google Drive. New single-line horizontal scrolling mode. A systemd user unit file is provided. Support for 24-bit colors on capable text terminals.</value><value>[56]</value><value>
</value><value>
</value><value>
</value><value>25.1
</value><value>
</value><value>September 17, 2016
</value><value>
</value><value>Support for loading shared/dynamic libraries (modules). Validation of TLS/SSL certificates. New minor mode 'electric-quote-mode' for using curved quotes. Character folding support in isearch.el. Support for embedding native widgets inside Emacs buffers. New and improved facilities for inserting Unicode characters.</value><value>[57]</value><value>
</value><value>
</value><value>
</value><value>24.5
</value><value>
</value><value>April 10, 2015
</value><value>
</value><value>Mainly a bugfix release.</value><value>[58]</value><value>[59]</value><value>
</value><value>
</value><value>
</value><value>24.4
</value><value>
</value><value>October 20, 2014
</value><value>
</value><value>Support for ACLs (access control lists) and digital signatures of Emacs Lisp packages. Improved fullscreen and multi-monitor support. Support for saving and restoring the state of frames and windows. Improved menu support on text terminals. Another built-in web browser (</value><value>M-x eww</value><value>). A new rectangular mark mode (</value><value>C-x SPC</value><value>). File notification support.</value><value>[60]</value><value>
</value><value>
</value><value>
</value><value>24.3
</value><value>
</value><value>March 10, 2013
</value><value>
</value><value>Generalized variables are now in core Emacs Lisp, an update for the Common Lisp emulation library, and a new major mode for Python.</value><value>[61]</value><value>
</value><value>
</value><value>
</value><value>24.2
</value><value>
</value><value>August 27, 2012
</value><value>
</value><value>Bugfix release</value><value>[62]</value><value>
</value><value>
</value><value>
</value><value>24.1
</value><value>
</value><value>June 10, 2012
</value><value>
</value><value>Emacs Lisp Package Archive (ELPA), support for native color themes, optional GTK+3, support for bi-directional input, support for lexical scoping in emacs lisp</value><value>[63]</value><value>
</value><value>
</value><value>
</value><value>23.4
</value><value>
</value><value>January 29, 2012
</value><value>
</value><value>Fixes a security flaw.</value><value>[64]</value><value>
</value><value>
</value><value>
</value><value>23.3
</value><value>
</value><value>March 10, 2011
</value><value>
</value><value>Improved functionality for using Emacs with version control systems.
</value><value>
</value><value>
</value><value>23.2
</value><value>
</value><value>May 8, 2010
</value><value>
</value><value>New tools for using Emacs as an </value><value>IDE</value><value>, including navigation across a project and automatic Makefile generation. New major mode for editing JavaScript source. In GUIs, the cursor is hidden while the user types.
</value><value>
</value><value>
</value><value>23.1
</value><value>
</value><value>July 29, 2009
</value><value>
</value><value>Support for anti-aliased fonts on </value><value>X</value><value> through </value><value>Xft</value><value>,</value><value>[65]</value><value> better </value><value>Unicode</value><value> support, Doc-view mode and new packages for viewing </value><value>PDF</value><value> and </value><value>PostScript</value><value> files, connection to processes through </value><value>D-Bus</value><value> (dbus), connection to the </value><value>GNU Privacy Guard</value><value> (EasyPG), nXML mode for editing </value><value>XML</value><value> documents, Ruby mode for editing </value><value>Ruby</value><value> programs, and more. Use of the </value><value>Carbon</value><value> GUI libraries on </value><value>Mac OS X</value><value> was replaced by use of the more modern </value><value>Cocoa</value><value> GUI libraries.
</value><value>
</value><value>
</value><value>22.3
</value><value>
</value><value>September 5, 2008
</value><value>
</value><value>GTK+ toolkit support, enhanced mouse support, a new keyboard macro system, improved Unicode support, and drag-and-drop operation on X. Many new modes and packages including a graphical user interface to GDB, Python mode, the mathematical tool Calc, and the remote file editing system Tramp ("Transparent Remote (file) Access, Multiple Protocol").</value><value>[66]</value><value>
</value><value>
</value><value>
</value><value>22.2
</value><value>
</value><value>March 26, 2008
</value><value>
</value><value>New support for the Bazaar, Mercurial, Monotone, and Git </value><value>version control</value><value> systems. New major modes for editing CSS, Vera, Verilog, and BibTeX style files. Improved scrolling support in Image mode.
</value><value>
</value><value>
</value><value>22.1
</value><value>
</value><value>June 2, 2007
</value><value>
</value><value>Support for the GTK+ graphical toolkit, support for drag-and-drop on X, support for the Mac OS X Carbon UI, org-mode version 4.67d included</value><value>[67]</value><value>
</value><value>
</value><value>
</value><value>21.1
</value><value>
</value><value>October 20, 2001
</value><value>
</value><value>Support for displaying colors and some other attributes on terminals, built-in horizontal scrolling, sound support, wheel mouse support, improved menu-bar layout, support for images, toolbar, and tooltips, Unicode support
</value><value>
</value><value>
</value><value>20.1
</value><value>
</value><value>September 17, 1997
</value><value>
</value><value>Multi-lingual support
</value><value>
</value><value>
</value><value>19.34
</value><value>
</value><value>August 22, 1996
</value><value>
</value><value>bug fix release with no user-visible changes</value><value>[68]</value><value>
</value><value>
</value><value>
</value><value>19.31
</value><value>
</value><value>May 25, 1996</value><value>[69]</value><value>
</value><value>
</value><value>Emacs opens </value><value>X11</value><value> frames by default, scroll bars on </value><value>Windows 95</value><value> and </value><value>NT</value><value>, subprocesses on </value><value>Windows 95</value><value>, </value><value>recover-session</value><value> to recover multiple files after a crash, some </value><value>doctor.el</value><value> features removed to comply with the US </value><value>Communications Decency Act</value><value>[68]</value><value>
</value><value>
</value><value>
</value><value>19.30
</value><value>
</value><value>November 24, 1995
</value><value>
</value><value>Multiple frame support on MS Windows, menu bar available on text terminals, </value><value>pc-select</value><value> package to emulate common Windows and Macintosh keybindings.</value><value>[68]</value><value>
</value><value>
</value><value>
</value><value>19.29
</value><value>
</value><value>June 19, 1995</value><value>[70]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>19.28
</value><value>
</value><value>November 1, 1994
</value><value>
</value><value>First official v19 release.  Support for multiple frames using the X Windowing System; VC, a new interface for version control systems, font-lock mode, hexl mode for </value><value>hexadecimal</value><value> editing.
</value><value>
</value><value>
</value><value>19.7
</value><value>
</value><value>May 22, 1993
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>18.59
</value><value>
</value><value>October 31, 1992
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>18.53
</value><value>
</value><value>February 23, 1989
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>18.52
</value><value>
</value><value>August 17, 1988
</value><value>
</value><value>spook.el</value><value> a library for adding some "distract the </value><value>NSA</value><value>" keywords (UNCPCJ Emergency management JITEM PEM bullion MSCJ Airplane SLIP rogue Gatt Ammonium nitrate Trafficking embassy Emergency TELINT) to every message you send.</value><value>[71]</value><value>
</value><value>
</value><value>
</value><value>18.24
</value><value>
</value><value>October 2, 1986
</value><value>
</value><value>Server mode,</value><value>[72]</value><value> </value><value>M-x disassemble</value><value>, Emacs can open TCP connections, </value><value>emacs -nw</value><value> to open Emacs in console mode on </value><value>xterms</value><value>.
</value><value>
</value><value>
</value><value>17.36
</value><value>
</value><value>December 20, 1985
</value><value>
</value><value>Backup file version numbers
</value><value>
</value><value>
</value><value>16.56
</value><value>
</value><value>July 15, 1985
</value><value>
</value><value>First Emacs 16 release. Emacs-lisp-mode distinct from lisp-mode,</value><value>[73]</value><value> remove all code from </value><value>Gosling Emacs</value><value> due to copyright issues</value><value>[74]</value><value>
</value><value>
</value><value>
</value><value>15.10
</value><value>
</value><value>April 11, 1985
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>13.0?
</value><value>
</value><value>March 20, 1985
</value><value>
</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs"</value><value>, </value><value>Analysis Summary</value><value>, </value><value>Open Hub</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Emacs machines list"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"</value><value>"</value><value>Learning GNU Emacs, Third Edition": A Guide to the World's Most Extensible, Customizable Editor"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Alphabet Soup: The Internationalization of Linux, Part 1 Linux Journal March 1999"</value><value>. </value><value>With the availability of fonts and, where necessary, internationalized terminal emulators, Emacs can simultaneously handle most of the world's languages.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Linux Programmer's Toolbox"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Learning GNU Emacs"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNUMACS"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Debian - details of package Emacs in wheezy"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"NEWS.1-17"</value><value>. </value><value>There is a new version numbering scheme. What used to be the first version number, which was 1, has been discarded since it does not seem that I need three levels of version number. However, a new third version number has been added to represent changes by user sites.  This number will always be zero in Emacs when I distribute it; it will be incremented each time Emacs is built at another site.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs FAQ"</value><value>. </value><value>A version number with two components (e.g., ‘22.1’) indicates a released version; three components indicate a development version (e.g., ‘23.0.50’ is what will eventually become ‘23.1’).</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stoll, Clifford</value><value> (1988). "Stalking the wily hacker". </value><value>Communications of the ACM</value><value>. </value><value>31</value><value> (5): 484–497. </value><value>doi</value><value>:</value><value>10.1145/42411.42412</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Re: GNU EMACS"</value><value>. GNU</value><value>. Retrieved </value><value>2014-11-16</value><value>.</value><value>]</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Re: Looking for a new Emacs maintainer or team"</value><value>. gnu.org Mailing List</value><value>. Retrieved </value><value>2008-02-23</value><value>.</value><value>; see also </value><value>"Stallman on handing over GNU Emacs, its future and the importance of nomenclature"</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Feature freeze"</value><value>. </value><value>lists.gnu.org</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs gets new maintainer as Richard Stallman signs off"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Brockmeier, Joe (Jul 29, 2011). </value><value>"Say what? GNU Emacs violates the GPL"</value><value>. </value><value>Network World</value><value>. Retrieved </value><value>2016-01-19</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>License revoked: Applying Section 4 of the GPL and the lessons of Best Buy to Google’s Android</value><value> by Edward J. Naughton (Aug 8, 2011)</value><value>
</value><value>
</value><value>^</value><value> </value><value>[1]</value><value> on </value><value>slashdot.org</value><value> (2011)</value><value>
</value><value>
</value><value>^</value><value> </value><value>Re: Compiled files without sources????</value><value> on lists.gnu.org by Richard Stallman (Jul 28, 2011)</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs as a dynamically extensible programming environment"</value><value>. </value><value>Software: Practice and Experience</value><value>. </value><value>18</value><value>: 999–1009. </value><value>doi</value><value>:</value><value>10.1002/spe.4380181006</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Beautiful Architecture: Leading Thinkers Reveal the Hidden Beauty in Software Design"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Statistical Analysis and Data Display: An Intermediate Course with Examples in R"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Saving Emacs Sessions"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Echo Area"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"A Tutorial Introduction to GNU Emacs"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Frames - GNU Emacs Manual"</value><value>. </value><value>However, it is still possible to create multiple “frames” on text terminals; such frames are displayed one at a time, filling the entire terminal screen</value><value>
</value><value>
</value><value>^</value><value> </value><value>
</value><value>Cameron, Debra; Rosenblatt, Bill; </value><value>Raymond, Eric S.</value><value> (1996). </value><value>Learning GNU Emacs</value><value>. In a Nutshell Series (2 ed.). O'Reilly Media, Inc. p. 533. </value><value>ISBN</value><value> </value><value>978-1-56592-152-8</value><value>. Retrieved </value><value>2010-11-02</value><value>. </value><value>A face is a font and colour combination.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Initial Options"</value><value>. </value><value>In batch mode, Emacs does not display the text being edited, and the standard terminal interrupt characters such as C-z and C-c have their usual effect. Emacs functions that normally print a message in the echo area will print to either the standard output stream (stdout) or the standard error stream (stderr) instead. (To be precise, functions like prin1, princ and print print to stdout, while message and error print to stderr.) Functions that normally read keyboard input from the minibuffer take their input from the terminal’s standard input stream (stdin) instead.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"BatchMode"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Command Line Arguments"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Connolly, Dan</value><value> (Sep 28, 1999). </value><value>"HTML 2.0 Materials"</value><value>. </value><value>World Wide Web Consortium</value><value>. Retrieved </value><value>16 November</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stallman, Richard</value><value> (2007-06-03). </value><value>"Emacs 22.1 released"</value><value>. </value><value>info-gnu-emacs</value><value> (Mailing list)</value><value>. Retrieved </value><value>2011-07-31</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Feng, Chris (27 November 2017). </value><value>"exwm: Emacs X Window Manager"</value><value>  – via GitHub.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Jonas Bernoulli. </value><value>"It's Magit! A Git Porcelain inside Emacs"</value><value>. Retrieved </value><value>Feb 8,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Petersen, Mickey. "An introduction to Magit, an Emacs mode for Git". </value><value>Mastering Emacs</value><value>. Retrieved </value><value>Feb 8,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Babel: Introduction"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>SLIME: The Superior Lisp Interaction Mode for Emacs</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kifer, Michael. </value><value>"Emacs packages: Viper and Ediff"</value><value>. </value><value>Michael Kifer's website</value><value>. Retrieved </value><value>2012-11-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Repository"</value><value>. </value><value>Github</value><value>. Retrieved </value><value>2018-05-18</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"6.1 Does Emacs have problems with files larger than 8 megabytes?"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>B, Ramprasad (2005-06-24). </value><value>"GNU Emacs FAQ For Windows 95/98/ME/NT/XP and 2000"</value><value>. Retrieved </value><value>2006-09-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Borgman, Lennart (2006). </value><value>"EmacsW32 Home Page"</value><value>. Archived from </value><value>the original</value><value> on 2007-03-06</value><value>. Retrieved </value><value>2006-09-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs on Windows"</value><value>. Franz Inc. 2006</value><value>. Retrieved </value><value>2006-09-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Carbon Emacs Package"</value><value>. Retrieved </value><value>2012-06-10</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Aquamacs is an easy-to-use, Mac-style Emacs for Mac OS X"</value><value>. Retrieved </value><value>2006-09-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs on Android"</value><value>. EmacsWiki.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"CategoryPorts"</value><value>. EmacsWiki.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stephen J., Turnbull. </value><value>"XEmacs vs. GNU Emacs"</value><value>. Retrieved </value><value>2012-10-02</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"XEmacs is Dead. Long Live XEmacs!"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"FrontPage - Meadow Wiki"</value><value>. Feb 16, 2012. Archived from </value><value>the original</value><value> on 2012-02-16.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"SXEmacs Website"</value><value>. Sxemacs.org. 2009-10-11</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Remacs"</value><value>. </value><value>The Remacs github repository</value><value>. Retrieved </value><value>Feb 22,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"NEWS.24.5"</value><value>. </value><value>GNU Emacs NEWS -- history of user-visible changes.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Antinews"</value><value>. </value><value>For those users who live backwards in time, here is information about downgrading to Emacs version 24.5. We hope you will enjoy the greater simplicity that results from the absence of many Emacs 25.2 features.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Emacs Timeline</value><value>. Jwz.org. Retrieved on 2013-07-17.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs 26.1 released"</value><value>. </value><value>lists.gnu.org</value><value>. Retrieved </value><value>2018-05-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs 25.1 released"</value><value>. </value><value>lists.gnu.org</value><value>. Retrieved </value><value>2016-09-17</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNU Emacs NEWS -- history of user-visible changes"</value><value>. 2015-04-10</value><value>. Retrieved </value><value>2015-04-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Petton, Nicolas (2015-04-10). </value><value>"Emacs 24.5 released"</value><value>. Retrieved </value><value>2015-04-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Morris, Glenn (2014-10-20). </value><value>"Emacs 24.4 released"</value><value>. Retrieved </value><value>2014-10-22</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Morris, Glenn (2013-03-10). </value><value>"Emacs 24.3 released"</value><value>. Retrieved </value><value>2013-03-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Yidong, Chong (2012-08-27). </value><value>"Emacs release candidate 24.2"</value><value>. Retrieved </value><value>2012-11-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Yidong, Chong (2012-06-01). </value><value>"Emacs release candidate 24.1"</value><value>. Retrieved </value><value>2012-06-01</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Yidong, Chong (2012-01-09). </value><value>"Security flaw in EDE; new release plans"</value><value>. Retrieved </value><value>2012-02-23</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"emacs-fu: emacs 23 has been released!"</value><value>. Emacs-fu.blogspot.com. 2009-07-28</value><value>. Retrieved </value><value>2009-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawodny, Jeremy</value><value> (2003-12-15). </value><value>"Emacs Remote Editing with Tramp"</value><value>. </value><value>Linux Magazine</value><value>. Retrieved </value><value>2010-02-01</value><value>. </value><value>Tramp</value><value> [...] stands for "Transparent Remote (file) Access, Multiple Protocol."</value><value>
</value><value>
</value><value>^</value><value> </value><value>Free Software Foundation Inc (2007). </value><value>"Emacs News version 22.1"</value><value>. Retrieved </value><value>2013-12-29</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>"NEWS.19"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Emacs Timeline"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GNUs Flashes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"NEWS.18"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"NEWS.18"</value><value>. </value><value>Programs such as mailers that invoke "the editor" as an inferior to edit some text can now be told to use an existing Emacs process instead of creating a new editor.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"NEWS.1-17"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Xemacs Internals"</value><value>.</value><value>
</value><value>
</value><value>
</value><value>Further reading</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Stallman, Richard M.</value><value> (2002). </value><value>GNU Emacs Manual</value><value> (15th ed.). GNU Press. </value><value>ISBN</value><value> </value><value>1-882114-85-X</value><value>.</value><value>
</value><value>Stallman, Richard M.</value><value> (2002). </value><value>"My Lisp Experiences and the Development of GNU Emacs"</value><value>. Retrieved </value><value>2007-02-01</value><value>.</value><value>
</value><value>Chassel, Robert J.</value><value> (2004). </value><value>An Introduction to Programming in Emacs Lisp</value><value>. GNU Press. </value><value>ISBN</value><value> </value><value>1-882114-56-6</value><value>. Archived from </value><value>the original</value><value> on 2013-07-03.</value><value>
</value><value>Glickstein, Bob (April 1997). </value><value>Writing GNU Emacs Extensions</value><value>. O'Reilly &amp; Associates. </value><value>ISBN</value><value> </value><value>1-56592-261-1</value><value>.</value><value>
</value><value>Cameron, Debra; Elliott, James; Loy, Marc; Raymond, Eric; Rosenblatt, Bill (December 2004). </value><value>Learning GNU Emacs, 3rd Edition</value><value>. O'Reilly &amp; Associates. </value><value>ISBN</value><value> </value><value>0-596-00648-9</value><value>.</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>free software portal</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>GNU Emacs</value><value>.</value><value>
</value><value>Official website</value><value> </value><value>
</value><value>Unofficial Emacs wiki</value><value>
</value><value>v</value><value>t</value><value>e</value><value> </value><value>Emacs</value><value>Implementations</value><value>GNU and</value><value>derivative</value><value>
</value><value>GNU Emacs</value><value>
</value><value>XEmacs</value><value>
</value><value>SXEmacs</value><value>
</value><value>Aquamacs</value><value>
</value><value>Other</value><value>
</value><value>Climacs</value><value>
</value><value>Epsilon</value><value>
</value><value>Freemacs</value><value>
</value><value>EINE</value><value>
</value><value>Gosling Emacs</value><value>
</value><value>Mocklisp</value><value>
</value><value>Hemlock</value><value>
</value><value>JOVE</value><value>
</value><value>mg</value><value>
</value><value>MicroEMACS</value><value>
</value><value>MINCE</value><value>
</value><value>Multics Emacs</value><value>
</value><value>Perfect Writer</value><value>
</value><value>Spacemacs</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>vile</value><value>
</value><value>Zile</value><value>
</value><value>Zmacs</value><value>
</value><value>ZWEI</value><value>
</value><value>Modes</value><value>
</value><value>AUCTeX</value><value>
</value><value>Dired</value><value>
</value><value>Dunnet</value><value>
</value><value>Emacs Speaks Statistics</value><value>
</value><value>Emacspeak</value><value>
</value><value>EMMS</value><value>
</value><value>ERC</value><value>
</value><value>eww</value><value>
</value><value>Gnus</value><value>
</value><value>Org-mode</value><value>
</value><value>Planner</value><value>
</value><value>rcirc</value><value>
</value><value>RefTeX</value><value>
</value><value>SLIME</value><value>
</value><value>w3m</value><value>
</value><value>Internals</value><value>
</value><value>Emacs Lisp</value><value>
</value><value>Apel</value><value>
</value><value>MULE</value><value>
</value><value>Other</value><value>
</value><value>Conkeror</value><value>
</value><value>Dissociated press</value><value>
</value><value>Editor war</value><value>
</value><value>
</value><value> </value><value>Emacs on Wikimedia Commons</value><value>
</value><value> </value><value>Emacs on Wikiquotes</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>GNU Project</value><value>History</value><value>
</value><value>GNU Manifesto</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>Europe</value><value>
</value><value>India</value><value>
</value><value>Latin America</value><value>
</value><value>History of free software</value><value>
</value><value>Licenses</value><value>
</value><value>GNU General Public License</value><value>
</value><value>GNU Lesser General Public License</value><value>
</value><value>GNU Affero General Public License</value><value>
</value><value>GNU Free Documentation License</value><value>
</value><value>GPL linking exception</value><value>
</value><value>Software</value><value>
</value><value>GNU</value><value> (</value><value>variants</value><value>)</value><value>
</value><value>Hurd</value><value>
</value><value>Linux-libre</value><value>
</value><value>glibc</value><value>
</value><value>Bash</value><value>
</value><value>coreutils</value><value>
</value><value>findutils</value><value>
</value><value>Build System</value><value>
</value><value>GCC</value><value>
</value><value>binutils</value><value>
</value><value>GDB</value><value>
</value><value>GRUB</value><value>
</value><value>GNOME</value><value>
</value><value>GNUstep</value><value>
</value><value>GIMP</value><value>
</value><value>GNU Ring</value><value>
</value><value>GNU Emacs</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>GNU Octave</value><value>
</value><value>GNU R</value><value>
</value><value>GSL</value><value>
</value><value>GMP</value><value>
</value><value>GNU Electric</value><value>
</value><value>GNU Archimedes</value><value>
</value><value>GNUnet</value><value>
</value><value>GNU Privacy Guard</value><value>
</value><value>Gnuzilla</value><value> (</value><value>IceCat</value><value>)</value><value>
</value><value>GNU Health</value><value>
</value><value>GNUmed</value><value>
</value><value>GNU LilyPond</value><value>
</value><value>GNU Go</value><value>
</value><value>GNU Chess</value><value>
</value><value>Gnash</value><value>
</value><value>Guix</value><value>
</value><value>Guix System Distribution</value><value>
</value><value>more...</value><value>
</value><value>Public</value><value>speakers</value><value>
</value><value>Alexandre Oliva</value><value>
</value><value>Benjamin Mako Hill</value><value>
</value><value>Bradley M. Kuhn</value><value>
</value><value>Eben Moglen</value><value>
</value><value>Federico Heinz</value><value>
</value><value>Georg C. F. Greve</value><value>
</value><value>John Sullivan</value><value>
</value><value>Loïc Dachary</value><value>
</value><value>Matt Lee</value><value>
</value><value>Nagarjuna G.</value><value>
</value><value>Ricardo Galli</value><value>
</value><value>Richard Stallman</value><value>
</value><value>Robert J. Chassell</value><value>
</value><value>Other topics</value><value>
</value><value>GNU/Linux naming controversy</value><value>
</value><value>Revolution OS</value><value>
</value><value>Free Software Foundation anti-Windows campaigns</value><value>
</value><value>Defective by Design</value><value>
</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>BIBSYS</value><value>: </value><value>90639209</value><value>
</value><value>GND</value><value>: </value><value>4280005-5</value><value>
</value><value>LCCN</value><value>: </value><value>n91060970</value><value>
</value><value>VIAF</value><value>: </value><value>183953183</value><value>
</value><value> </value><value>WorldCat Identities</value><value>: </value><value>183953183</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 12 September 2018, at 22:16</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/BSD_licenses</url><title>BSD licenses</title><text><value>For the BSD license template for use on Wikipedia, see </value><value>Template:BSD</value><value>.</value><value>
</value><value>This article </value><value>needs additional citations for </value><value>verification</value><value>.</value><value> Please help </value><value>improve this article</value><value> by </value><value>adding citations to reliable sources</value><value>. Unsourced material may be challenged and removed.</value><value>  </value><value>(February 2008)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>BSD licenses</value><value> are a family of </value><value>permissive free software licenses</value><value>, imposing minimal restrictions on the use and distribution of covered software. This is in contrast to </value><value>copyleft</value><value> licenses, which have </value><value>share-alike</value><value> requirements. The original BSD license was used for its namesake, the </value><value>Berkeley Software Distribution</value><value> (BSD), a </value><value>Unix-like</value><value> </value><value>operating system</value><value>. The original version has since been revised, and its descendants are referred to as modified BSD licenses.
</value><value>BSD is both a license and a class of license (generally referred to as BSD-like). The modified BSD license (in wide use today) is very similar to the license originally used for the BSD version of Unix. The BSD license is a simple license that merely requires that all code be licensed under the BSD license if redistributed in source code format. BSD (unlike some other licenses) does not require that source code be distributed at all.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Terms</value><value>
</value><value>
</value><value>1.1</value><value> </value><value>Previous license</value><value>
</value><value>1.2</value><value> </value><value>4-clause license (original "BSD License")</value><value>
</value><value>1.3</value><value> </value><value>3-clause license ("BSD License 2.0", "Revised BSD License", "New BSD License", or "Modified BSD License")</value><value>
</value><value>1.4</value><value> </value><value>2-clause license ("Simplified BSD License" or "FreeBSD License")</value><value>
</value><value>
</value><value>
</value><value>2</value><value> </value><value>License compatibility</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Commercial license compatibility</value><value>
</value><value>2.2</value><value> </value><value>FOSS compatibility</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Reception and usage</value><value>
</value><value>4</value><value> </value><value>See also</value><value>
</value><value>5</value><value> </value><value>References</value><value>
</value><value>6</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Terms</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In addition to the original (4-clause) license used for BSD, several derivative licenses have emerged that are also commonly referred to as a "BSD license". Today, the typical BSD license is the 3-clause version, which is revised from the original 4-clause version.
</value><value>In all BSD licenses as following, </value><value>&lt;organization&gt;</value><value> is the organization of the </value><value>&lt;copyright holder&gt;</value><value> or just the </value><value>&lt;copyright holder&gt;</value><value>, and </value><value>&lt;year&gt;</value><value> is the year of the copyright. As published in BSD, </value><value>&lt;copyright holder&gt;</value><value> is "Regents of the University of California", and </value><value>&lt;organization&gt;</value><value> is "University of California, Berkeley".
</value><value>
</value><value>Previous license</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Prior BSD License</value><value>Author</value><value>Regents of the University of California</value><value>Publisher</value><value>Public Domain</value><value>Published</value><value>1988</value><value>DFSG</value><value> compatible</value><value>Yes</value><value>FSF</value><value> </value><value>approved</value><value>Yes</value><value>OSI</value><value> </value><value>approved</value><value>No</value><value>GPL compatible</value><value>No</value><value>Copyleft</value><value>No</value><value>Linking from code with a different license</value><value>Yes</value><value>
</value><value>Some releases of BSD prior to the adoption of the 4-clause BSD license used a license that is clearly ancestral to the 4-clause BSD license. These releases include 4.3BSD-Tahoe (1988) and Net/1 (1989). Although largely replaced by the 4-clause license, this license can be found in 4.3BSD-Reno, Net/2, and 4.4BSD-Alpha.
</value><value>
</value><value>Copyright (c) &lt;year&gt; &lt;copyright holder&gt;.
All rights reserved.

Redistribution and use in source and binary forms are permitted
provided that the above copyright notice and this paragraph are
duplicated in all such forms and that any documentation,
advertising materials, and other materials related to such
distribution and use acknowledge that the software was developed
by the &lt;organization&gt;. The name of the
&lt;organization&gt; may not be used to endorse or promote products derived
from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
</value><value>
</value><value> 4-clause license (original "BSD License")</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>BSD License</value><value>Author</value><value>Regents of the University of California</value><value>Publisher</value><value>Public Domain</value><value>Published</value><value>1990</value><value>DFSG</value><value> compatible</value><value>Yes</value><value>[1]</value><value>FSF</value><value> </value><value>approved</value><value>Yes</value><value>[2]</value><value>OSI</value><value> </value><value>approved</value><value>No</value><value>[3]</value><value>GPL compatible</value><value>No</value><value>[2]</value><value>Copyleft</value><value>No</value><value>[2]</value><value>Linking from code with a different license</value><value>Yes</value><value>
</value><value>The original BSD license contained a clause not found in later licenses, known as the "advertising clause". This clause eventually became controversial, as it required authors of all works deriving from a BSD-licensed work to include an acknowledgment of the original source in all advertising material. This was clause number 3 in the original license text:</value><value>[4]</value><value>
</value><value>
</value><value>Copyright (c) &lt;year&gt;, &lt;copyright holder&gt;
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. All advertising materials mentioning features or use of this software
   must display the following acknowledgement:
   This product includes software developed by the &lt;organization&gt;.
4. Neither the name of the &lt;organization&gt; nor the
   names of its contributors may be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY &lt;COPYRIGHT HOLDER&gt; ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL &lt;COPYRIGHT HOLDER&gt; BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
</value><value>
</value><value>This clause was objected to on the grounds that as people changed the license to reflect their name or organization it led to escalating advertising requirements when programs were combined together in a software distribution: every occurrence of the license with a different name required a separate acknowledgment. In arguing against it, </value><value>Richard Stallman</value><value> has stated that he counted 75 such acknowledgments in a 1997 version of </value><value>NetBSD</value><value>.</value><value>[5]</value><value> In addition, the clause presented a legal problem for those wishing to publish BSD-licensed software which relies upon separate programs using the </value><value>GNU GPL</value><value>: the advertising clause is </value><value>incompatible</value><value> with the GPL, which does not allow the addition of restrictions beyond those it already imposes; because of this, the GPL's publisher, the </value><value>Free Software Foundation</value><value>, recommends developers not use the license, though it states there is no reason not to use software already using it.</value><value>[2]</value><value>
</value><value>Today, this original license is now sometimes called "</value><value>BSD-old</value><value>" or "</value><value>4-clause BSD</value><value>".
</value><value>
</value><value> 3-clause license ("BSD License 2.0", "Revised BSD License", "New BSD License", or "Modified BSD License")</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>See also: </value><value>University of Illinois/NCSA Open Source License</value><value>
</value><value>New BSD License</value><value>Author</value><value>Regents of the University of California</value><value>Publisher</value><value>Public Domain</value><value>Published</value><value>22 July 1999</value><value>[4]</value><value>DFSG</value><value> compatible</value><value>Yes</value><value>[1]</value><value>FSF</value><value> </value><value>approved</value><value>Yes</value><value>[6]</value><value>OSI</value><value> </value><value>approved</value><value>Yes</value><value>[3]</value><value>GPL compatible</value><value>Yes</value><value>[6]</value><value>Copyleft</value><value>No</value><value>[6]</value><value>Linking from code with a different license</value><value>Yes</value><value>
</value><value>The advertising clause was removed from the license text in the official BSD on </value><value>22 July 1999</value><value> by William Hoskins, Director of the Office of Technology Licensing for UC Berkeley.</value><value>[4]</value><value>[7]</value><value> Other BSD distributions removed the clause, but many similar clauses remain in BSD-derived code from other sources, and unrelated code using a derived license.
</value><value>While the original license is sometimes referred to as the "</value><value>BSD-old</value><value>", the resulting 3-clause version is sometimes referred to by "</value><value>BSD-new</value><value>." Other names include "New BSD", "revised BSD", "BSD-3", or "3-clause BSD". This version has been </value><value>vetted</value><value> as an Open source license by the OSI as "The BSD License".</value><value>[3]</value><value> The Free Software Foundation, which refers to the license as the "Modified BSD License", states that it is compatible with the GNU GPL. The FSF encourages users to be specific when referring to the license by name (i.e. not simply referring to it as "a BSD license" or "BSD-style") to avoid confusion with the original BSD license.</value><value>[6]</value><value>
</value><value>This version allows unlimited redistribution for any purpose as long as its copyright notices and the license's disclaimers of warranty are maintained. The license also contains a clause restricting use of the names of contributors for endorsement of a derived work without specific permission.
</value><value>
</value><value>Copyright (c) &lt;year&gt;, &lt;copyright holder&gt;
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the &lt;organization&gt; nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL &lt;COPYRIGHT HOLDER&gt; BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
</value><value>
</value><value> 2-clause license ("Simplified BSD License" or "FreeBSD License")</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"FreeBSD License" redirects here. For documentation, see </value><value>FreeBSD Documentation License</value><value>.</value><value>
</value><value>See also: </value><value>ISC license</value><value> and </value><value>MIT License</value><value>
</value><value>FreeBSD License</value><value>Author</value><value>The </value><value>FreeBSD</value><value> Project</value><value>Publisher</value><value>The </value><value>FreeBSD</value><value> Project</value><value>Published</value><value>April 1999 or earlier</value><value>DFSG</value><value> compatible</value><value>Yes</value><value>FSF</value><value> </value><value>approved</value><value>Yes</value><value>[8]</value><value>OSI</value><value> </value><value>approved</value><value>Yes</value><value>[3]</value><value>GPL compatible</value><value>Yes</value><value>[8]</value><value>Copyleft</value><value>No</value><value>[8]</value><value>Linking from code with a different license</value><value>Yes</value><value>
</value><value>An even more simplified version has come into use, primarily known for its usage in </value><value>FreeBSD</value><value>.</value><value>[9]</value><value> It was in use there as early as April 29, 1999 </value><value>[10]</value><value> and likely well before. The primary difference between it and the New BSD (3-clause) License is that it omits the non-endorsement clause. It also adds a further disclaimer about views and opinions expressed in the software. The Free Software Foundation, which refers to the license as the FreeBSD License, states that it is compatible with the GNU GPL. In addition, the FSF encourages users to be specific when referring to the license by name (i.e. not simply referring to it as "a BSD license" or "BSD-style"), as it does with the modified/new BSD license, to avoid confusion with the original BSD license.</value><value>[8]</value><value>
</value><value>
</value><value>Copyright (c) &lt;year&gt;, &lt;copyright holder&gt;
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies,
either expressed or implied, of the &lt;project name&gt; project.
</value><value>
</value><value>Other projects, such as </value><value>NetBSD</value><value>, use a similar 2-clause license, but without the additional disclaimer.</value><value>[11]</value><value> This version has been </value><value>vetted</value><value> as an Open source license by the OSI as the "Simplified BSD License."</value><value>[3]</value><value>
</value><value>The </value><value>ISC license</value><value> is functionally equivalent, and endorsed by the </value><value>OpenBSD</value><value> project as a license template for new contributions.</value><value>[12]</value><value>
</value><value>
</value><value>License compatibility</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>License compatibility</value><value>
</value><value>Commercial license compatibility</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The </value><value>FreeBSD</value><value> project argues on the advantages of BSD-style licenses for companies and commercial use-cases due to their </value><value>license compatibility</value><value> with </value><value>proprietary</value><value> licenses and general flexibility, stating that the BSD-style licenses place only </value><value>"minimal restrictions on future behavior"</value><value> and aren't </value><value>"legal time-bombs"</value><value>, unlike </value><value>copyleft licenses</value><value>.</value><value>[13]</value><value> The BSD License allows proprietary use and allows the software released under the license to be incorporated into proprietary products. Works based on the material may be released under a proprietary license as closed source software, allowing usual commercial usages under them.
</value><value>
</value><value>FOSS compatibility</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The 3-clause BSD license, like most </value><value>permissive licenses</value><value>, is compatible with almost all FOSS licenses (and as well proprietary licenses).</value><value>[14]</value><value>[15]</value><value>
</value><value>Two variants of the license, the New BSD License/Modified BSD License (3-clause),</value><value>[6]</value><value> and the Simplified BSD License/FreeBSD License (2-clause)</value><value>[8]</value><value> have been verified as </value><value>GPL</value><value>-</value><value>compatible</value><value> </value><value>free software licenses</value><value> by the </value><value>Free Software Foundation</value><value>, and have been </value><value>vetted</value><value> as </value><value>open source licenses</value><value> by the </value><value>Open Source Initiative</value><value>.</value><value>[3]</value><value> The </value><value>original, 4-clause BSD license</value><value> has not been accepted as an open source license and, although the original is considered to be a free software license by the FSF, the FSF does not consider it to be compatible with the GPL due to the advertising clause.</value><value>[2]</value><value>
</value><value>
</value><value>Reception and usage</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>.mw-parser-output .quotebox{background-color:#F9F9F9;border:1px solid #aaa;box-sizing:border-box;padding:10px;font-size:88%}.mw-parser-output .quotebox.floatleft{margin:0.5em 1.4em 0.8em 0}.mw-parser-output .quotebox.floatright{margin:0.5em 0 0.8em 1.4em}.mw-parser-output .quotebox.centered{margin:0.5em auto 0.8em auto}.mw-parser-output .quotebox.floatleft p,.mw-parser-output .quotebox.floatright p{font-style:inherit}.mw-parser-output .quotebox-title{background-color:#F9F9F9;text-align:center;font-size:larger;font-weight:bold}.mw-parser-output .quotebox-quote.quoted:before{font-family:"Times New Roman",serif;font-weight:bold;font-size:large;color:gray;content:" “ ";vertical-align:-45%;line-height:0}.mw-parser-output .quotebox-quote.quoted:after{font-family:"Times New Roman",serif;font-weight:bold;font-size:large;color:gray;content:" ” ";line-height:0}.mw-parser-output .quotebox .left-aligned{text-align:left}.mw-parser-output .quotebox .right-aligned{text-align:right}.mw-parser-output .quotebox .center-aligned{text-align:center}.mw-parser-output .quotebox cite{display:block;font-style:normal}@media screen and (max-width:360px){.mw-parser-output .quotebox{min-width:100%;margin:0 0 0.8em!important;float:none!important}}</value><value>
</value><value>Over the years I’ve become convinced that the BSD license is great for code you don’t care about. I’ll use it myself.</value><value>
</value><value>-- </value><value>Linus Torvalds</value><value> at LinuxCon 2016</value><value>[16]</value><value>
</value><value>
</value><value>
</value><value>The BSD license family is one of the oldest and broadly used license family in the </value><value>FOSS</value><value> ecosystem. Also, many new licenses were derived or inspired by the BSD licenses. Many FOSS software projects use a BSD license, for instance the BSD OS family (</value><value>FreeBSD</value><value> etc.), </value><value>Google</value><value>'s </value><value>Bionic</value><value> or </value><value>Toybox</value><value>. As of  2015</value><value>[update]</value><value> the BSD 3-clause license ranked in popularity number five according to Black Duck Software</value><value>[17]</value><value> and sixth according to </value><value>GitHub</value><value> data.</value><value>[18]</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Comparison of free and open-source software licenses</value><value>
</value><value>Software using the BSD license (category)</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"License information"</value><value>. Debian</value><value>. Retrieved </value><value>18 February</value><value> 2010</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>"Original BSD license"</value><value>. </value><value>Various Licenses and Comments about Them</value><value>. Free Software Foundation</value><value>. Retrieved </value><value>2 October</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>f</value><value> </value><value>"The BSD License:Licensing"</value><value>. Open Source Initiative. </value><value>Archived</value><value> from the original on 29 November 2009</value><value>. Retrieved </value><value>6 December</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>"To All Licensees, Distributors of Any Version of BSD"</value><value>. University of California, Berkeley. 1999-07-22</value><value>. Retrieved </value><value>2006-11-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Richard Stallman. </value><value>"The BSD License Problem"</value><value>. Free Software Foundation. </value><value>Archived</value><value> from the original on 12 November 2006</value><value>. Retrieved </value><value>2006-11-15</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>"Modified BSD license"</value><value>. </value><value>Various Licenses and Comments about Them</value><value>. Free Software Foundation</value><value>. Retrieved </value><value>2 October</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Comparing the BSD and GPL Licenses</value><value> on Technology Innovation Management Review by Bruce Montague (on October 2007)</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>"FreeBSD license"</value><value>. </value><value>Various Licenses and Comments about Them</value><value>. Free Software Foundation</value><value>. Retrieved </value><value>2 October</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The FreeBSD Copyright"</value><value>. The FreeBSD Project. </value><value>Archived</value><value> from the original on 25 November 2009</value><value>. Retrieved </value><value>6 December</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The FreeBSD Copyright (as available at archive.org)"</value><value>. The FreeBSD Foundation. Archived from the original on 29 April 1999</value><value>. Retrieved </value><value>7 January</value><value> 2017</value><value>.</value><value>CS1 maint: BOT: original-url status unknown (</value><value>link</value><value>) </value><value>
</value><value>
</value><value>^</value><value> </value><value>"NetBSD Licensing and Redistribution"</value><value>. The NetBSD Foundation</value><value>. Retrieved </value><value>6 December</value><value> 2009</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"OpenBSD Copyright Policy"</value><value>. Retrieved </value><value>2016-07-17</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Montague, Bruce (2013-11-13). </value><value>"Why you should use a BSD style license for your Open Source Project - GPL Advantages and Disadvantages"</value><value>. </value><value>FreeBSD</value><value>. Retrieved </value><value>2015-11-28</value><value>. </value><value>In contrast to the GPL, which is designed to prevent the proprietary commercialization of Open Source code, the BSD license places minimal restrictions on future behavior. This allows BSD code to remain Open Source or become integrated into </value><value>commercial</value><value> solutions, as a project's or company's needs change. In other words, the BSD license does not become a legal time-bomb at any point in the development process. In addition, since the BSD license does not come with the legal complexity of the GPL or LGPL licenses, it allows developers and companies to spend their time creating and promoting good code rather than worrying if that code violates licensing.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Hanwell, Marcus D. (28 Jan 2014). </value><value>"Should I use a permissive license? Copyleft? Or something in the middle?"</value><value>. opensource.com</value><value>. Retrieved </value><value>2015-05-30</value><value>. </value><value>Permissive licensing simplifies things One reason the business world, and more and more developers [...], favor permissive licenses is in the simplicity of reuse. The license usually only pertains to the source code that is licensed and makes no attempt to infer any conditions upon any other component, and because of this there is no need to define what constitutes a derived work. I have also never seen a license compatibility chart for permissive licenses; it seems that they are all compatible.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Licence Compatibility and Interoperability"</value><value>. </value><value>Open-Source Software - Develop, share, and reuse open source software for public administrations</value><value>. joinup.ec.europa.eu. Archived from </value><value>the original</value><value> on 17 June 2015</value><value>. Retrieved </value><value>30 May</value><value> 2015</value><value>. </value><value>The licences for distributing free or open source software (FOSS) are divided in two families: permissive and copyleft. Permissive licences (BSD, MIT, X11, Apache, Zope) are generally compatible and interoperable with most other licences, tolerating to merge, combine or improve the covered code and to re-distribute it under many licences (including non-free or “proprietary”).</value><value>
</value><value>
</value><value>^</value><value> </value><value>Torvalds at LinuxCon Part III: Permissive Licenses and Org Charts</value><value> FOSS Force, 2016</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Top 20 licenses"</value><value>. Black Duck Software. 19 November 2015</value><value>. Retrieved </value><value>19 November</value><value> 2015</value><value>. </value><value>1. MIT license 24%, 2. GNU General Public License (GPL) 2.0 23%, 3. Apache License 16%, 4. GNU General Public License (GPL) 3.0 9%, 5. BSD License 2.0 (3-clause, New or Revised) License 6%, 6. GNU Lesser General Public License (LGPL) 2.1 5%, 7. Artistic License (Perl) 4%, 8. GNU Lesser General Public License (LGPL) 3.0 2%, 9. Microsoft Public License 2%, 10. Eclipse Public License (EPL) 2%</value><value>
</value><value>
</value><value>^</value><value> </value><value>Balter, Ben (2015-03-09). </value><value>"Open source license usage on GitHub.com"</value><value>. </value><value>github.com</value><value>. Retrieved </value><value>2015-11-21</value><value>. </value><value>"1 MIT 44.69%, 2 Other 15.68%, 3 GPLv2 12.96%, 4 Apache 11.19%, 5 GPLv3 8.88%, 6 BSD 3-clause 4.53%, 7 Unlicense 1.87%, 8 BSD 2-clause 1.70%, 9 LGPLv3 1.30%, 10 AGPLv3 1.05%</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Twenty Years of Berkeley Unix: From AT&amp;T-Owned to Freely Redistributable</value><value>, Marshall Kirk McKusick, in: Open Sources: Voices from the Open Source Revolution, O'Reilly 1999</value><value>
</value><value>The Amazing Disappearing BSD License</value><value>
</value><value>BSD License Definition</value><value> – by The Linux Information Project (LINFO)</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Berkeley Software Distribution</value><value>People</value><value>
</value><value>Bob Fabry</value><value>
</value><value>Keith Bostic</value><value>
</value><value>Marshall Kirk McKusick</value><value>
</value><value>Michael J. Karels</value><value>
</value><value>Bill Joy</value><value>
</value><value>Samuel Leffler</value><value>
</value><value>Jordan Hubbard</value><value>
</value><value>Theo de Raadt</value><value>
</value><value>Poul-Henning Kamp</value><value>
</value><value>Lynne</value><value> and </value><value>William Jolitz</value><value>
</value><value>Derivatives</value><value>Active</value><value>
</value><value>FreeBSD</value><value>
</value><value>OpenBSD</value><value>
</value><value>NetBSD</value><value>
</value><value>DragonFly BSD</value><value>
</value><value>TrueOS</value><value>
</value><value>Junos OS</value><value>
</value><value>Darwin</value><value>
</value><value>PS3</value><value>/</value><value>PS4</value><value>/</value><value>PSP</value><value>/</value><value>PS Vita operating system</value><value>
</value><value>Nintendo Switch operating system</value><value>
</value><value>Full list</value><value>
</value><value>Discontinued</value><value>
</value><value>386BSD</value><value>
</value><value>BSD/OS</value><value>
</value><value>SunOS</value><value>
</value><value>Ultrix</value><value>
</value><value>Companies</value><value>
</value><value>Sleepycat Software</value><value>
</value><value>Walnut Creek CDROM</value><value>
</value><value>Berkeley Software Design</value><value>
</value><value>iXsystems</value><value>
</value><value>Other topics</value><value>
</value><value>Comparison</value><value>
</value><value>History</value><value>
</value><value>Licensing</value><value>
</value><value>BSD Daemon</value><value>
</value><value>Computer Systems Research Group</value><value>
</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>Portal</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Free and open-source software</value><value>General</value><value>
</value><value>Alternative terms for free software</value><value>
</value><value>Comparison of open-source and closed-source software</value><value>
</value><value>Comparison of source code hosting facilities</value><value>
</value><value>Free software</value><value>
</value><value>Free software project directories</value><value>
</value><value>Gratis versus libre</value><value>
</value><value>Long-term support</value><value>
</value><value>Open-source software</value><value>
</value><value>Open-source software development</value><value>
</value><value>Outline</value><value>
</value><value>Software</value><value>packages</value><value>
</value><value>Audio</value><value>
</value><value>Bioinformatics</value><value>
</value><value>Codecs</value><value>
</value><value>Collaboration</value><value>
</value><value>Configuration management</value><value>
</value><value>Device drivers</value><value>
</value><value>Graphics</value><value>
</value><value>Wireless</value><value>
</value><value>Geophysics</value><value>
</value><value>Health</value><value>
</value><value>Mathematics</value><value>
</value><value>Operating systems</value><value>
</value><value>Programming languages</value><value>
</value><value>Routing</value><value>
</value><value>Statistics</value><value>
</value><value>Television</value><value>
</value><value>Video games</value><value>
</value><value>Web applications</value><value>
</value><value>Content management systems</value><value>
</value><value>E-commerce</value><value>
</value><value>Word processors</value><value>
</value><value>Android apps</value><value>
</value><value>iOS apps</value><value>
</value><value>Commercial</value><value>
</value><value>Trademarked</value><value>
</value><value>Formerly proprietary</value><value>
</value><value>Community</value><value>
</value><value>Free software movement</value><value>
</value><value>History</value><value>
</value><value>Open-source software movement</value><value>
</value><value>Organizations</value><value>
</value><value>Events</value><value>
</value><value>Licenses</value><value>
</value><value>AFL</value><value>
</value><value>Apache</value><value>
</value><value>APSL</value><value>
</value><value>Artistic</value><value>
</value><value>Beerware</value><value>
</value><value>Boost</value><value>
</value><value>BSD</value><value>
</value><value>CC0</value><value>
</value><value>CDDL</value><value>
</value><value>EPL</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>GNU GPL</value><value>
</value><value>GNU LGPL</value><value>
</value><value>ISC</value><value>
</value><value>MIT</value><value>
</value><value>MPL</value><value>
</value><value>Ms-PL/RL</value><value>
</value><value>Python</value><value>
</value><value>Python Software Foundation License</value><value>
</value><value>Sleepycat</value><value>
</value><value>Unlicense</value><value>
</value><value>WTFPL</value><value>
</value><value>zlib</value><value>
</value><value>Types and</value><value> standards</value><value>
</value><value>Comparison of free and open-source software licenses</value><value>
</value><value>Contributor License Agreement</value><value>
</value><value>Copyleft</value><value>
</value><value>Debian Free Software Guidelines</value><value>
</value><value>Definition of Free Cultural Works</value><value>
</value><value>Free license</value><value>
</value><value>The Free Software Definition</value><value>
</value><value>The Open Source Definition</value><value>
</value><value>Open-source license</value><value>
</value><value>Permissive software licence</value><value>
</value><value>Public domain</value><value>
</value><value>Viral license</value><value>
</value><value>
</value><value>Challenges</value><value>
</value><value>Binary blob</value><value>
</value><value>Digital rights management</value><value>
</value><value>Hardware restrictions</value><value>
</value><value>License proliferation</value><value>
</value><value>Mozilla software rebranding</value><value>
</value><value>Proprietary software</value><value>
</value><value>SCO/Linux controversies</value><value>
</value><value>Secure boot</value><value>
</value><value>Software patents</value><value>
</value><value>Software security</value><value>
</value><value>Trusted Computing</value><value>
</value><value>Related topics</value><value>
</value><value>Forking</value><value>
</value><value>GNU Manifesto</value><value>
</value><value>Microsoft Open Specification Promise</value><value>
</value><value>Open-core model</value><value>
</value><value>Open-source hardware</value><value>
</value><value>Shared Source Initiative</value><value>
</value><value>Source-available software</value><value>
</value><value>The Cathedral and the Bazaar</value><value>
</value><value>Revolution OS</value><value>
</value><value>
</value><value> </value><value>Book</value><value>
</value><value> </value><value>Category</value><value>
</value><value> </value><value>Commons</value><value>
</value><value> </value><value>Portal</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 11 December 2018, at 07:41</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Wayback_Machine</url><title>Wayback Machine</title><text><value>For help citing the Wayback Machine in the English Wikipedia, see </value><value>Help:Using the Wayback Machine</value><value>.</value><value>
</value><value>Not to be confused with </value><value>WABAC machine</value><value> or </value><value>Time machine (disambiguation)</value><value>.</value><value>
</value><value>Web archive service</value><value>
</value><value>Wayback Machine</value><value>Screenshot</value><value>
</value><value>Wayback Machine homepage on November 2015</value><value>Type of site</value><value>Archive</value><value>Owner</value><value>Internet Archive</value><value>Website</value><value>web</value><value>.archive</value><value>.org</value><value>Alexa</value><value> rank</value><value> 263 (As of  December 2018</value><value>[update]</value><value>)</value><value>[1]</value><value>Registration</value><value>Optional</value><value>Launched</value><value>October 24, 2001</value><value>; 17 years ago</value><value> (</value><value>2001-10-24</value><value>)</value><value>[2]</value><value>[3]</value><value>Current status</value><value>Active</value><value>Written in</value><value>Java</value><value>, Python</value><value>
</value><value>The </value><value>Wayback Machine</value><value> is a digital </value><value>archive</value><value> of the </value><value>World Wide Web</value><value> and other information on the </value><value>Internet</value><value>. It was launched in 2001 by the </value><value>Internet Archive</value><value>, a </value><value>nonprofit organization</value><value> based in </value><value>San Francisco</value><value>, </value><value>California</value><value>, </value><value>United States</value><value>. 
</value><value>
</value><value>.mw-parser-output .toclimit-2 .toclevel-1 ul,.mw-parser-output .toclimit-3 .toclevel-2 ul,.mw-parser-output .toclimit-4 .toclevel-3 ul,.mw-parser-output .toclimit-5 .toclevel-4 ul,.mw-parser-output .toclimit-6 .toclevel-5 ul,.mw-parser-output .toclimit-7 .toclevel-6 ul{display:none}</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Technical details</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Storage capacity and growth</value><value>
</value><value>2.2</value><value> </value><value>Growth</value><value>
</value><value>2.3</value><value> </value><value>Website exclusion policy</value><value>
</value><value>
</value><value>2.3.1</value><value> </value><value>Oakland Archive Policy</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Uses</value><value>
</value><value>
</value><value>3.1</value><value> </value><value>Limitations</value><value>
</value><value>3.2</value><value> </value><value>In legal evidence</value><value>
</value><value>
</value><value>3.2.1</value><value> </value><value>Civil litigation</value><value>
</value><value>
</value><value>3.2.1.1</value><value> </value><value>Netbula LLC v. Chordiant Software Inc.</value><value>
</value><value>3.2.1.2</value><value> </value><value>Telewizja Polska</value><value>
</value><value>
</value><value>
</value><value>3.2.2</value><value> </value><value>Patent law</value><value>
</value><value>3.2.3</value><value> </value><value>Limitations of utility</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>4</value><value> </value><value>Legal status</value><value>
</value><value>5</value><value> </value><value>Archived content legal issues</value><value>
</value><value>
</value><value>5.1</value><value> </value><value>Scientology</value><value>
</value><value>5.2</value><value> </value><value>Healthcare Advocates, Inc.</value><value>
</value><value>5.3</value><value> </value><value>Suzanne Shell</value><value>
</value><value>5.4</value><value> </value><value>Daniel Davydiuk</value><value>
</value><value>
</value><value>
</value><value>6</value><value> </value><value>Censorship and other threats</value><value>
</value><value>7</value><value> </value><value>See also</value><value>
</value><value>8</value><value> </value><value>References</value><value>
</value><value>9</value><value> </value><value>External links</value><value>
</value><value>
</value><value>9.1</value><value> </value><value>Mirrors</value><value>
</value><value>9.2</value><value> </value><value>Utilities</value><value>
</value><value>
</value><value>
</value><value>
</value><value>
</value><value>  
</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Internet Archive</value><value> founders </value><value>Brewster Kahle</value><value> and </value><value>Bruce Gilliat</value><value> launched the Wayback Machine in 2001 to address the problem of website content vanishing whenever it gets changed or shut down.</value><value>[4]</value><value> The service enables users to see archived versions of </value><value>web pages</value><value> across time, which the archive calls a "three dimensional index".</value><value>[5]</value><value> Kahle and Gilliat created the machine hoping to archive the entire Internet and provide "universal access to all knowledge."</value><value>[6]</value><value>
</value><value>The name </value><value>Wayback Machine</value><value> was chosen as a reference to the "</value><value>WABAC machine</value><value>" (pronounced </value><value>way-back</value><value>), a </value><value>time-traveling</value><value> device used by the characters </value><value>Mr. Peabody</value><value> and Sherman in </value><value>The Rocky and Bullwinkle Show</value><value>, an animated cartoon.</value><value>[7]</value><value>[8]</value><value> In one of the animated cartoon's component segments, </value><value>Peabody's Improbable History</value><value>, the characters routinely used the machine to witness, participate in, and, more often than not, alter famous events in history.
</value><value>The Wayback Machine began archiving cached web pages in 1996, with the goal of making the service public five years later.</value><value>[9]</value><value> From 1996 to 2001 the information was kept on digital tape, with Kahle occasionally allowing researchers and scientists to tap into the clunky database.</value><value>[10]</value><value> When the archive reached its fifth anniversary in 2001, it was unveiled and opened to the public in a ceremony at the </value><value>University of California, Berkeley</value><value>.</value><value>[11]</value><value> By the time the Wayback Machine launched, it already contained over 10 billion archived pages.</value><value>[12]</value><value>
</value><value>Today the data is stored on the Internet Archive's large cluster of </value><value>Linux</value><value> nodes.</value><value>[6]</value><value> It revisits and archives new versions of websites on occasion (see technical details below).</value><value>[13]</value><value> Sites can also be captured manually by entering a website's </value><value>URL</value><value> into the search box, provided the website allows the Wayback Machine to "crawl" it and save the data.</value><value>[9]</value><value>
</value><value>
</value><value>Technical details</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Software has been developed to </value><value>"crawl"</value><value> the web and download all publicly accessible World Wide Web pages, the </value><value>Gopher</value><value> hierarchy, the </value><value>Netnews</value><value> (Usenet) bulletin board system, and downloadable software.</value><value>[14]</value><value> The information collected by these "crawlers" does not include all the information available on the Internet, since much of the data is restricted by the publisher or stored in databases that are not accessible. To overcome inconsistencies in partially cached websites, Archive-It.org was developed in 2005 by the Internet Archive as a means of allowing institutions and content creators to voluntarily harvest and preserve collections of digital content, and create digital archives.</value><value>[15]</value><value>
</value><value>Crawls are contributed from various sources, some imported from third parties and others generated internally by the Archive.</value><value>[13]</value><value> For example, crawls are contributed by the </value><value>Sloan Foundation</value><value> and </value><value>Alexa</value><value>, crawls run by IA on behalf of </value><value>NARA</value><value> and the </value><value>Internet Memory Foundation</value><value>, mirrors of </value><value>Common Crawl</value><value>.</value><value>[13]</value><value> The "Worldwide Web Crawls" have been running since 2010 and capture the global Web.</value><value>[16]</value><value>[13]</value><value>
</value><value>The frequency of snapshot captures varies per website.</value><value>[13]</value><value> Websites in the "Worldwide Web Crawls" are included in a "crawl list", with the site archived once per crawl.</value><value>[13]</value><value> A crawl can take months or even years to complete depending on size.</value><value>[13]</value><value> For example, "Wide Crawl Number 13" started on January 9, 2015, and completed on July 11, 2016.</value><value>[17]</value><value> However, there may be multiple crawls ongoing at any one time, and a site might be included in more than one crawl list, so how often a site is crawled varies widely.</value><value>[13]</value><value>
</value><value>
</value><value>Storage capacity and growth</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>As technology has developed over the years, the storage capacity of the Wayback Machine and its parent company Alexa Internet has grown. In 2003, after only two years of public access, the Wayback Machine was growing at a rate of 12 terabytes/month. The data is stored on </value><value>PetaBox</value><value> rack systems custom designed by Internet Archive staff. The first 100TB rack became fully operational in June 2004, although it soon became clear that they would need much more storage than that.</value><value>[18]</value><value>[19]</value><value>
</value><value>In 2009, the Internet Archive migrated its customized storage architecture to </value><value>Sun Open Storage</value><value>, and hosts a new data center in a </value><value>Sun Modular Datacenter</value><value> on </value><value>Sun Microsystems</value><value>' California campus.</value><value>[20]</value><value> As of  2009</value><value>[update]</value><value>, the Wayback Machine contained approximately three </value><value>petabytes</value><value> of data and was growing at a rate of 100 </value><value>terabytes</value><value> each month.</value><value>[21]</value><value>
</value><value>In 2011 a new, improved version of the Wayback Machine, with an updated interface and fresher index of archived content, was made available for public testing.</value><value>[22]</value><value> In March 2011, it was said on the Wayback Machine forum that, "the Beta of the new Wayback Machine has a more complete and up-to-date index of all crawled materials into 2010, and will continue to be updated regularly. The index driving the classic Wayback Machine only has a little bit of material past 2008, and no further index updates are planned, as it will be phased out this year."</value><value>[23]</value><value> Also in 2011, the Internet Archive installed their sixth pair of PetaBox racks which increased the Wayback Machine's storage capacity by 700 terabytes.</value><value>[24]</value><value>
</value><value>In January 2013, the company announced a ground-breaking milestone of 240 billion URLs.</value><value>[25]</value><value> In October 2013, the company announced the "Save a Page" feature</value><value>[26]</value><value> which allows any Internet user to archive the contents of a URL. This became a threat of abuse by the service for </value><value>hosting malicious binaries</value><value>.</value><value>[27]</value><value>[28]</value><value>
</value><value>As of  December 2014</value><value>[update]</value><value>, the Wayback Machine contained 435 billion web pages—almost nine </value><value>petabytes</value><value> of data and was growing about 20 </value><value>terabytes</value><value> a week.</value><value>[29]</value><value>[12]</value><value>[30]</value><value>
</value><value>As of  July 2016</value><value>[update]</value><value>, the Wayback Machine reportedly contained around 15 </value><value>petabytes</value><value> of data.</value><value>[31]</value><value>
</value><value>As of September 2018, the Wayback Machine contained more than 25 petabytes of data.</value><value>[32]</value><value>[33]</value><value>
</value><value>
</value><value>Growth</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Between October 2013 and March 2015 the website's global Alexa rank changed from 163</value><value>[34]</value><value> to 208.</value><value>[35]</value><value>
</value><value>
</value><value>
</value><value>Wayback Machine Growth
</value><value>[36]</value><value>

</value><value>[37]</value><value>
</value><value>
</value><value>
</value><value>Year
</value><value>
</value><value>Pages Archived (billion)
</value><value>
</value><value>
</value><value>2005
</value><value>
</value><value>40</value><value>
</value><value>
</value><value>
</value><value>2008
</value><value>
</value><value>85</value><value>
</value><value>
</value><value>
</value><value>2012
</value><value>
</value><value>150</value><value>
</value><value>
</value><value>
</value><value>2013
</value><value>
</value><value>373</value><value>
</value><value>
</value><value>
</value><value>2014
</value><value>
</value><value>400</value><value>
</value><value>
</value><value>
</value><value>2015
</value><value>
</value><value>452</value><value>
</value><value>
        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

 


</value><value>
</value><value>Website exclusion policy</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Historically, Wayback Machine has respected the </value><value>robots exclusion standard</value><value> (robots.txt) in determining if a website would be crawled or not; or if already crawled, if its archives would be publicly viewable. Website owners had the option to opt-out of Wayback Machine through the use of robots.txt. It applied robots.txt rules retroactively; if a site blocked the Internet Archive, any previously archived pages from the domain were immediately rendered unavailable as well. In addition the Internet Archive stated, "Sometimes a website owner will contact us directly and ask us to stop crawling or archiving a site. We comply with these requests."</value><value>[38]</value><value> In addition, the website says: "The Internet Archive is not interested in preserving or offering access to Web sites or other Internet documents of persons who do not want their materials in the collection."</value><value>[39]</value><value>[40]</value><value>
</value><value>
</value><value>Oakland Archive Policy</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Wayback's retroactive exclusion policy is based in part upon </value><value>Recommendations for Managing Removal Requests and Preserving Archival Integrity</value><value> published by the School of Information Management and Systems at </value><value>University of California, Berkeley</value><value> in 2002, which gives a website owner the right to block access to the site's archives.</value><value>[41]</value><value>  Wayback has complied with this policy to help avoid expensive litigation.</value><value>[42]</value><value>
</value><value>The Wayback retroactive exclusion policy began to relax in 2017, when it stopped honoring robots.txt on U.S. government and military web sites for both crawling and displaying web pages. As of April 2017, Wayback is ignoring robots.txt more broadly, not just for U.S. government websites.</value><value>[43]</value><value>[44]</value><value>[45]</value><value>[46]</value><value>
</value><value>
</value><value>Uses</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>From its public launch in 2001, the Wayback Machine has been studied by scholars both for the ways it stores and collects data as well as for the actual pages contained in its archive. As of 2013, scholars had written about 350 articles on the Wayback Machine, mostly from the information technology, library science, and social science fields. Social science scholars have used the Wayback Machine to analyze how the development of websites from the mid-1990s to the present has effected the company's growth.</value><value>[12]</value><value>
</value><value>When the Wayback Machine archives a page, it usually includes most of the hyperlinks, keeping those links active when they just as easily could have been broken by the Internet's instability. Researchers in India studied the effectiveness of the Wayback Machine's ability to save hyperlinks in online scholarly publications and found that it saved slightly more than half of them.</value><value>[47]</value><value>
</value><value>Journalists use the Wayback Machine to view dead websites, dated news reports, and changes to website contents. Its content has been used to hold politicians accountable and expose battlefield lies.</value><value>[48]</value><value> In 2014 an archived social media page of separatist rebel leader in Ukraine </value><value>Igor Girkin</value><value> showed him boasting about his troops having </value><value>shot down a suspected Ukrainian military airplane before it became known that the plane actually was a civilian Malaysian Airlines jet</value><value> after which he deleted the post and blamed Ukraine's military.</value><value>[48]</value><value>[49]</value><value> In 2017 the </value><value>March for Science</value><value> originated from a discussion on </value><value>reddit</value><value> that indicated someone had visited Archive.org and discovered that all references to </value><value>climate change</value><value> had been deleted from the White House website. In response, a  user commented, "There needs to be a Scientists' March on Washington".</value><value>[50]</value><value>[51]</value><value>[52]</value><value>
</value><value>Furthermore, the site is used heavily for verification, providing access to references and content creation by </value><value>Wikipedia editors</value><value>.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>
</value><value>Limitations</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>This section's </value><value>tone or style may not reflect the </value><value>encyclopedic tone</value><value> used on Wikipedia</value><value>.</value><value> See Wikipedia's </value><value>guide to writing better articles</value><value> for suggestions.</value><value>  </value><value>(October 2018)</value><value> (</value><value>Learn how and when to remove this template message</value><value>)</value><value>
</value><value>Despite its powerful capabilities, the Wayback Machine also has some limitations. In 2014 there was a six-month lag time between when a website is crawled and when it is available for viewing in the Wayback Machine.</value><value>[53]</value><value> Currently the lag time in 3 to 10 hours.</value><value>[54]</value><value> The Wayback Machine is not "historical Google"; users must know the URL of the websites they want to see.</value><value>[55]</value><value> It does have a "Site Search" feature that allows users to find a site based on words describing the site, rather than words found on the web pages themselves.
</value><value>The Wayback Machine does not include every web page ever made due to the limitations of its web crawler. The Wayback Machine cannot completely archive web pages that contain interactive features like Flash platforms and forms written in JavaScript, because those functions require interaction with the host website. Their web crawler has difficulty extracting anything not coded in HTML (or one of its variants) which often results in broken hyperlinks and missing images. Furthermore, the web crawler cannot archive "orphan pages" that contain no links to other pages.</value><value>[56]</value><value>[55]</value><value> Specific rules governing the Wayback Machine's crawler can only follow a predetermined number of hyperlinks based on a preset depth limit, so it cannot archive every hyperlink on every page.</value><value>[16]</value><value>
</value><value>Some owners place a robot.txt file on their website which prevents the Wayback Machine from discovering and archiving it. Furthermore, website owners can also contact the Internet Archive directly and request that their pages be excluded from the archive.</value><value>[56]</value><value>
</value><value>
</value><value>In legal evidence</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Civil litigation</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Netbula LLC v. Chordiant Software Inc.</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In a 2009 case, </value><value>Netbula, LLC v. Chordiant Software Inc.</value><value>, defendant Chordiant filed a motion to compel Netbula to disable the </value><value>robots.txt</value><value> file on its website that was causing the Wayback Machine to retroactively remove access to previous versions of pages it had archived from Netbula's site, pages that Chordiant believed would support its case.</value><value>[57]</value><value>
</value><value>Netbula objected to the motion on the ground that defendants were asking to alter Netbula's website and that they should have subpoenaed Internet Archive for the pages directly.</value><value>[58]</value><value> An employee of Internet Archive filed a sworn statement supporting Chordiant's motion, however, stating that it could not produce the web pages by any other means "without considerable burden, expense and disruption to its operations."</value><value>[57]</value><value>
</value><value>Magistrate Judge Howard Lloyd in the Northern District of California, San Jose Division, rejected Netbula's arguments and ordered them to disable the robots.txt blockage temporarily in order to allow Chordiant to retrieve the archived pages that they sought.</value><value>[57]</value><value>
</value><value>
</value><value>Telewizja Polska</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In an October 2004 case, </value><value>Telewizja Polska USA, Inc.</value><value> v. Echostar Satellite</value><value>, No. 02 C 3293, 65 Fed. R. Evid. Serv. 673 (N.D. Ill. Oct. 15, 2004), a litigant attempted to use the Wayback Machine archives as a source of admissible evidence, perhaps for the first time. Telewizja Polska is the provider of </value><value>TVP Polonia</value><value> and </value><value>EchoStar</value><value> operates the </value><value>Dish Network</value><value>. Prior to the trial proceedings, EchoStar indicated that it intended to offer Wayback Machine snapshots as proof of the past content of Telewizja Polska's website. Telewizja Polska brought a motion </value><value>in limine</value><value> to suppress the snapshots on the grounds of </value><value>hearsay</value><value> and unauthenticated source, but Magistrate Judge Arlander Keys rejected Telewizja Polska's assertion of hearsay and denied TVP's motion </value><value>in limine</value><value> to exclude the evidence at trial.</value><value>[59]</value><value>[60]</value><value> At the trial, however, district Court Judge Ronald Guzman, the trial judge, overruled Magistrate Keys' findings,</value><value>[</value><value>citation needed</value><value>]</value><value> and held that neither the affidavit of the Internet Archive employee nor the underlying pages (i.e., the Telewizja Polska website) were admissible as evidence. Judge Guzman reasoned that the employee's affidavit contained both hearsay and inconclusive supporting statements, and the purported web page, printouts were not self-authenticating.</value><value>[</value><value>citation needed</value><value>]</value><value>
</value><value>
</value><value>Patent law</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Main article: </value><value>Internet as a source of prior art</value><value>
</value><value>Provided some additional requirements are met (e.g., providing an authoritative statement of the archivist), the </value><value>United States patent office</value><value> and the </value><value>European Patent Office</value><value> will accept date stamps from the Internet Archive as evidence of when a given Web page was accessible to the public. These dates are used to determine if a Web page is available as </value><value>prior art</value><value> for instance in examining a patent application.</value><value>[61]</value><value>
</value><value>
</value><value>Limitations of utility</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>There are technical limitations to archiving a website, and as a consequence, it is possible for opposing parties in litigation to misuse the results provided by website archives. This problem can be exacerbated by the practice of submitting screen shots of web pages in complaints, answers, or expert witness reports, when the underlying links are not exposed and therefore, can contain errors. For example, archives such as the Wayback Machine do not fill out forms and therefore, do not include the contents of non-</value><value>RESTful</value><value> e-commerce databases in their archives.</value><value>[62]</value><value>
</value><value>
</value><value>Legal status</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In Europe, the Wayback Machine could be interpreted as violating copyright laws. Only the content creator can decide where their content is published or duplicated, so the Archive would have to delete pages from its system upon request of the creator.</value><value>[63]</value><value> The exclusion policies for the Wayback Machine may be found in the FAQ section of the site.</value><value>[64]</value><value>
</value><value>
</value><value>Archived content legal issues</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>A number of cases have been brought against the Internet Archive specifically for its Wayback Machine archiving efforts. 
</value><value>
</value><value>Scientology</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>See also: </value><value>Scientology and the Internet</value><value>
</value><value>In late 2002, the Internet Archive removed various sites that were critical of </value><value>Scientology</value><value> from the Wayback Machine.</value><value>[65]</value><value> An error message stated that this was in response to a "request by the site owner".</value><value>[66]</value><value> Later, it was clarified that lawyers from the </value><value>Church of Scientology</value><value> had demanded the removal and that the site owners did not want their material removed.</value><value>[67]</value><value>
</value><value>
</value><value>Healthcare Advocates, Inc.</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In 2003, Harding Earley Follmer &amp; Frailey defended a client from a trademark dispute using the Archive's Wayback Machine. The attorneys were able to demonstrate that the claims made by the plaintiff were invalid, based on the content of their website from several years prior. The plaintiff, Healthcare Advocates, then amended their complaint to include the Internet Archive, accusing the organization of copyright infringement as well as violations of the </value><value>DMCA</value><value> and the </value><value>Computer Fraud and Abuse Act</value><value>. Healthcare Advocates claimed that, since they had installed a </value><value>robots.txt</value><value> file on their website, even if after the initial lawsuit was filed, the Archive should have removed all previous copies of the plaintiff website from the Wayback Machine, however, some material continued to be publicly visible on Wayback.</value><value>[68]</value><value> The lawsuit was settled out of court, after Wayback fixed the problem.</value><value>[69]</value><value>
</value><value>
</value><value>Suzanne Shell</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In December 2005, activist </value><value>Suzanne Shell</value><value> filed suit demanding Internet Archive pay her US$100,000 for archiving her website profane-justice.org between 1999 and 2004.</value><value>[70]</value><value>[71]</value><value> Internet Archive filed a </value><value>declaratory judgment</value><value> action in the </value><value>United States District Court for the Northern District of California</value><value> on January 20, 2006, seeking a judicial determination that Internet Archive did not violate Shell's </value><value>copyright</value><value>. Shell responded and brought a </value><value>countersuit</value><value> against Internet Archive for archiving her site, which she alleges is in violation of her </value><value>terms of service</value><value>.</value><value>[72]</value><value> On February 13, 2007, a judge for the </value><value>United States District Court for the District of Colorado</value><value> dismissed all counterclaims except </value><value>breach of contract</value><value>.</value><value>[71]</value><value> The Internet Archive did not move to dismiss </value><value>copyright infringement</value><value> claims Shell asserted arising out of its copying activities, which would also go forward.</value><value>[73]</value><value>
</value><value>On April 25, 2007, Internet Archive and Suzanne Shell jointly announced the settlement of their lawsuit.</value><value>[70]</value><value> The Internet Archive said it "...has no interest in including materials in the Wayback Machine of persons who do not wish to have their Web content archived. We recognize that Ms. Shell has a valid and enforceable copyright in her Web site and we regret that the inclusion of her Web site in the Wayback Machine resulted in this litigation." Shell said, "I respect the historical value of Internet Archive's goal. I never intended to interfere with that goal nor cause it any harm."</value><value>[74]</value><value>
</value><value>
</value><value>Daniel Davydiuk</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In 2013–2016, a </value><value>pornographic actor</value><value> tried to remove archived images of himself from the Wayback Machine's archive, first by sending multiple </value><value>DMCA requests</value><value> to the archive, and then by appealing to the </value><value>Federal Court of Canada</value><value>.</value><value>[75]</value><value>[76]</value><value>[77]</value><value>
</value><value>
</value><value>Censorship and other threats</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Archive.org is currently </value><value>blocked in China</value><value>.</value><value>[78]</value><value>[79]</value><value> After the site enabled the encrypted </value><value>HTTPS</value><value> protocol, the Internet Archive was </value><value>blocked in its entirety in Russia</value><value> in 2015.</value><value>[80]</value><value>[81]</value><value>[48]</value><value>[</value><value>needs update?</value><value>]</value><value>
</value><value>Alison Macrina, director of the Library Freedom Project, notes that "while librarians deeply value individual privacy, we also strongly oppose censorship".</value><value>[48]</value><value>
</value><value>There are known rare cases where online access to content which "for nothing" has put people in danger was disabled by the website.</value><value>[48]</value><value>
</value><value>Other threats include natural disasters,</value><value>[82]</value><value> destruction (remote or physical),</value><value>[</value><value>citation needed</value><value>]</value><value> manipulation of the archive's contents (see also: </value><value>cyberattack</value><value>, </value><value>backup</value><value>), problematic copyright laws</value><value>[83]</value><value> and surveillance of the site's users.</value><value>[84]</value><value>
</value><value>Kevin Vaughan suspects that in the long-term of multiple generations "next to nothing" will survive in a useful way besides "if we have continuity in our technological civilization" by which "a lot of the bare data will remain findable and searchable".</value><value>[85]</value><value>
</value><value>Some</value><value>[</value><value>who?</value><value>]</value><value> find the Internet Archive, which describes itself to be built for the long-term,</value><value>[86]</value><value> to be working furiously to capture data before it disappears without any long-term infrastructure to speak of.</value><value>[87]</value><value>
</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Collective memory</value><value>
</value><value>National memory</value><value>
</value><value>Deep web</value><value>
</value><value>Heritrix</value><value>
</value><value>Library Genesis</value><value>
</value><value>The Memory Hole</value><value>
</value><value>Web archiving</value><value>
</value><value>WebCite</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Archive.org Site Info"</value><value>. </value><value>Alexa Internet</value><value>. Archived from </value><value>the original</value><value> on 18 June 2016</value><value>. Retrieved </value><value>December 12,</value><value> 2018</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>"WayBackMachine.org WHOIS, DNS, &amp; Domain Info – DomainTools"</value><value>. </value><value>WHOIS</value><value>. Retrieved </value><value>2016-03-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"InternetArchive.org WHOIS, DNS, &amp; Domain Info – DomainTools"</value><value>. </value><value>WHOIS</value><value>. Retrieved </value><value>2016-03-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Notess, Greg R. (March–April 2002). "The Wayback Machine: The Web's Archive". </value><value>Online</value><value>. </value><value>26</value><value>: 59–61  – via EBSCOhost.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Wayback Machine", </value><value>Frequently Asked Questions</value><value>, </value><value>archived</value><value> from the original on 2018-09-18</value><value>, retrieved </value><value>2018-09-18</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"20,000 Hard Drives on a Mission | Internet Archive Blogs"</value><value>. </value><value>blog.archive.org</value><value>. </value><value>Archived</value><value> from the original on 2018-10-20</value><value>. Retrieved </value><value>2018-10-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Green, Heather (February 28, 2002). </value><value>"A Library as Big as the World"</value><value>. BusinessWeek. Archived from </value><value>the original</value><value> on 20 December 2011.</value><value>
</value><value>
</value><value>^</value><value> </value><value>TONG, JUDY (September 8, 2002). </value><value>"RESPONSIBLE PARTY – BREWSTER KAHLE; A Library Of the Web, On the Web"</value><value>. </value><value>New York Times</value><value>. </value><value>Archived</value><value> from the original on 20 February 2011</value><value>. Retrieved </value><value>15 August</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Internet Archive: Wayback Machine"</value><value>. </value><value>archive.org</value><value>. </value><value>Archived</value><value> from the original on 2014-01-03</value><value>. Retrieved </value><value>2018-10-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Cook, John (November 1, 2001). </value><value>"Web site takes you way back in Internet history"</value><value>. </value><value>Seattle Post-Intelligencer</value><value>. </value><value>Archived</value><value> from the original on 12 August 2014</value><value>. Retrieved </value><value>15 August</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Wayback Goes Way Back on Web"</value><value>. </value><value>Wired</value><value>. October 28, 2001. </value><value>Archived</value><value> from the original on October 16, 2017</value><value>. Retrieved </value><value>October 16,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Arora, Sanjay K.; Li, Yin; Youtie, Jan; Shapira, Philip (2015-05-05). "Using the wayback machine to mine websites in the social sciences: A methodological resource". </value><value>Journal of the Association for Information Science and Technology</value><value>. </value><value>67</value><value> (8): 1904–1915. </value><value>doi</value><value>:</value><value>10.1002/asi.23503</value><value>. </value><value>ISSN</value><value> </value><value>2330-1635</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>f</value><value> </value><value>g</value><value> </value><value>h</value><value> </value><value>Kalev Leetaru (January 28, 2016). </value><value>"The Internet Archive Turns 20: A Behind the Scenes Look at Archiving the Web"</value><value>. </value><value>Forbes</value><value>. </value><value>Archived</value><value> from the original on October 16, 2017</value><value>. Retrieved </value><value>October 16,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kahle, Brewster. </value><value>"Archiving the Internet"</value><value>. Scientific American – March 1997 Issue. </value><value>Archived</value><value> from the original on 3 April 2012</value><value>. Retrieved </value><value>19 August</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Jeff Kaplan (October 27, 2014). </value><value>"Archive-It: Crawling the Web Together"</value><value>. </value><value>Internet Archive Blogs</value><value>. </value><value>Archived</value><value> from the original on October 12, 2017</value><value>. Retrieved </value><value>October 16,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Worldwide Web Crawls"</value><value>. Internet Archive. </value><value>Archived</value><value> from the original on October 19, 2017</value><value>. Retrieved </value><value>October 16,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Wide Crawl Number 13"</value><value>. Internet Archive. </value><value>Archived</value><value> from the original on October 19, 2017</value><value>. Retrieved </value><value>October 16,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive: Petabox"</value><value>. </value><value>archive.org</value><value>. Retrieved </value><value>2018-10-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Kanellos, Michael (July 29, 2005). </value><value>"Big storage on the cheap"</value><value>. CNET News.com. Archived from </value><value>the original</value><value> on 2007-04-03</value><value>. Retrieved </value><value>2007-07-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive and Sun Microsystems Create Living History of the Internet"</value><value>. </value><value>Sun Microsystems</value><value>. March 25, 2009. </value><value>Archived</value><value> from the original on March 26, 2009</value><value>. Retrieved </value><value>2009-03-27</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Mearian, Lucas (March 19, 2009). </value><value>"Internet Archive to unveil massive Wayback Machine data center"</value><value>. Computerworld.com. Archived from </value><value>the original</value><value> on 2009-03-23</value><value>. Retrieved </value><value>2009-03-22</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Updated Wayback Machine in Beta Testing"</value><value>. Archive.org. </value><value>Archived</value><value> from the original on 23 August 2011</value><value>. Retrieved </value><value>19 August</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Beta Wayback Machine, in forum"</value><value>. Archive.org. </value><value>Archived</value><value> from the original on 2014-04-17</value><value>. Retrieved </value><value>2014-04-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Forums: 6th pair of racks go into service: over 2PB of data space used"</value><value>. </value><value>archive.org</value><value>. </value><value>Archived</value><value> from the original on 2016-10-24</value><value>. Retrieved </value><value>2018-10-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Wayback Machine: Now with 240,000,000,000 URLs | Internet Archive Blogs"</value><value>. Blog.archive.org. 2013-01-09. </value><value>Archived</value><value> from the original on 2014-04-14</value><value>. Retrieved </value><value>2014-04-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Rossi, Alexis (2013-10-25). </value><value>"Fixing Broken Links on the Internet"</value><value>. </value><value>archive.org</value><value>. San Francisco, CA, US: Collections Team, the Internet Archive. </value><value>Archived</value><value> from the original on 2014-11-07</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>We have added the ability to archive a page instantly and get back a permanent URL for that page in the Wayback Machine. This service allows anyone – wikipedia editors, scholars, legal professionals, students, or home cooks like me – to create a stable URL to cite, share or bookmark any information they want to still have access to in the future.</value><value>
</value><value>
</value><value>^</value><value> </value><value>The VirusTotal Team (2015-03-25). </value><value>"207.241.226.190 IP address information"</value><value>. </value><value>virustotal.com</value><value>. Dublin 2, Ireland: </value><value>VirusTotal</value><value>. </value><value>Archived</value><value> from the original on 2014-07-14</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>2015-03-25: Latest URLs hosted in this IP address detected by at least one URL scanner or malicious URL dataset. ... 2/62 2015-03-25 16:14:12 [complete URL redacted]/Renegotiating_TLS.pdf ... 1/62 2015-03-25 04:46:34 [complete URL redacted]/CBLightSetup.exe</value><value>
</value><value>
</value><value>^</value><value> </value><value>Advisory provided by Google (2015-03-25). </value><value>"Safe Browsing Diagnostic page for archive.org"</value><value>. </value><value>google.com/safebrowsing</value><value>. Mountain View, CA, US: </value><value>Google</value><value>. </value><value>Archived</value><value> from the original on 2015-04-06</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>2015-03-25: Part of this site was listed for suspicious activity 138 time(s) over the past 90 days. ... What happened when Google visited this site? ... Of the 42410 pages we tested on the site over the past 90 days, 450 page(s) resulted in malicious software being downloaded and installed without user consent. The last time Google visited this site was on 2015-03-25, and the last time suspicious content was found on this site was on 2015-03-25. ... Malicious software includes 169 trojan(s), 126 virus, 43 backdoor(s).</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Frequently Asked Questions"</value><value>. </value><value>Archived</value><value> from the original on 2009-10-21</value><value>. Retrieved </value><value>2015-01-17</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Frequently Asked Questions"</value><value>. </value><value>web.archive.org</value><value>. 2014-12-18</value><value>. Retrieved </value><value>2018-12-13</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Can the manipulation of big data change the way the world thinks?"</value><value>. </value><value>The National</value><value>. </value><value>Archived</value><value> from the original on 12 January 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Crockett, Zachary (2018-09-28). </value><value>"Inside Wayback Machine, the internet's time capsule"</value><value>. </value><value>The Hustle</value><value>. </value><value>Archived</value><value> from the original on 2018-10-02</value><value>. Retrieved </value><value>2018-10-26</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Heffernan, Virginia (2018-09-18). </value><value>"Things Break and Decay on the Internet—That's a Good Thing"</value><value>. </value><value>WIRED</value><value>. </value><value>Archived</value><value> from the original on 2018-09-25</value><value>. Retrieved </value><value>2018-10-26</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Archive.org Site Info"</value><value>. </value><value>Alexa Internet</value><value>. Archived from </value><value>the original</value><value> on 2013-10-28</value><value>. Retrieved </value><value>2013-10-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Archive.org Site Overview"</value><value>. </value><value>Alexa Internet</value><value>. Archived from </value><value>the original</value><value> on 2015-04-09</value><value>. Retrieved </value><value>2015-04-09</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>michelle (2014-05-09). </value><value>"Wayback Machine Hits 400,000,000,000!"</value><value>. Internet Archive. </value><value>Archived</value><value> from the original on 2014-08-26</value><value>. Retrieved </value><value>2015-03-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Wayback Machine"</value><value>. Internet Archive. Archived from </value><value>the original</value><value> on 2015-02-13</value><value>. Retrieved </value><value>2015-03-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Some sites are not available because of Robots.txt or other exclusions</value><value> </value><value>Archived</value><value> 2011-04-15 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>How can I remove my site's pages from the Wayback Machine?</value><value> </value><value>Archived</value><value> 2014-04-17 at the </value><value>Wayback Machine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Cox, Joseph (2018-05-22). </value><value>"The Wayback Machine Is Deleting Evidence of Malware Sold to Stalkers"</value><value>. </value><value>Archived</value><value> from the original on 2018-05-23</value><value>. Retrieved </value><value>2018-05-23</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Recommendations for Managing Removal Requests And Preserving Archival Integrity"</value><value>. </value><value>University of California</value><value>. December 14, 2002. </value><value>Archived</value><value> from the original on September 18, 2017</value><value>. Retrieved </value><value>September 14,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Retroactive robots.txt removal of past crawls AKA Oakland Archive Policy"</value><value>. Internet Archive. July 7, 2014. </value><value>Archived</value><value> from the original on October 10, 2017</value><value>. Retrieved </value><value>September 14,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Mark Graham (April 17, 2017). </value><value>"Robots.txt meant for search engines don't work well for web archives"</value><value>. </value><value>Internet Archive Blogs</value><value>. </value><value>Archived</value><value> from the original on April 17, 2017</value><value>. Retrieved </value><value>April 16,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Archivierung des Internets: Internet Archive ignoriert künftig robots.txt"</value><value> (in German). heise online. </value><value>Archived</value><value> from the original on 27 April 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Suchmaschinen: Internet Archive will künftig Robots.txt-Einträge ignorieren – Golem.de"</value><value> (in German). </value><value>Archived</value><value> from the original on 19 June 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive will ignore robots.txt files to keep historical record accurate"</value><value>. Digital Trends. 24 April 2017. </value><value>Archived</value><value> from the original on 16 May 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Sampath Kumar, B.T.; Prithviraj, K.R. (2014-10-21). "Bringing life to dead: Role of Wayback Machine in retrieving vanished URLs". </value><value>Journal of Information Science</value><value>. </value><value>41</value><value> (1): 71–81. </value><value>doi</value><value>:</value><value>10.1177/0165551514552752</value><value>. </value><value>ISSN</value><value> </value><value>0165-5515</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>d</value><value> </value><value>e</value><value> </value><value>"Wayback Machine Won't Censor Archive for Taste, Director Says After Olympics Article Scrubbed"</value><value>. </value><value>Archived</value><value> from the original on 6 January 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"What the Web Said Yesterday"</value><value>. The New Yorker. </value><value>Archived</value><value> from the original on 25 January 2015</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The March for Science began with this person's 'throwaway line' on Reddit"</value><value>. Washington Post. </value><value>Archived</value><value> from the original on 23 April 2017</value><value>. Retrieved </value><value>23 April</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Are scientists going to march on Washington?"</value><value>. </value><value>The Washington Post</value><value>. </value><value>Archived</value><value> from the original on January 31, 2017</value><value>. Retrieved </value><value>January 31,</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Foley, Katherine Ellen. </value><value>"The global March for Science started with a single Reddit thread"</value><value>. Quartz. </value><value>Archived</value><value> from the original on 24 April 2017</value><value>. Retrieved </value><value>23 April</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Frequently Asked Questions"</value><value>. </value><value>Internet Archive</value><value>. April 2, 2014</value><value>. Retrieved </value><value>November 23,</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive Frequently Asked Questions"</value><value>. </value><value>archive.org</value><value>. Retrieved </value><value>2018-11-23</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Bates, Mary Ellen (2002). "The Wayback Machine". </value><value>Online</value><value>. </value><value>26</value><value>: 80  – via EBSCOhost.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Internet Archive Frequently Asked Questions"</value><value>. </value><value>archive.org</value><value>. </value><value>Archived</value><value> from the original on 2013-04-20</value><value>. Retrieved </value><value>2018-10-18</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>LLoyd, Howard (October 2009). </value><value>"Order to Disable Robots.txt"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>2009-10-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Cortes, Antonio (October 2009). </value><value>"Motion Opposing Removal of Robots.txt"</value><value>. </value><value>Archived</value><value> from the original on 2010-10-27</value><value>. Retrieved </value><value>2009-10-15</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Gelman, Lauren (November 17, 2004). </value><value>"Internet Archive's Web Page Snapshots Held Admissible as Evidence"</value><value>. </value><value>Packets</value><value>. </value><value>2</value><value> (3). </value><value>Archived</value><value> from the original on 2011-04-30</value><value>. Retrieved </value><value>2007-01-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Howell, Beryl A. (February 2006). </value><value>"Proving Web History: How to use the Internet Archive"</value><value> </value><value>(PDF)</value><value>. </value><value>Journal of Internet Law</value><value>: 3–9. Archived from </value><value>the original</value><value> </value><value>(PDF)</value><value> on 2010-07-05</value><value>. Retrieved </value><value>2008-08-06</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Wynn W. Coggins (Fall 2002). </value><value>"Prior Art in the Field of Business Method Patents – When is an Electronic Document a Printed Publication for Prior Art Purposes?"</value><value>. </value><value>USPTO</value><value>. </value><value>Archived</value><value> from the original on 2012-09-21.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Debunking the Wayback Machine"</value><value>. Archived from </value><value>the original</value><value> on 29 June 2010.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Bahr, Martin (2002). </value><value>"The Wayback Machine und Google Cache - eine Verletzung deutschen Urheberrechts?"</value><value>. </value><value>JurPC</value><value> (in German). </value><value>doi</value><value>:</value><value>10.7328/jurpcb/20021719</value><value>. </value><value>Archived</value><value> from the original on 2009-08-23.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive FAQ"</value><value>. Archive.org. </value><value>Archived</value><value> from the original on 2014-04-17</value><value>. Retrieved </value><value>2014-04-16</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Bowman, Lisa M (September 24, 2002). </value><value>"Net archive silences Scientology critic"</value><value>. CNET News.com. Archived from </value><value>the original</value><value> on 2012-05-15</value><value>. Retrieved </value><value>2007-01-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Jeff (September 23, 2002). </value><value>"exclusions from the Wayback Machine"</value><value> </value><value>(Blog)</value><value>. </value><value>Wayback Machine Forum</value><value>. Internet Archive. </value><value>Archived</value><value> from the original on February 11, 2007</value><value>. Retrieved </value><value>2007-01-04</value><value>.</value><value> </value><value>Author and Date indicate initiation of forum thread</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Miller, Ernest. </value><value>"Sherman, Set the Wayback Machine for Scientology"</value><value>. </value><value>LawMeme</value><value>. Yale Law School. Archived from </value><value>the original</value><value> </value><value>(Blog)</value><value> on 16 November 2012</value><value>. Retrieved </value><value>2007-01-04</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Dye, Jessica (2005). "Website Sued for Controversial Trip into Internet Past". </value><value>EContent</value><value>. 28. </value><value>(11)</value><value>: 8–9.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Bangeman, Eric (August 31, 2006). </value><value>"Internet Archive Settles Suit Over Wayback Machine"</value><value>. </value><value>Ars technica</value><value>. </value><value>Archived</value><value> from the original on November 5, 2007</value><value>. Retrieved </value><value>2007-11-29</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Internet Archive v. Shell</value><value>, </value><value>505 F.Supp.2d 755 at justia.com</value><value>, 1:2006cv01726 (</value><value>Colorado District Court</value><value> 2006-08-31) ("'April 25, 2007 Settlement agreement announced.' Filing 65, 2007-04-30: '...therefore ORDERED that this matter shall be DISMISSED WITH PREJUDICE...'"). </value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Babcock, Lewis T., Chief Judge (2007-02-13). </value><value>"</value><value>Internet Archive v. Shell</value><value> Civil Action No. 06cv01726LTBCBS"</value><value> </value><value>(PDF)</value><value>. </value><value>Archived</value><value> </value><value>(PDF)</value><value> from the original on 2014-01-25</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>1) Internet Archive's motion to dismiss Shell's counterclaim for conversion and civil theft (Second Cause of Action) is GRANTED, 2) Internet Archive's motion to dismiss Shell's counterclaim for breach of contract (Third Cause of Action) is DENIED; 3) Internet Archive's motion to dismiss Shell's counterclaim for Racketeering under RICO and COCCA (Fourth Cause of Action) is GRANTED.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Claburn, Thomas (2007-03-16). </value><value>"Colorado Woman Sues To Hold Web Crawlers To Contracts"</value><value>. New York, NY, US: </value><value>InformationWeek</value><value>, UBM Tech, UBM LLC. </value><value>Archived</value><value> from the original on 2014-09-04</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>Computers can enter into contracts on behalf of people. The Uniform Electronic Transactions Act (UETA) says that a 'contract may be formed by the interaction of electronic agents of the parties, even if no individual was aware of or reviewed the electronic agents' actions or the resulting terms and agreements.'</value><value>
</value><value>
</value><value>^</value><value> </value><value>Samson, Martin H., Phillips Nizer LLP (2007). </value><value>"Internet Archive v. Suzanne Shell"</value><value>. </value><value>internetlibrary.com</value><value>. Internet Library of Law and Court Decisions. </value><value>Archived</value><value> from the original on 2014-08-03</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>More importantly, held the court, Internet Archive's mere copying of Shell's site, and display thereof in its database, did not constitute the requisite exercise of dominion and control over defendant's property. Importantly, noted the court, the defendant at all times owned and operated her own site. Said the Court: 'Shell has failed to allege facts showing that Internet Archive exercised dominion or control over her website, since Shell's complaint states explicitly that she continued to own and operate the website while it was archived on the Wayback machine. Shell identifies no authority supporting the notion that copying documents is by itself enough of a deprivation of use to support conversion. Conversely, numerous circuits have determined that it is not.'</value><value>
</value><value>
</value><value>^</value><value> </value><value>brewster (2007-04-25). </value><value>"Internet Archive and Suzanne Shell Settle Lawsuit"</value><value>. </value><value>archive.org</value><value>. Denver, CO, USA: Internet Archive. </value><value>Archived</value><value> from the original on 2010-12-05</value><value>. Retrieved </value><value>2015-03-25</value><value>. </value><value>Both parties sincerely regret any turmoil that the lawsuit may have caused for the other. Neither Internet Archive nor Ms. Shell condones any conduct which may have caused harm to either party arising out of the public attention to this lawsuit. The parties have not engaged in such conduct and request that the public response to the amicable resolution of this litigation be consistent with their wishes that no further harm or turmoil be caused to either party.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Copyright Implications Of A "Right To Be Forgotten"? Or How To Take-Down The Internet Archive. – Intellectual Property – Canada"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Davydiuk v. Internet Archive Canada, 2014 FC 944"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Davydiuk v. Internet Archive Canada and Internet Archive, 2016 FC 1313 (CanLII)"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Conger, Kate. </value><value>"Backing up the history of the internet in Canada to save it from Trump"</value><value>. TechCrunch. </value><value>Archived</value><value> from the original on 27 December 2016</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Where to find what's disappeared online, and a whole lot more: the Internet Archive"</value><value>. Public Radio International. </value><value>Archived</value><value> from the original on 28 March 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Chirgwin, Richard. </value><value>"There's no Wayback in Russia: Putin blocks Archive.org"</value><value>. </value><value>Archived</value><value> from the original on 7 October 2016</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Russia won't go Wayback, blocks the Internet Archive"</value><value>. Digital Trends. 26 June 2015. </value><value>Archived</value><value> from the original on 17 April 2016</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Help Us Keep the Archive Free, Accessible, and Reader Private | Internet Archive Blogs"</value><value>. </value><value>Archived</value><value> from the original on 21 May 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Internet Archive: Proposed Changes To DMCA Would Make Us "Censor The Web</value><value>"</value><value>"</value><value>. Consumerist. 7 June 2016. </value><value>Archived</value><value> from the original on 11 November 2016</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Herb, Ulrich. </value><value>"Die Trump-Angst grassiert"</value><value> (in German). heise online. </value><value>Archived</value><value> from the original on 7 December 2016</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>LaFrance, Adrienne. </value><value>"The Internet's Dark Ages"</value><value>. The Atlantic. </value><value>Archived</value><value> from the original on 7 May 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Entire Internet Will Be Archived In Canada to Protect It From Trump"</value><value>. Motherboard. </value><value>Archived</value><value> from the original on 16 May 2017</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>LaFrance, Adrienne. </value><value>"The Human Fear of Total Knowledge"</value><value>. The Atlantic. </value><value>Archived</value><value> from the original on 2 December 2016</value><value>. Retrieved </value><value>14 May</value><value> 2017</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value> </value><value>
</value><value>"Terms of use, privacy and copyright policy"</value><value>. </value><value>archive.org</value><value>. Dec 31, 2014.</value><value>
</value><value>"Basic users'how-to guide for searching or saving </value><value>web pages</value><value>"</value><value>. </value><value>WikiHow</value><value>.com</value><value> (in English, German, Spanish, French, and Italian).</value><value>
</value><value>Internet history is fragile. This archive is making sure it doesn’t disappear</value><value>. San Francisco: PBS Newshour</value><value>. Retrieved </value><value>2018-09-19</value><value>.</value><value>
</value><value>Mirrors</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"Official mirror of the Wayback Machine"</value><value>. </value><value>Bibliotheca Alexandrina</value><value>.</value><value>
</value><value>Utilities</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>"OpenWayback.  FOSS java and perl, with proxy replay mode"</value><value>. </value><value>sourceforge</value><value>.net</value><value>.</value><value> (by </value><value>IIPC</value><value>)</value><value>
</value><value>"Tool to retrieve a backup from the Wayback Machine"</value><value>. </value><value>github</value><value>.com</value><value>.</value><value>
</value><value>"Wayback Machine Downloader Online"</value><value> (in English and Polish).</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Internet Archive</value><value>Universal access to all knowledge</value><value>Projects</value><value>
</value><value>Wayback Machine</value><value>
</value><value>PetaBox</value><value>
</value><value>Open Library</value><value>
</value><value>NASA Images</value><value>
</value><value>Open Content Alliance</value><value>
</value><value>Archive-It</value><value>
</value><value>SFlan</value><value>
</value><value>Partners &amp; </value><value>Collaborators</value><value>
</value><value>Bibliotheca Alexandrina</value><value>
</value><value>Library of Congress</value><value>
</value><value>American Libraries</value><value>
</value><value>Canadian Libraries</value><value>
</value><value>Biodiversity Heritage Library</value><value>
</value><value>Sloan Foundation</value><value>
</value><value>Collections</value><value>
</value><value>Lists of Internet Archive's collections</value><value>
</value><value>Image</value><value>
</value><value>NASA Images</value><value>
</value><value>USGS Maps</value><value>
</value><value>Texts</value><value>
</value><value>American Libraries</value><value>
</value><value>Canadian Libraries</value><value>
</value><value>Children's Library</value><value>
</value><value>RECAP US Federal Court Documents</value><value>
</value><value>Microfilm</value><value>
</value><value>US Government Documents</value><value>
</value><value>Philosophical Transactions of the Royal Society of London</value><value>
</value><value>Collected texts of Simon Schwartzman</value><value>
</value><value>Audio</value><value>
</value><value>Live Music Archive</value><value>
</value><value>LibriVox</value><value>
</value><value>Video</value><value>
</value><value>NASA Images</value><value>
</value><value>FedFlix</value><value>
</value><value>Democracy Now!</value><value>
</value><value>Marion Stokes</value><value>
</value><value>
</value><value>The Internet Archive Software Collection</value><value>
</value><value>Open Educational Resources</value><value>
</value><value>People</value><value>
</value><value>Brewster Kahle</value><value>
</value><value>David Rumsey</value><value>
</value><value>Rick Prelinger</value><value>
</value><value>Jason Scott</value><value>
</value><value>Software</value><value>
</value><value>Heritrix</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Digital preservation</value><value>Concepts</value><value>
</value><value>Artifactual value</value><value>
</value><value>Curation</value><value>
</value><value>Dark age</value><value>
</value><value>Obsolescence</value><value>
</value><value>Open Archival Information System</value><value>
</value><value>Techniques</value><value>
</value><value>Forensics</value><value>
</value><value>Emulation</value><value>
</value><value>By type</value><value>
</value><value>Artworks</value><value>
</value><value>Email</value><value>
</value><value>Websites</value><value>
</value><value>Organizations</value><value>
</value><value>Computer museums</value><value>
</value><value>Digital Curation Centre</value><value>
</value><value>National Digital Information Infrastructure and Preservation Program</value><value> (USA)</value><value>
</value><value>Lists</value><value>
</value><value>Preservation initiatives</value><value>
</value><value>Timeline</value><value>
</value><value>Timeline of audio formats</value><value>
</value><value>Web archiving initiatives</value><value>
</value><value>Years in home video</value><value>
</value><value> </value><value>Category</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 14 December 2018, at 09:49</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Jamie_Zawinski</url><title>Jamie Zawinski</title><text><value>Jamie Zawinski</value><value>Born</value><value>James Werner Zawinski</value><value> (</value><value>1968-11-03</value><value>) </value><value>November 3, 1968</value><value> (age 50)</value><value>Pittsburgh</value><value>, </value><value>Pennsylvania</value><value>Occupation</value><value>DNA Lounge</value><value> proprietor</value><value>Website</value><value>www</value><value>.jwz</value><value>.org</value><value>
</value><value>James Werner Zawinski</value><value> (born November 3, 1968), commonly known as </value><value>jwz</value><value>, is an American </value><value>computer programmer</value><value> with  contributions to the </value><value>free software</value><value> projects </value><value>Mozilla</value><value> and </value><value>XEmacs</value><value>, and early versions of the </value><value>Netscape Navigator</value><value> web browser. He maintains the </value><value>XScreenSaver</value><value> project which provides </value><value>screenblanking</value><value> for </value><value>Mac OS X</value><value> and for </value><value>Unix</value><value> and </value><value>Unix-like</value><value> computer </value><value>operating systems</value><value> using the </value><value>X Window System</value><value>.</value><value>[1]</value><value>
</value><value>Zawinski is currently the </value><value>proprietor</value><value> of the </value><value>DNA Lounge</value><value>, a </value><value>nightclub</value><value> in </value><value>San Francisco</value><value>.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>Biography</value><value>
</value><value>2</value><value> </value><value>Principles</value><value>
</value><value>3</value><value> </value><value>References</value><value>
</value><value>4</value><value> </value><value>External links</value><value>
</value><value>
</value><value>

</value><value>Biography</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Zawinski's early career included stints with </value><value>Scott Fahlman</value><value>'s Lisp research group at </value><value>Carnegie Mellon University</value><value>, </value><value>Expert Technologies, Inc.</value><value> and </value><value>Robert Wilensky</value><value> and </value><value>Peter Norvig</value><value>'s group at Berkeley. In the early 1990s, he was hired by </value><value>Richard P. Gabriel</value><value>'s </value><value>Lucid Inc.</value><value> where he was eventually put to work on Lucid's Energize </value><value>C++</value><value> </value><value>IDE</value><value>. Lucid decided to use </value><value>GNU Emacs</value><value> as the text editor for their IDE due to its free license, popularity, and extensibility.  Zawinski and the other programmers made fundamental changes to GNU Emacs to add new functionality.  Tensions over how to merge these patches into the main tree eventually led to the </value><value>fork</value><value> of the project into GNU Emacs and </value><value>XEmacs</value><value>.</value><value>[2]</value><value>
</value><value>Zawinski, with </value><value>Marc Andreessen</value><value>'s help, worked on the early releases of </value><value>Netscape Navigator</value><value>, particularly the 1.0 release of the </value><value>Unix</value><value> version.</value><value>[3]</value><value>[4]</value><value>
He became quite well known in the early days of the </value><value>World Wide Web</value><value> through an </value><value>easter egg</value><value> in the Netscape browser: typing "about:jwz" into the address box would take the user to his home page (a similar trick worked for other Netscape staffers). In addition, Zawinski says he came up with the name "</value><value>Mozilla</value><value>" in a staff meeting.</value><value>[5]</value><value>[6]</value><value>
</value><value>In 2000, Zawinski starred in the 60-minute-long PBS documentary "</value><value>Code Rush</value><value>". The footage was taken during 1998 while Zawinski was still working for Netscape in which he is portrayed as a pivotal person in the company. In addition, he underlined his preference for the night scene which led him to buy a nightclub.</value><value>[7]</value><value>
</value><value>Zawinski was a major proponent of </value><value>opening</value><value> the </value><value>source code</value><value> of the Mozilla browser and a key person in the creation of the Mozilla project, but became disillusioned with the project when others decided to rewrite the code instead of incrementally improving it.</value><value>[8]</value><value>[9]</value><value> When Netscape was acquired by </value><value>AOL</value><value> he wrote a bulletin explaining the nature of the </value><value>Free Software</value><value> Mozilla code.</value><value>[10]</value><value> He resigned from </value><value>Netscape Communications Corporation</value><value> on April 1, 1999.</value><value>[11]</value><value>
</value><value>[12]</value><value> His current occupation is managing his </value><value>DNA Lounge</value><value> </value><value>nightclub</value><value> in </value><value>San Francisco</value><value>.
</value><value>
</value><value>Principles</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>See also: </value><value>Feature creep</value><value>
</value><value>Zawinski's law of software envelopment</value><value> (also known as </value><value>Zawinski's law</value><value>) comments on the phenomenon of </value><value>software bloating</value><value> with popular features:</value><value>[13]</value><value>[14]</value><value>
</value><value>
</value><value>.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}</value><value>Every program attempts to expand until it can read </value><value>mail</value><value>. Those programs which cannot so expand are replaced by ones which can.
</value><value>
</value><value>Zawinski himself called it the "Law of Software Envelopment".</value><value>[14]</value><value> </value><value>Eric S. Raymond</value><value> commented that while this law goes against the minimalist philosophy of </value><value>Unix</value><value> (a set of "small, sharp tools"), it actually addresses the real need of end users to keep together tools for interrelated tasks, even though for a coder implementation of these tools clearly consists of independent jobs.</value><value>[13]</value><value>
</value><value>Zawinski first attained prominence as a </value><value>Lisp</value><value> programmer, but most of his projects were written in </value><value>Perl</value><value>[15]</value><value> and C.</value><value>[16]</value><value> He has </value><value>criticized</value><value> several language and library deficiencies he encountered while programming in </value><value>Java</value><value>, specifically the overhead of certain classes but also a lack of features such as </value><value>C</value><value>-like </value><value>assertions</value><value> and </value><value>typedefs</value><value>. Despite the positive aspects, ultimately Zawinski returned to programming in C “since it's still the only way to ship portable programs”.</value><value>[17]</value><value>
</value><value>In his post-Netscape life, he continued to proselytize </value><value>against C++</value><value>. In Peter Seibel's book </value><value>Coders at Work: Reflections on the Craft of Programming</value><value>, Zawinski calls C++ an "abomination".</value><value>[18]</value><value>
</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^</value><value> </value><value>"XScreenSaver: Download"</value><value>. Jwz.org</value><value>. Retrieved </value><value>2014-02-03</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawinski, Jamie (2000-02-11). </value><value>"The Lemacs/FSFmacs Schism"</value><value>. </value><value>Archived</value><value> from the original on 2009-12-12</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Netscape Navigator's "about:authors" page</value><value>
</value><value>
</value><value>^</value><value> </value><value>Steinert-Threlkeld, Tom (November 1995). </value><value>"Can You Work in Netscape Time?"</value><value>. </value><value>Fast Company</value><value> magazine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawinski, Jamie (1996). </value><value>"the netscape dorm"</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Dave Titus with assistance from Andrew Wong (December 2002). </value><value>"How was Mozilla born: The story of the first mascot on the Internet"</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Leonard, Andrew (2000-02-10). </value><value>"Free the night life!"</value><value>. </value><value>Salon</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Suárez-Potts, Louis (2001-05-01). </value><value>"Interview: Frank Hecker"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Boutin, Paul (July 1998). </value><value>"Mozilla.organizer"</value><value>. </value><value>Wired</value><value> magazine</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawinski, Jamie (1998-11-23). </value><value>"fear and loathing on the merger trail"</value><value>. </value><value>Mozilla</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawinski, Jamie (1999-03-31). </value><value>"resignation and postmortem"</value><value>. Retrieved </value><value>2013-03-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Chalmers, Rachel (1999-04-06). </value><value>"Mozilla Founder Resigns on Open Source Project's Birthday"</value><value>. Computergram International</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Eric S. Raymond </value><value>The Art of UNIX Programming</value><value>, </value><value>p.313</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Raymond, Eric S. (2003-12-29). </value><value>"The Jargon File"</value><value>. </value><value>Jargon File Text Archive</value><value>. </value><value>Archived</value><value> from the original on 2006-10-11</value><value>. Retrieved </value><value>2018-08-05</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawinski, Jamie (2013). </value><value>"jwzhacks"</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Seibel, Peter (2009-10-16). </value><value>"C++ in Coders at Work"</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Zawinski, Jamie. </value><value>"java sucks"</value><value>. </value><value>jwz.org</value><value>. </value><value>Archived</value><value> from the original on 2000-06-16</value><value>. Retrieved </value><value>2013-04-29</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Seibel, Peter. </value><value>"Coders at Work"</value><value>. Apress</value><value>. Retrieved </value><value>13 April</value><value> 2014</value><value>.</value><value>
</value><value>
</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikiquote has quotations related to: </value><value>Jamie Zawinski</value><value>
</value><value>Personal website</value><value>
</value><value>MCOM personal employee webpage</value><value>
</value><value>The Duct Tape Programmer</value><value> by </value><value>Joel Spolsky</value><value>, and  </value><value>Zawinski's response</value><value>
</value><value>alt.fan.jwz</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Netscape</value><value>Browser versions</value><value>
</value><value>Mosaic Netscape</value><value>
</value><value>Netscape Navigator</value><value>
</value><value>1</value><value>
</value><value>2</value><value>
</value><value>3</value><value>
</value><value>4</value><value>
</value><value>Netscape Communicator</value><value>
</value><value>4</value><value>
</value><value>5</value><value>
</value><value>Netscape</value><value>
</value><value>6</value><value>
</value><value>7</value><value>
</value><value>Netscape Browser 8</value><value>
</value><value>Netscape Navigator 9</value><value>
</value><value>Netscape Plugin Application Programming Interface (NPAPI)</value><value>
</value><value>E-mail clients</value><value>
</value><value>Netscape Mail &amp; Newsgroups</value><value>
</value><value>Netscape Messenger 9</value><value>
</value><value>Other components</value><value>
</value><value>Netscape Composer</value><value>
</value><value>Server software</value><value>
</value><value>Netscape Enterprise Server</value><value>
</value><value>Netscape Application Server</value><value>
</value><value>Netscape Proxy Server</value><value>
</value><value>Netscape Directory Server</value><value>
</value><value>Netscape Server Application Programming Interface (NSAPI)</value><value>
</value><value>Web services</value><value>
</value><value>Netscape.com</value><value>
</value><value>Propeller.com</value><value>
</value><value>Open Directory Project</value><value>
</value><value>Netscape ISP</value><value>
</value><value>People</value><value>
</value><value>Eric J. Bina</value><value>
</value><value>James H. Clark</value><value>
</value><value>Brendan Eich</value><value>
</value><value>Daniel Glazman</value><value>
</value><value>Jamie Zawinski</value><value>
</value><value>Lou Montulli</value><value>
</value><value>Marc Andreessen</value><value>
</value><value>Eric A. Meyer</value><value>
</value><value>Mitchell Baker</value><value>
</value><value>See also</value><value>
</value><value>Gecko</value><value>
</value><value>JSSS</value><value>
</value><value>Mariner</value><value>
</value><value>Netscape 5</value><value>
</value><value>Netscape Public License</value><value>
</value><value>Mozilla</value><value>
</value><value>AOL</value><value>
</value><value>iPlanet</value><value>
</value><value>
</value><value>Authority control</value><value> </value><value>
</value><value>DBLP</value><value>: </value><value>209/2886</value><value>
</value><value>

</value><value>
</value><value>

</value><value>
</value></text><lastUpdated> This page was last edited on 19 November 2018, at 20:14</lastUpdated></item>
<item><url>https://en.wikipedia.org/wiki/Egcs</url><title>GNU Compiler Collection</title><text><value>"Cc1" redirects here. For other uses, see </value><value>CC1 (disambiguation)</value><value>.</value><value>
</value><value>
</value><value>
</value><value>GNU Compiler Collection</value><value>Developer(s)</value><value>GNU Project</value><value>Initial release</value><value>May 23, 1987</value><value>; 31 years ago</value><value> (</value><value>1987-05-23</value><value>)</value><value>[1]</value><value>Stable release</value><value>8.2</value><value>[2]</value><value>
   / July 26, 2018</value><value>; 4 months ago</value><value> (</value><value>2018-07-26</value><value>)</value><value>
</value><value>Repository</value><value>gcc</value><value>.gnu</value><value>.org</value><value>/viewcvs</value><value>/gcc</value><value>/</value><value>
</value><value> </value><value>Written in</value><value>C</value><value>; and </value><value>C++</value><value> since June 1, 2010</value><value>; 8 years ago</value><value> (</value><value>2010-06-01</value><value>)</value><value>[3]</value><value>Operating system</value><value>Cross-platform</value><value>Platform</value><value>GNU</value><value>Type</value><value>Compiler</value><value>License</value><value>GNU GPL 3+</value><value> with GCC Runtime Library Exception</value><value>[4]</value><value>Website</value><value>gcc</value><value>.gnu</value><value>.org</value><value>
</value><value>The </value><value>GNU Compiler Collection</value><value> (</value><value>GCC</value><value>) is a </value><value>compiler</value><value> system produced by the </value><value>GNU Project</value><value> supporting various </value><value>programming languages</value><value>. GCC is a key component of the </value><value>GNU toolchain</value><value> and the standard compiler for most Unix-like operating systems. The </value><value>Free Software Foundation</value><value> (FSF) distributes GCC under the </value><value>GNU General Public License</value><value> (GNU GPL). GCC has played an important role in the growth of </value><value>free software</value><value>, as both a tool and an example.
</value><value>When it was first released in 1987, GCC 1.0 was named the </value><value>GNU C Compiler</value><value> since it only handled the </value><value>C programming language</value><value>.</value><value>[1]</value><value> It was extended to compile </value><value>C++</value><value> in December of that year. </value><value>Front ends</value><value> were later developed for </value><value>Objective-C</value><value>, </value><value>Objective-C++</value><value>, </value><value>Fortran</value><value>, </value><value>Java</value><value>, </value><value>Ada</value><value>, and </value><value>Go</value><value>, among others.</value><value>[5]</value><value>
</value><value>Version 4.5 of the </value><value>OpenMP</value><value> specification is now supported in the C and C++ compilers</value><value>[6]</value><value> and a "much improved" implementation of the </value><value>OpenACC</value><value> 2.0a specification</value><value>[7]</value><value> is also supported.  By default, the current version supports </value><value>gnu++14</value><value>, a superset of </value><value>C++14</value><value>, and </value><value>gnu11</value><value>, a superset of </value><value>C11</value><value>, with strict standard support also available. It also provides experimental support for </value><value>C++17</value><value> and later.
</value><value>GCC has been </value><value>ported</value><value> to a wide variety of </value><value>instruction set architectures</value><value>, and is widely deployed as a tool in the development of both free and </value><value>proprietary software</value><value>. GCC is also available for most </value><value>embedded systems</value><value>,</value><value>[</value><value>citation needed</value><value>]</value><value> including </value><value>ARM</value><value>-based; </value><value>AMCC</value><value>, and </value><value>Freescale</value><value> </value><value>Power Architecture</value><value>-based chips.</value><value>[8]</value><value> The compiler can target a wide variety of platforms.
</value><value>As well as being the official compiler of the </value><value>GNU operating system</value><value>, GCC has been adopted as the standard compiler by many other modern </value><value>Unix-like</value><value> computer </value><value>operating systems</value><value>, including </value><value>Linux</value><value> and the </value><value>BSD</value><value> family, although </value><value>FreeBSD</value><value> and </value><value>macOS</value><value> have moved to the </value><value>LLVM</value><value> system.</value><value>[9]</value><value> Versions are also available for </value><value>Microsoft Windows</value><value> and other operating systems; GCC can compile code for </value><value>Android</value><value> and </value><value>iOS</value><value>.
</value><value>
</value><value>Contents</value><value>
</value><value>
</value><value>1</value><value> </value><value>History</value><value>
</value><value>2</value><value> </value><value>Design</value><value>
</value><value>
</value><value>2.1</value><value> </value><value>Front ends</value><value>
</value><value>2.2</value><value> </value><value>GENERIC and GIMPLE</value><value>
</value><value>2.3</value><value> </value><value>Optimization</value><value>
</value><value>2.4</value><value> </value><value>Back end</value><value>
</value><value>2.5</value><value> </value><value>Features</value><value>
</value><value>
</value><value>
</value><value>3</value><value> </value><value>Languages</value><value>
</value><value>4</value><value> </value><value>Architectures</value><value>
</value><value>5</value><value> </value><value>Development</value><value>
</value><value>6</value><value> </value><value>License</value><value>
</value><value>7</value><value> </value><value>Uses</value><value>
</value><value>8</value><value> </value><value>See also</value><value>
</value><value>9</value><value> </value><value>References</value><value>
</value><value>10</value><value> </value><value>Further reading</value><value>
</value><value>11</value><value> </value><value>External links</value><value>
</value><value>
</value><value>11.1</value><value> </value><value>Official</value><value>
</value><value>11.2</value><value> </value><value>Other</value><value>
</value><value>
</value><value>
</value><value>
</value><value>

</value><value>History</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>In an effort to bootstrap the </value><value>GNU</value><value> operating system, </value><value>Richard Stallman</value><value> asked </value><value>Andrew S. Tanenbaum</value><value>, the author of the </value><value>Amsterdam Compiler Kit</value><value> (also known as the </value><value>Free University</value><value> Compiler Kit) for permission to use that software for GNU. When Tanenbaum advised him that the compiler was not free, and that only the </value><value>Free University</value><value> kit was free, Stallman decided to write a new compiler.</value><value>[10]</value><value> Stallman's initial plan</value><value>[11]</value><value> was to rewrite an existing compiler from </value><value>Lawrence Livermore Laboratory</value><value> from </value><value>Pastel</value><value> to C with some help from </value><value>Len Tower</value><value> and others.</value><value>[12]</value><value> Stallman wrote a new C front end for the Livermore compiler, but then realized that it required megabytes of stack space, an impossibility on a 68000 Unix system with only 64 KB, and concluded he would have to write a new compiler from scratch.</value><value>[11]</value><value> None of the Pastel compiler code ended up in GCC, though Stallman did use the C front end he had written.</value><value>[11]</value><value>
</value><value>GCC was first released March 22, 1987, available by </value><value>FTP</value><value> from </value><value>MIT</value><value>.</value><value>[13]</value><value> Stallman was listed as the author but cited others for their contributions, including Jack Davidson and Christopher Fraser for the idea of using </value><value>RTL</value><value> as an intermediate language, Paul Rubin for writing most of the preprocessor and Leonard Tower for "parts of the parser, RTL generator, RTL definitions, and of the Vax machine description."</value><value>[14]</value><value> Described as the "first free software hit" by </value><value>Salus</value><value>, the GNU compiler arrived just at the time when </value><value>Sun Microsystems</value><value> was unbundling its development tools from </value><value>its operating system</value><value>, selling them separately at a higher combined price than the previous bundle, which led many of Sun's users to buy or download GCC instead of the vendor's tools.</value><value>[15]</value><value> By 1990, GCC supported thirteen computer architectures, was outperforming several vendor compilers, was shipped by </value><value>Data General</value><value> and </value><value>NeXT</value><value> with their workstations and was used by </value><value>Lotus Development Corporation</value><value>.</value><value>[16]</value><value>
</value><value>As GCC was licensed under the GPL, programmers wanting to work in other directions—particularly those writing interfaces for languages other than C—were free to develop their own </value><value>fork</value><value> of the compiler, provided they meet the GPL's terms, including its requirements to distribute </value><value>source code</value><value>. Multiple forks proved inefficient and unwieldy, however, and the difficulty in getting work accepted by the official GCC project was greatly frustrating for many.</value><value>[17]</value><value> The FSF kept such close control on what was added to the official version of GCC 2.x that GCC was used as one example of the "cathedral" development model in </value><value>Eric S. Raymond</value><value>'s essay </value><value>The Cathedral and the Bazaar</value><value>.
</value><value>In 1997, a group of developers formed Experimental/Enhanced GNU Compiler System (EGCS) to merge several experimental forks into a single project.</value><value>[17]</value><value>[18]</value><value> The basis of the merger was a GCC development snapshot taken between the 2.7 and 2.81 releases. Projects merged included g77 (Fortran), PGCC (</value><value>P5</value><value> </value><value>Pentium</value><value>-optimized GCC), many C++ improvements, and many new architectures and </value><value>operating system</value><value> variants.</value><value>[19]</value><value> EGCS development proved considerably more vigorous than GCC development, so much so that the FSF officially halted development on their GCC 2.x compiler, blessed EGCS as the official version of GCC and appointed the EGCS project as the GCC maintainers in April 1999. With the release of GCC 2.95 in July 1999 the two projects were once again united.
</value><value>GCC has since been maintained by a varied group of programmers from around the world under the direction of a steering committee.</value><value>[20]</value><value> It has been ported to more kinds of </value><value>processors</value><value> and operating systems than any other compiler.</value><value>[21]</value><value>[</value><value>unreliable source?</value><value>]</value><value>
</value><value>GCC has been </value><value>ported</value><value> to a wide variety of </value><value>instruction set architectures</value><value>, and is widely deployed as a tool in the development of both free and </value><value>proprietary software</value><value>. GCC is also available for most </value><value>embedded systems</value><value>,</value><value>[</value><value>citation needed</value><value>]</value><value> including </value><value>Symbian</value><value> (called </value><value>gcce</value><value>),</value><value>[22]</value><value> </value><value>ARM</value><value>-based; </value><value>AMCC</value><value>, and </value><value>Freescale</value><value> </value><value>Power Architecture</value><value>-based chips.</value><value>[8]</value><value> The compiler can target a wide variety of platforms, including </value><value>video game consoles</value><value> such as the </value><value>PlayStation 2</value><value>,</value><value>[23]</value><value> Cell SPE of PlayStation 3</value><value>[24]</value><value> and </value><value>Dreamcast</value><value>.</value><value>[25]</value><value>
</value><value>
</value><value>Design</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>  </value><value>To obtain a stable </value><value>ABI</value><value>, like e.g. the </value><value>Linux Standard Base</value><value> aims to procure, the compiler version is important.</value><value>
</value><value>GCC's external interface follows </value><value>Unix</value><value> conventions. Users invoke a language-specific driver program (</value><value>gcc</value><value> for C, </value><value>g++</value><value> for C++, etc.), which interprets </value><value>command arguments</value><value>, calls the actual compiler, runs the </value><value>assembler</value><value> on the output, and then optionally runs the </value><value>linker</value><value> to produce a complete </value><value>executable</value><value> binary.
</value><value>Each of the language compilers is a separate program that reads source code and outputs </value><value>machine code</value><value>. All have a common internal structure. A per-language front end </value><value>parses</value><value> the source code in that language and produces an </value><value>abstract syntax tree</value><value> ("tree" for short).
</value><value>These are, if necessary, converted to the middle end's input representation, called </value><value>GENERIC</value><value> form; the middle end then gradually transforms the program towards its final form. </value><value>Compiler optimizations</value><value> and </value><value>static code analysis</value><value> techniques (such as FORTIFY_SOURCE,</value><value>[26]</value><value> a compiler directive that attempts to discover some </value><value>buffer overflows</value><value>) are applied to the code. These work on multiple representations, mostly the architecture-independent GIMPLE representation and the architecture-dependent </value><value>RTL</value><value> representation. Finally, </value><value>machine code</value><value> is produced using architecture-specific </value><value>pattern matching</value><value> originally based on an algorithm of Jack Davidson and Chris Fraser.
</value><value>GCC was written primarily in </value><value>C</value><value> except for parts of the </value><value>Ada</value><value> front end. The distribution includes the standard libraries for Ada, </value><value>C++</value><value>, and </value><value>Java</value><value> whose code is mostly written in those languages.</value><value>[27]</value><value> On some platforms, the distribution also includes a low-level runtime library, </value><value>libgcc</value><value>, written in a combination of machine-independent C and processor-specific </value><value>machine code</value><value>, designed primarily to handle arithmetic operations that the target processor cannot perform directly.</value><value>[28]</value><value>
</value><value>In May 2010, the GCC steering committee decided to allow use of a </value><value>C++</value><value> compiler to compile GCC.</value><value>[3]</value><value> The compiler was intended to be written in C plus a subset of features from C++. In particular, this was decided so that GCC's developers could use the </value><value>destructors</value><value> and </value><value>generics</value><value> features of C++.</value><value>[29]</value><value>
</value><value>In August 2012, the GCC steering committee announced that GCC now uses C++ as its implementation language.</value><value>[30]</value><value> This means that to build GCC from sources, a C++ compiler is required that understands </value><value>ISO/IEC C++03</value><value> standard.
</value><value>
</value><value>Front ends</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Each </value><value>front end</value><value> uses a parser to produce the </value><value>abstract syntax tree</value><value> of a given </value><value>source file</value><value>. Due to the syntax tree abstraction, source files of any of the different supported languages can be processed by the same </value><value>back end</value><value>. GCC started out using </value><value>LALR parsers</value><value> generated with </value><value>Bison</value><value>, but gradually switched to hand-written </value><value>recursive-descent parsers</value><value>; for C++ in 2004,</value><value>[31]</value><value> and for C and Objective-C in 2006.</value><value>[32]</value><value> Currently</value><value>[</value><value>when?</value><value>]</value><value> all front ends use hand-written recursive-descent parsers.
</value><value>Until recently,</value><value>[</value><value>when?</value><value>]</value><value> the tree representation of the program was not fully independent of the processor being targeted.
</value><value>The meaning of a tree was somewhat different for different language front ends, and front ends could provide their own tree codes. This was simplified with the introduction of GENERIC and GIMPLE, two new forms of language-independent trees that were introduced with the advent of GCC 4.0. GENERIC is more complex, based on the GCC 3.x Java front end's intermediate representation. GIMPLE is a simplified GENERIC, in which various constructs are </value><value>lowered</value><value> to multiple GIMPLE instructions. The </value><value>C</value><value>, </value><value>C++</value><value> and </value><value>Java</value><value> front ends produce GENERIC directly in the front end. Other front ends instead have different intermediate representations after parsing and convert these to GENERIC.
</value><value>In either case, the so-called "gimplifier" then converts this more complex form into the simpler </value><value>SSA</value><value>-based GIMPLE form that is the common language for a large number of powerful language- and architecture-independent global (function scope) optimizations.
</value><value>
</value><value>GENERIC and GIMPLE</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GENERIC</value><value> is an </value><value>intermediate representation</value><value> language used as a "middle end" while compiling source code into </value><value>executable binaries</value><value>. A subset, called </value><value>GIMPLE</value><value>, is targeted by all the front ends of GCC.
</value><value>The middle stage of GCC does all of the code analysis and </value><value>optimization</value><value>, working independently of both the compiled language and the target architecture, starting from the GENERIC</value><value>[33]</value><value> representation and expanding it to </value><value>register transfer language</value><value> (RTL). The GENERIC representation contains only the subset of the imperative </value><value>programming</value><value> constructs optimized by the middle end.
</value><value>In transforming the source code to GIMPLE,</value><value>[34]</value><value> complex </value><value>expressions</value><value> are split into a </value><value>three-address code</value><value> using </value><value>temporary variables</value><value>. This representation was inspired by the SIMPLE representation proposed in the McCAT compiler</value><value>[35]</value><value> by Laurie J. Hendren</value><value>[36]</value><value> for simplifying the analysis and </value><value>optimization</value><value> of </value><value>imperative programs</value><value>.
</value><value>
</value><value>Optimization</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Optimization can occur during any phase of compilation; however, the bulk of optimizations are performed after the syntax and </value><value>semantic analysis</value><value> of the front end and before the </value><value>code generation</value><value> of the back end; thus a common, even though somewhat contradictory, name for this part of the compiler is the "middle end."
</value><value>The exact set of GCC optimizations varies from release to release as it develops, but includes the standard algorithms, such as </value><value>loop optimization</value><value>, </value><value>jump threading</value><value>, </value><value>common subexpression elimination</value><value>, </value><value>instruction scheduling</value><value>, and so forth. The </value><value>RTL</value><value> optimizations are of less importance with the addition of global SSA-based optimizations on </value><value>GIMPLE</value><value> trees,</value><value>[37]</value><value> as RTL optimizations have a much more limited scope, and have less high-level information.
</value><value>Some of these optimizations performed at this level include </value><value>dead code elimination</value><value>, </value><value>partial redundancy elimination</value><value>, </value><value>global value numbering</value><value>, </value><value>sparse conditional constant propagation</value><value>, and </value><value>scalar replacement of aggregates</value><value>. Array dependence based optimizations such as </value><value>automatic vectorization</value><value> and </value><value>automatic parallelization</value><value> are also performed. </value><value>Profile-guided optimization</value><value> is also possible.</value><value>[38]</value><value>
</value><value>
</value><value>Back end</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The GCC's back end is partly specified by </value><value>preprocessor macros</value><value> and functions specific to a target architecture, for instance to define its </value><value>endianness</value><value>, </value><value>word size</value><value>, and </value><value>calling conventions</value><value>. The front part of the back end uses these to help decide RTL generation, so although GCC's RTL is nominally processor-independent, the initial sequence of abstract instructions is already adapted to the target. At any moment, the actual RTL instructions forming the program representation have to comply with the </value><value>machine description</value><value> of the target architecture.
</value><value>The machine description file contains RTL patterns, along with operand constraints, and code snippets to output the final assembly. The constraints indicate that a particular RTL pattern might only apply (for example) to certain hardware registers, or (for example) allow immediate operand offsets of only a limited size (</value><value>e.g.</value><value> 12, 16, 24, … bit offsets, etc.). During RTL generation, the constraints for the given target architecture are checked. In order to issue a given snippet of RTL, it must match one (or more) of the RTL patterns in the machine description file, and satisfy the constraints for that pattern; otherwise, it would be impossible to convert the final RTL into machine code.
</value><value>Towards the end of compilation, valid RTL is reduced to a </value><value>strict</value><value> form in which each instruction refers to real machine registers and a pattern from the target's machine description file. Forming strict RTL is a complicated task; an important step is </value><value>register allocation</value><value>, where real hardware registers are chosen to replace the initially assigned pseudo-registers. This is followed by a "reloading" phase; any pseudo-registers that were not assigned a real hardware register are 'spilled' to the stack, and RTL to perform this spilling is generated. Likewise, offsets that are too large to fit into an actual instruction must be broken up and replaced by RTL sequences that will obey the offset constraints.
</value><value>In the final phase, the machine code is built by calling a small snippet of code, associated with each pattern, to generate the real instructions from the target's </value><value>instruction set</value><value>, using the final registers, offsets, and addresses chosen during the reload phase. The assembly-generation snippet may be just a string, in which case a simple string substitution of the registers, offsets, and/or addresses into the string is performed. The assembly-generation snippet may also be a short block of C code, performing some additional work, but ultimately returning a string containing the valid assembly code.
</value><value>
</value><value>Features</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Some features of GCC include:
</value><value>
</value><value>Link-time optimization</value><value> optimizes across object file boundaries to directly improve the linked binary. Link-time optimization relies on an intermediate file containing the serialization of some </value><value>Gimple</value><value> representation included in the object file.</value><value>[</value><value>citation needed</value><value>]</value><value> The file is generated alongside the object file during source compilation. Each source compilation generates a separate object file and link-time helper file. When the object files are linked, the compiler is executed again and uses the helper files to optimize code across the separately compiled object files.</value><value>
</value><value>Plugins</value><value> can extend the GCC compiler directly.</value><value>[39]</value><value> Plugins allow a stock compiler to be tailored to specific needs by external code loaded as plugins. For example, plugins can add, replace, or even remove middle-end passes operating on </value><value>Gimple</value><value> representations.</value><value>[40]</value><value> Several GCC plugins have already been published, notably the GCC Python plugin, which links against libpython, and allows one to invoke arbitrary Python scripts from inside the compiler. The aim is to allow GCC plugins to be written in Python. The MELT plugin provides a high-level </value><value>Lisp</value><value>-like language to extend GCC.</value><value>[41]</value><value>
</value><value>"C++ </value><value>transactional memory</value><value> when compiling with -fgnu-tm."</value><value>[6]</value><value>[42]</value><value>
</value><value>Languages</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The standard compiler releases since 7 include front ends for </value><value>C</value><value> (</value><value>gcc</value><value>), </value><value>C++</value><value> (</value><value>g++</value><value>), </value><value>Objective-C</value><value>, </value><value>Objective-C++</value><value>, </value><value>Fortran</value><value> (</value><value>gfortran</value><value>), </value><value>Ada</value><value> (</value><value>GNAT</value><value>), and </value><value>Go</value><value> (</value><value>gccgo</value><value>).</value><value>[43]</value><value> A popular parallel language extension, </value><value>OpenMP</value><value>, is also supported. Version 5.0 added support for </value><value>Cilk Plus</value><value>, and since version 5.1, there is preliminary support for </value><value>OpenACC</value><value>.</value><value>[44]</value><value> Versions prior to GCC 7 also supported </value><value>Java</value><value> (</value><value>gcj</value><value>), allowing compilation of Java to native machine code.</value><value>[45]</value><value>
</value><value>The Fortran front end was </value><value>g77</value><value> before version 4.0, which only supports </value><value>FORTRAN 77</value><value>. In newer versions, </value><value>g77</value><value> is dropped in favor of the new </value><value>GNU Fortran</value><value> front end (retaining most of g77's language extensions) that supports </value><value>Fortran 95</value><value> and large parts of </value><value>Fortran 2003</value><value> and </value><value>Fortran 2008</value><value> as well.</value><value>[46]</value><value>[47]</value><value> A front-end for </value><value>CHILL</value><value> was dropped due to a lack of maintenance.</value><value>[48]</value><value>
</value><value>Third-party front ends exist for </value><value>Pascal</value><value> (</value><value>gpc</value><value>), </value><value>Modula-2</value><value>, </value><value>Modula-3</value><value>, </value><value>PL/I</value><value>, </value><value>D</value><value> (</value><value>gdc</value><value>),</value><value>[49]</value><value> and </value><value>VHDL</value><value> (</value><value>ghdl</value><value>).
</value><value>A few experimental branches exist to support additional languages, such as the GCC </value><value>UPC</value><value> compiler</value><value>[50]</value><value> for </value><value>Unified Parallel C</value><value>.
</value><value>
</value><value>Architectures</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GCC target processor families as of version 4.3 include:
</value><value>
</value><value>
</value><value>Alpha</value><value>
</value><value>ARM</value><value>
</value><value>AVR</value><value>
</value><value>Blackfin</value><value>
</value><value>Epiphany</value><value> (GCC 4.8)</value><value>
</value><value>H8/300</value><value>
</value><value>HC12</value><value>
</value><value>IA-32</value><value> (</value><value>x86</value><value>)</value><value>
</value><value>IA-64</value><value> (Intel Itanium)</value><value>
</value><value>MIPS</value><value>
</value><value>Motorola 68000</value><value>
</value><value>PA-RISC</value><value>
</value><value>PDP-11</value><value>
</value><value>PowerPC</value><value>
</value><value>R8C</value><value> / </value><value>M16C</value><value> / </value><value>M32C</value><value>
</value><value>SPARC</value><value>
</value><value>SPU</value><value>
</value><value>SuperH</value><value>
</value><value>System/390</value><value> / </value><value>zSeries</value><value>
</value><value>VAX</value><value>
</value><value>x86-64</value><value>
</value><value>
</value><value>Lesser-known target processors supported in the standard release have included:
</value><value>
</value><value>
</value><value>68HC11</value><value>
</value><value>A29K</value><value>
</value><value>CR16</value><value>
</value><value>C6x</value><value>
</value><value>D30V</value><value>
</value><value>DSP16xx</value><value>
</value><value>ETRAX CRIS</value><value>
</value><value>FR-30</value><value>
</value><value>FR-V</value><value>
</value><value>Intel i960</value><value>
</value><value>IP2000</value><value>
</value><value>M32R</value><value>
</value><value>MCORE</value><value>
</value><value>MIL-STD-1750A</value><value>
</value><value>MMIX</value><value>
</value><value>MN10200</value><value>
</value><value>MN10300</value><value>
</value><value>Motorola 88000</value><value>
</value><value>NS32K</value><value>
</value><value>ROMP</value><value>
</value><value>RL78</value><value>
</value><value>Stormy16</value><value>
</value><value>V850</value><value>
</value><value>Xtensa</value><value>
</value><value>
</value><value>Additional processors have been supported by GCC versions maintained separately from the FSF version:
</value><value>
</value><value>
</value><value>Cortus APS3</value><value>
</value><value>ARC</value><value>
</value><value>AVR32</value><value>
</value><value>C166</value><value> and </value><value>C167</value><value>
</value><value>D10V</value><value>
</value><value>EISC</value><value>
</value><value>eSi-RISC</value><value>
</value><value>Hexagon</value><value>[51]</value><value>
</value><value>LatticeMico32</value><value>
</value><value>LatticeMico8</value><value>
</value><value>MeP</value><value>
</value><value>MicroBlaze</value><value>
</value><value>Motorola 6809</value><value>
</value><value>MSP430</value><value>
</value><value>NEC SX architecture</value><value>[52]</value><value>
</value><value>Nios II</value><value> and </value><value>Nios</value><value>
</value><value>OpenRISC</value><value>
</value><value>PDP-10</value><value>
</value><value>PIC24/dsPIC</value><value>
</value><value>PIC32</value><value>
</value><value>Propeller</value><value>
</value><value>RISC-V</value><value>
</value><value>Saturn</value><value> (HP48XGCC)</value><value>
</value><value>System/370</value><value>
</value><value>TIGCC</value><value> (</value><value>m68k</value><value> variant)</value><value>
</value><value>TriCore</value><value>
</value><value>Z8000</value><value>
</value><value>ZPU</value><value>
</value><value>
</value><value>The </value><value>gcj</value><value> Java compiler can target either a native machine language architecture or the </value><value>Java virtual machine</value><value>'s </value><value>Java bytecode</value><value>.</value><value>[53]</value><value> When </value><value>retargeting</value><value> GCC to a new platform, </value><value>bootstrapping</value><value> is often used.
</value><value>
</value><value>Development</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>The current stable version of GCC is 8.2, which was released on July 26, 2018.</value><value>[54]</value><value>
</value><value>As of version 4.8, GCC is implemented in C++.</value><value>[55]</value><value>
</value><value>GCC 4.6 supports many new</value><value>[</value><value>when?</value><value>]</value><value> </value><value>Objective-C</value><value> features, such as declared and synthesized properties, dot syntax, fast enumeration, optional protocol methods, method/protocol/class attributes, class extensions and a new GNU Objective-C runtime API. It also supports the </value><value>Go programming language</value><value> and includes the </value><value>libquadmath</value><value> library, which provides </value><value>quadruple-precision</value><value> mathematical functions on targets supporting the </value><value>__float128</value><value> datatype. The library is used to provide the </value><value>REAL(16)</value><value> type in GNU </value><value>Fortran</value><value> on such targets.
</value><value>GCC uses many standard tools in its build, including </value><value>Perl</value><value>, </value><value>Flex</value><value>, </value><value>Bison</value><value>, and other common tools. In addition it currently requires three additional libraries to be present in order to build: </value><value>GMP</value><value>, </value><value>MPC</value><value>, and </value><value>MPFR</value><value>.
</value><value>The trunk concentrates the major part of the development efforts, where new features are implemented and tested.
</value><value>
</value><value>License</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>This section </value><value>needs expansion</value><value>. </value><value>You can help by </value><value>adding to it</value><value>.</value><value>  </value><value>(April 2016)</value><value>
</value><value>The </value><value>GCC runtime exception</value><value> permits compilation of </value><value>proprietary</value><value> and </value><value>free software</value><value> programs with GCC and usage of free software plugins.</value><value>[56]</value><value> The availability of this exception does not imply any general presumption that third-party software is unaffected by the copyleft requirements of the license of GCC.
</value><value>
</value><value>Uses</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>This section </value><value>needs expansion</value><value>. </value><value>You can help by </value><value>adding to it</value><value>.</value><value>  </value><value>(April 2016)</value><value>
</value><value>Several companies make a business out of supplying and supporting GCC ports to various platforms.</value><value>[57]</value><value>
</value><value>
</value><value>Linux</value><value>
</value><value>Wind River Systems</value><value>
</value><value>Arm Holdings</value><value>
</value><value>See also</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>Free software portal</value><value>
</value><value>Computer programming portal</value><value>
</value><value>List of compilers</value><value>
</value><value>MinGW</value><value>
</value><value>C++ concepts</value><value>, an extension of the C++ standard. This extension is supported exclusively by GCC.</value><value>
</value><value>References</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"GCC Releases"</value><value>. GNU Project</value><value>. Retrieved </value><value>2006-12-27</value><value>.</value><value>.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output q{quotes:"\"""\"""'""'"}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-limited a,.mw-parser-output .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png")no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://gcc.gnu.org/ml/gcc/2018-07/msg00378.html</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"GCC allows C++ – to some degree"</value><value>. </value><value>The H</value><value>. June 1, 2010.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC Runtime Library Exception"</value><value>. Retrieved </value><value>2013-02-28</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Programming Languages Supported by GCC"</value><value>. GNU Project</value><value>. Retrieved </value><value>2014-06-23</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"GCC 6 Release Series"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"OpenACC"</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>"Linux Board Support Packages"</value><value>. Retrieved </value><value>2008-08-07</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>http://llvm.org/Users.html</value><value>
</value><value>
</value><value>^</value><value> </value><value>von Hagen, William (2006). </value><value>The Definitive Guide to GCC</value><value>. Definitive Guides (2nd ed.). Apress. p. XXVII. </value><value>ISBN</value><value> </value><value>978-1-4302-0219-6</value><value>. </value><value>So he wrote to VUCK's author asking if GNU could use it. Evidently, VUCK's developer was uncooperative, responding that the university was free but that the compiler was not.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>c</value><value> </value><value>Stallman, Richard (September 20, 2011). </value><value>"About the GNU Project"</value><value>. The GNU Project</value><value>. Retrieved </value><value>October 9,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Puzo, Jerome E., ed. (February 1986). </value><value>"Gnu's Zoo"</value><value>. </value><value>GNU'S Bulletin</value><value>. Free Software Foundation. </value><value>1</value><value> (1)</value><value>. Retrieved </value><value>2007-08-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Richard M. Stallman (forwarded by Leonard H. Tower, Jr.) (March 22, 1987). </value><value>"GNU C compiler beta test release"</value><value>. </value><value>Newsgroup</value><value>: </value><value>comp.lang.c</value><value>. Retrieved </value><value>October 9,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Stallman, Richard M. (June 22, 2001) [First published 1988], </value><value>"Contributors to GNU CC"</value><value>, </value><value>Using and Porting the GNU Compiler Collection (GCC)</value><value>, Free Software Foundation, Inc., p. 7</value><value>, retrieved </value><value>June 18,</value><value> 2015</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Salus, Peter H.</value><value> (2005). "Chapter 10. SUN and gcc". </value><value>The Daemon, the Gnu and the Penguin</value><value>. </value><value>Groklaw</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Garfinkel, Simson L.</value><value> (6 August 1990). </value><value>"Get ready for GNU software"</value><value>. </value><value>Computerworld</value><value>.</value><value>
</value><value>
</value><value>^ </value><value>a</value><value> </value><value>b</value><value> </value><value>Henkel-Wallace, David (August 15, 1997), </value><value>A new compiler project to merge the existing GCC forks</value><value>, retrieved </value><value>May 25,</value><value> 2012</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Pentium Compiler FAQ"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The Short History of GCC development"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC Steering Committee"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Linux Information Project"</value><value>. LINFO</value><value>. Retrieved </value><value>2010-04-27</value><value>. </value><value>The GCC has been ported to (i.e., modified to run on) more than 60 platforms, which is more than for any other compiler.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Symbian GCC Improvement Project"</value><value>. Retrieved </value><value>2007-11-08</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"setting up gcc as a cross-compiler"</value><value>. </value><value>ps2stuff</value><value>. 2002-06-08. Archived from </value><value>the original</value><value> on December 11, 2008</value><value>. Retrieved </value><value>2008-12-12</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://gcc.gnu.org/wiki/CompileFarm</value><value>
</value><value>
</value><value>^</value><value> </value><value>"sh4 g++ guide"</value><value>. Archived from </value><value>the original</value><value> on 2002-12-20</value><value>. Retrieved </value><value>2008-12-12</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Security Features: Compile Time Buffer Checks (FORTIFY_SOURCE)"</value><value>. fedoraproject.org</value><value>. Retrieved </value><value>2009-03-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"languages used to make GCC"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC Internals"</value><value>. GCC.org</value><value>. Retrieved </value><value>March 1,</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"An email by Richard Stallman on emacs-devel"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC 4.8 Release Series: Changes, New Features, and Fixes"</value><value>. Retrieved </value><value>October 4,</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC 3.4 Release Series Changes, New Features, and Fixes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC 4.1 Release Series Changes, New Features, and Fixes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GENERIC in GNU Compiler Collection Internals"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GIMPLE in GNU Compiler Collection Internals"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"McCAT"</value><value>. Archived from the original on August 12, 2004</value><value>. Retrieved </value><value>September 14,</value><value> 2017</value><value>.</value><value>CS1 maint: BOT: original-url status unknown (</value><value>link</value><value>) </value><value>
</value><value>
</value><value>^</value><value> </value><value>"Laurie J. Hendren"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Novillo, Diego (December 2004). </value><value>"From Source to Binary: The Inner Workings of GCC"</value><value>. </value><value>Red Hat Magazine</value><value>. Archived from </value><value>the original</value><value> on April  1, 2009.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Profile-guided optimization is demonstrated here"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Plugins"</value><value>. </value><value>GCC online documentation</value><value>. Retrieved </value><value>July 8,</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>Starynkevitch, Basile. </value><value>"GCC plugins thru the MELT example"</value><value> </value><value>(PDF)</value><value>. Retrieved </value><value>2014-04-10</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"About GCC MELT"</value><value>. Retrieved </value><value>July 8,</value><value> 2013</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Transactional Memory in GCC"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC Front Ends"</value><value>. gnu.org</value><value>. Retrieved </value><value>November 25,</value><value> 2011</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC 5 Release Series"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC 7 Release Series"</value><value>. gnu.org</value><value>. Retrieved </value><value>March 20,</value><value> 2018</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Chart of Fortran 2003 Features supported by GNU Fortran"</value><value>. </value><value>GNU</value><value>. Retrieved </value><value>2009-06-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Chart of Fortran 2008 Features supported by GNU Fortran"</value><value>. </value><value>GNU</value><value>. Retrieved </value><value>2009-06-25</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"PATCH] Remove chill"</value><value>. </value><value>gcc.gnu.org</value><value>. Retrieved </value><value>July 29,</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"gdc project on bitbucket"</value><value>. Retrieved </value><value>July 3,</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC UPC (GCC Unified Parallel C)"</value><value>. Intrepid Technology, Inc. 2006-02-20</value><value>. Retrieved </value><value>2009-03-11</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"Hexagon Project Wiki"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"sx-gcc: port gcc to nec sx vector cpu"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"The GNU Compiler for the Java Programming Language"</value><value>. Archived from </value><value>the original</value><value> on May  9, 2007</value><value>. Retrieved </value><value>April 22,</value><value> 2010</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>https://www.gnu.org/software/gcc/releases.html</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC 4.8 Release Series: Changes, New Features, and Fixes"</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"GCC Runtime Exception"</value><value>. FSF</value><value>. Retrieved </value><value>2014-04-10</value><value>.</value><value>
</value><value>
</value><value>^</value><value> </value><value>"FSF Service Directory"</value><value>.</value><value>
</value><value>
</value><value>
</value><value>Further reading</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Using the GNU Compiler Collection (GCC)</value><value>, Free Software Foundation, 2008.</value><value>
</value><value>GNU Compiler Collection (GCC) Internals</value><value>, Free Software Foundation, 2008.</value><value>
</value><value>An Introduction to GCC</value><value>, Network Theory Ltd., 2004 (Revised August 2005). </value><value>ISBN</value><value> </value><value>0-9541617-9-3</value><value>.</value><value>
</value><value>Arthur Griffith, </value><value>GCC: The Complete Reference</value><value>. McGrawHill / Osborne, 2002. </value><value>ISBN</value><value> </value><value>0-07-222405-3</value><value>.</value><value>
</value><value>External links</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikimedia Commons has media related to </value><value>GCC</value><value>.</value><value>
</value><value>
</value><value>
</value><value>
</value><value>Wikibooks has a book on the topic of: </value><value>GNU C Compiler Internals</value><value>
</value><value>Official</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>Official website</value><value> </value><value>
</value><value>GCC Release Timeline</value><value>
</value><value>GCC Development Plan</value><value>
</value><value>Other</value><value>[</value><value>edit</value><value>]</value><value>
</value><value>GCC optimisations</value><value>
</value><value>Collection of GCC 4.0.2 architecture and internals documents</value><value> at I.I.T. Bombay</value><value>
</value><value>Kerner, Sean Michael (March 2, 2006). </value><value>"New GCC Heavy on Optimization"</value><value>. internetnews.com</value><value>
</value><value>Kerner, Sean Michael (April 22, 2005). </value><value>"Open Source GCC 4.0: Older, Faster"</value><value>. internetnews.com</value><value>
</value><value>From Source to Binary: The Inner Workings of GCC</value><value>, by Diego Novillo, </value><value>Red Hat Magazine</value><value>, December 2004</value><value>
</value><value>A 2003 paper on GENERIC and GIMPLE</value><value>
</value><value>Marketing Cygnus Support</value><value>, an essay covering GCC development for the 1990s, with 30 monthly reports for in the "Inside Cygnus Engineering" section near the end</value><value>
</value><value>EGCS 1.0 announcement</value><value>
</value><value>EGCS 1.0 features list</value><value>
</value><value>Fear of Forking</value><value>, an essay by Rick Moen recording seven well-known forks, including the GCC/EGCS one</value><value>
</value><value>v</value><value>t</value><value>e</value><value>GNU Project</value><value>History</value><value>
</value><value>GNU Manifesto</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>Europe</value><value>
</value><value>India</value><value>
</value><value>Latin America</value><value>
</value><value>History of free software</value><value>
</value><value>Licenses</value><value>
</value><value>GNU General Public License</value><value>
</value><value>GNU Lesser General Public License</value><value>
</value><value>GNU Affero General Public License</value><value>
</value><value>GNU Free Documentation License</value><value>
</value><value>GPL linking exception</value><value>
</value><value>Software</value><value>
</value><value>GNU</value><value> (</value><value>variants</value><value>)</value><value>
</value><value>Hurd</value><value>
</value><value>Linux-libre</value><value>
</value><value>glibc</value><value>
</value><value>Bash</value><value>
</value><value>coreutils</value><value>
</value><value>findutils</value><value>
</value><value>Build System</value><value>
</value><value>GCC</value><value>
</value><value>binutils</value><value>
</value><value>GDB</value><value>
</value><value>GRUB</value><value>
</value><value>GNOME</value><value>
</value><value>GNUstep</value><value>
</value><value>GIMP</value><value>
</value><value>GNU Ring</value><value>
</value><value>GNU Emacs</value><value>
</value><value>GNU TeXmacs</value><value>
</value><value>GNU Octave</value><value>
</value><value>GNU R</value><value>
</value><value>GSL</value><value>
</value><value>GMP</value><value>
</value><value>GNU Electric</value><value>
</value><value>GNU Archimedes</value><value>
</value><value>GNUnet</value><value>
</value><value>GNU Privacy Guard</value><value>
</value><value>Gnuzilla</value><value> (</value><value>IceCat</value><value>)</value><value>
</value><value>GNU Health</value><value>
</value><value>GNUmed</value><value>
</value><value>GNU LilyPond</value><value>
</value><value>GNU Go</value><value>
</value><value>GNU Chess</value><value>
</value><value>Gnash</value><value>
</value><value>Guix</value><value>
</value><value>Guix System Distribution</value><value>
</value><value>more...</value><value>
</value><value>Public</value><value>speakers</value><value>
</value><value>Alexandre Oliva</value><value>
</value><value>Benjamin Mako Hill</value><value>
</value><value>Bradley M. Kuhn</value><value>
</value><value>Eben Moglen</value><value>
</value><value>Federico Heinz</value><value>
</value><value>Georg C. F. Greve</value><value>
</value><value>John Sullivan</value><value>
</value><value>Loïc Dachary</value><value>
</value><value>Matt Lee</value><value>
</value><value>Nagarjuna G.</value><value>
</value><value>Ricardo Galli</value><value>
</value><value>Richard Stallman</value><value>
</value><value>Robert J. Chassell</value><value>
</value><value>Other topics</value><value>
</value><value>GNU/Linux naming controversy</value><value>
</value><value>Revolution OS</value><value>
</value><value>Free Software Foundation anti-Windows campaigns</value><value>
</value><value>Defective by Design</value><value>
</value><value>
</value><value>v</value><value>t</value><value>e</value><value>Free and open-source software</value><value>General</value><value>
</value><value>Alternative terms for free software</value><value>
</value><value>Comparison of open-source and closed-source software</value><value>
</value><value>Comparison of source code hosting facilities</value><value>
</value><value>Free software</value><value>
</value><value>Free software project directories</value><value>
</value><value>Gratis versus libre</value><value>
</value><value>Long-term support</value><value>
</value><value>Open-source software</value><value>
</value><value>Open-source software development</value><value>
</value><value>Outline</value><value>
</value><value>Software</value><value>packages</value><value>
</value><value>Audio</value><value>
</value><value>Bioinformatics</value><value>
</value><value>Codecs</value><value>
</value><value>Collaboration</value><value>
</value><value>Configuration management</value><value>
</value><value>Device drivers</value><value>
</value><value>Graphics</value><value>
</value><value>Wireless</value><value>
</value><value>Geophysics</value><value>
</value><value>Health</value><value>
</value><value>Mathematics</value><value>
</value><value>Operating systems</value><value>
</value><value>Programming languages</value><value>
</value><value>Routing</value><value>
</value><value>Statistics</value><value>
</value><value>Television</value><value>
</value><value>Video games</value><value>
</value><value>Web applications</value><value>
</value><value>Content management systems</value><value>
</value><value>E-commerce</value><value>
</value><value>Word processors</value><value>
</value><value>Android apps</value><value>
</value><value>iOS apps</value><value>
</value><value>Commercial</value><value>
</value><value>Trademarked</value><value>
</value><value>Formerly proprietary</value><value>
</value><value>Community</value><value>
</value><value>Free software movement</value><value>
</value><value>History</value><value>
</value><value>Open-source software movement</value><value>
</value><value>Organizations</value><value>
</value><value>Events</value><value>
</value><value>Licenses</value><value>
</value><value>AFL</value><value>
</value><value>Apache</value><value>
</value><value>APSL</value><value>
</value><value>Artistic</value><value>
</value><value>Beerware</value><value>
</value><value>Boost</value><value>
</value><value>BSD</value><value>
</value><value>CC0</value><value>
</value><value>CDDL</value><value>
</value><value>EPL</value><value>
</value><value>Free Software Foundation</value><value>
</value><value>GNU GPL</value><value>
</value><value>GNU LGPL</value><value>
</value><value>ISC</value><value>
</value><value>MIT</value><value>
</value><value>MPL</value><value>
</value><value>Ms-PL/RL</value><value>
</value><value>Python</value><value>
</value><value>Python Software Foundation License</value><value>
</value><value>Sleepycat</value><value>
</value><value>Unlicense</value><value>
</value><value>WTFPL</value><value>
</value><value>zlib</value><value>
</value><value>Types and</value><value> standards</value><value>
</value><value>Comparison of free and open-source software licenses</value><value>
</value><value>Contributor License Agreement</value><value>
</value><value>Copyleft</value><value>
</value><value>Debian Free Software Guidelines</value><value>
</value><value>Definition of Free Cultural Works</value><value>
</value><value>Free license</value><value>
</value><value>The Free Software Definition</value><value>
</value><value>The Open Source Definition</value><value>
</value><value>Open-source license</value><value>
</value><value>Permissive software licence</value><value>
</value><value>Public domain</value><value>
</value><value>Viral license</value><value>
</value><value>
</value><value>Challenges</value><value>
</value><value>Binary blob</value><value>
</value><value>Digital rights management</value><value>
</value><value>Hardware restrictions</value><value>
</value><value>License proliferation</value><value>
</value><value>Mozilla software rebranding</value><value>
</value><value>Proprietary software</value><value>
</value><value>SCO/Linux controversies</value><value>
</value><value>Secure boot</value><value>
</value><value>Software patents</value><value>
</value><value>Software security</value><value>
